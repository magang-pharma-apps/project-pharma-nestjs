var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AllExceptionsFilter.html",[0,0.197,1,2.584]],["body/classes/AllExceptionsFilter.html",[0,0.264,1,3.455,2,0.873,3,0.159,4,0.139,5,0.139,6,2.749,7,4.255,8,4.875,9,0.266,10,1.46,11,3.651,12,4.255,13,4.35,14,5.258,15,0.337,16,3.583,17,1.221,18,0.019,19,0.553,20,0.337,21,0.873,22,4.875,23,1.057,24,3.08,25,0.22,26,4.35,27,1.874,28,0.832,29,4.255,30,2.303,31,0.22,32,2.302,33,1.765,34,4.35,35,2.065,36,3.958,37,5.092,38,0.723,39,4.692,40,1.531,41,1.874,42,3.08,43,4.255,44,4.255,45,4.255,46,4.255,47,1.531,48,3.08,49,1.283,50,2.416,51,3.08,52,3.08,53,3.08,54,1.754,55,4.255,56,3.08,57,3.08,58,3.08,59,2.749,60,2.501,61,3.08,62,1.221,63,3.08,64,3.08,65,0.012,66,0.012]],["title/controllers/AppController.html",[67,1.325,68,2.584]],["body/controllers/AppController.html",[0,0.265,3,0.221,4,0.193,5,0.193,9,0.369,10,1.807,15,0.467,18,0.019,23,1.465,25,0.272,28,1.153,31,0.221,38,0.896,47,1.537,65,0.015,66,0.015,67,2.194,68,4.278,69,1.967,70,4.27,71,5.967,72,0.899,73,4.967,74,3.968,75,4.27,76,2.769,77,2.186,78,4.967]],["title/modules/AppModule.html",[79,1.629,80,2.584]],["body/modules/AppModule.html",[0,0.198,3,0.165,4,0.144,5,0.144,18,0.019,25,0.322,28,0.864,31,0.165,34,2.856,65,0.012,66,0.012,68,4.038,69,2.012,74,4.009,75,3.2,79,2.546,80,5.097,81,1.948,82,1.948,83,2.222,84,2.222,85,1.948,86,3.453,87,2.222,88,3.2,89,3.2,90,3.2,91,4.317,92,4.317,93,4.317,94,3.033,95,2.222,96,2.222,97,3.723,98,3.267,99,3.723,100,2.393,101,1.553,102,3.723,103,3.723,104,3.723,105,3.723,106,3.2,107,3.2,108,3.2,109,3.723,110,3.723,111,3.723,112,3.267,113,3.723,114,3.723,115,3.723,116,3.723,117,3.723,118,3.723]],["title/injectables/AppService.html",[74,2.21,119,1.202]],["body/injectables/AppService.html",[0,0.276,3,0.23,4,0.201,5,0.201,9,0.385,10,1.854,15,0.487,18,0.018,23,1.527,25,0.23,28,1.202,31,0.23,38,0.919,47,1.602,65,0.015,66,0.015,71,6.054,74,3.753,119,2.041,120,2.551,121,4.451,122,5.179,123,5.179,124,5.179]],["title/controllers/AuthController.html",[67,1.325,125,2.584]],["body/controllers/AuthController.html",[0,0.108,3,0.09,4,0.079,5,0.234,9,0.151,10,0.954,11,1.211,15,0.433,17,1.571,18,0.019,19,0.712,20,0.55,21,1.123,23,1.359,25,0.28,27,1.061,28,0.471,30,1.304,31,0.09,32,0.943,35,2.44,38,0.296,41,1.061,47,1.426,49,1.65,50,2.326,54,0.628,62,1.376,65,0.008,66,0.008,67,0.726,69,0.803,72,0.835,76,1.131,125,2.259,126,1.744,127,1.211,128,2.029,129,2.544,130,4.209,131,2.782,132,4.614,133,2.782,134,2.029,135,3.471,136,2.029,137,1.744,138,2.029,139,2.029,140,3.621,141,1.744,142,2.963,143,3.237,144,2.029,145,2.029,146,1.304,147,1.211,148,1.191,149,2.029,150,2.029,151,1.744,152,2.963,153,3.237,154,2.029,155,2.483,156,1.304,157,1.211,158,2.782,159,1.211,160,2.782,161,2.411,162,1.744,163,1.744,164,2.782,165,1.744,166,1.744,167,1.556,168,1.211,169,2.782,170,1.744,171,2.081,172,1.211,173,0.449,174,2.259,175,2.029,176,0.999,177,1.744,178,1.744,179,1.211,180,2.029,181,1.556,182,1.744,183,2.029,184,2.029,185,2.029,186,2.029,187,2.239,188,2.029,189,2.029,190,2.029,191,2.029,192,1.932,193,1.932,194,2.029,195,2.029,196,3.471,197,3.237,198,2.029,199,2.029,200,1.744,201,1.744,202,1.556,203,0.406,204,1.744,205,1.744,206,1.556,207,2.782,208,2.782,209,2.782,210,2.029,211,1.744,212,1.744,213,2.029,214,3.471,215,3.471,216,2.782,217,1.744,218,1.744,219,1.744,220,2.782,221,1.744,222,1.744,223,2.782,224,1.744,225,3.471,226,1.744,227,1.744,228,1.744,229,0.846,230,1.744,231,1.416,232,1.131,233,1.744,234,1.744,235,2.782,236,1.556,237,1.744,238,2.029,239,2.029,240,3.237,241,2.029,242,2.029,243,2.029,244,2.029,245,1.932,246,2.029,247,1.744,248,2.252,249,3.471,250,2.029,251,1.416,252,1.744,253,3.515,254,2.782,255,2.782,256,1.744,257,2.029,258,2.029,259,1.416]],["title/classes/AuthGuard.html",[0,0.197,176,1.824]],["body/classes/AuthGuard.html",[0,0.234,2,1.071,3,0.195,4,0.17,5,0.17,9,0.327,10,1.673,15,0.533,17,1.934,18,0.019,19,0.876,20,0.413,21,1.382,23,1.673,25,0.252,28,1.02,31,0.195,47,1.755,62,1.498,65,0.014,66,0.014,176,3.095,245,4.103,253,4.386,260,3.778,261,2.497,262,5.675,263,5.675,264,5.675,265,5.675,266,6.64,267,4.396,268,4.396,269,5.675,270,4.396,271,5.675,272,4.396,273,3.068,274,4.396,275,2.3]],["title/modules/AuthModule.html",[79,1.629,91,2.38]],["body/modules/AuthModule.html",[0,0.182,3,0.151,4,0.132,5,0.132,18,0.019,25,0.328,28,0.791,31,0.151,65,0.012,66,0.012,69,1.893,79,2.43,81,1.784,82,1.784,83,2.035,84,2.035,85,1.784,86,3.296,87,2.035,91,4.534,94,2.854,95,2.035,96,2.035,98,2.192,100,2.192,101,1.422,125,3.855,161,3.901,162,2.931,232,1.901,245,2.035,273,2.38,276,2.931,277,2.931,278,4.201,279,3.901,280,3.41,281,3.855,282,3.41,283,3.41,284,3.41,285,2.615,286,2.192,287,2.615,288,3.41,289,2.854,290,2.931,291,2.224,292,1.901,293,2.931,294,3.41,295,3.41,296,3.41,297,3.41,298,3.41,299,2.854,300,2.931,301,4.782,302,3.41,303,3.41,304,3.41,305,3.41,306,2.615,307,3.41,308,3.41,309,3.41,310,2.615,311,2.615,312,3.41,313,2.931,314,2.931]],["title/injectables/AuthService.html",[119,1.202,161,2.21]],["body/injectables/AuthService.html",[0,0.104,3,0.086,4,0.075,5,0.075,9,0.144,10,0.922,11,1.16,15,0.52,17,1.887,18,0.019,19,0.855,20,0.52,21,1.349,23,1.633,25,0.271,26,2.399,27,1.017,28,0.451,31,0.086,33,1.54,35,2.197,37,2.399,38,0.868,39,2.399,41,1.636,47,1.629,49,1.764,50,2.237,62,1.887,65,0.008,66,0.008,101,0.811,119,1.015,120,0.957,129,2.623,130,4.258,131,3.373,132,2.688,133,3.865,141,2.688,142,2.891,151,2.688,152,2.891,161,1.867,163,1.67,178,1.67,181,1.491,187,2.545,196,2.688,229,1.876,245,3.548,247,1.67,248,1.083,249,1.67,251,1.356,253,2.183,254,1.67,255,1.67,256,2.688,275,2.896,285,1.491,286,1.249,287,1.491,289,1.16,290,1.67,310,1.491,311,1.491,313,1.67,314,1.67,315,1.67,316,3.127,317,3.127,318,1.943,319,2.507,320,5.536,321,1.943,322,3.127,323,3.127,324,1.943,325,1.67,326,3.127,327,1.943,328,1.943,329,3.127,330,1.943,331,4.237,332,1.943,333,3.127,334,1.943,335,1.16,336,0.731,337,1.943,338,1.943,339,1.67,340,1.943,341,1.943,342,1.867,343,4.929,344,0.939,345,4.929,346,1.979,347,4.497,348,1.16,349,4.929,350,2.739,351,1.943,352,1.943,353,1.943,354,1.943,355,1.943,356,1.67,357,3.924,358,1.943,359,1.249,360,2.342,361,1.943,362,3.127,363,1.943,364,1.943,365,3.924,366,1.943,367,1.943,368,1.943,369,1.943,370,1.943,371,1.943,372,1.943,373,1.943,374,1.943,375,1.67,376,1.943,377,1.943,378,1.943,379,1.943,380,1.67,381,1.083,382,1.943,383,1.943]],["title/classes/BaseEntity.html",[0,0.197,291,1.722]],["body/classes/BaseEntity.html",[0,0.209,2,0.955,3,0.174,4,0.152,5,0.152,9,0.291,10,1.551,15,0.596,18,0.019,19,0.813,20,0.641,23,1.551,24,4.523,25,0.234,31,0.174,65,0.013,66,0.013,72,1.15,203,1.054,229,2.648,291,2.447,336,1.475,384,3.369,385,4.146,386,4.146,387,6.349,388,6.349,389,3.54,390,3.919,391,5.262,392,4.431,393,4.081,394,3.919,395,3.919,396,5.262,397,3.919,398,6.623,399,3.919,400,3.919,401,5.262,402,5.262,403,5.262,404,3.919,405,3.919,406,5.262,407,5.262,408,5.262]],["title/controllers/CategoriesController.html",[67,1.325,409,2.584]],["body/controllers/CategoriesController.html",[0,0.129,3,0.108,4,0.094,5,0.094,9,0.181,10,1.099,15,0.515,17,1.734,18,0.019,19,0.786,20,0.631,21,1.239,23,1.618,25,0.276,27,1.272,28,0.564,31,0.108,32,1.13,35,2.595,38,0.932,41,2.661,47,1.697,49,1.964,50,2.065,54,1.574,62,1.87,65,0.009,66,0.009,67,0.87,69,0.962,72,0.994,76,1.355,77,1.07,127,1.451,129,2.749,146,3.27,147,3.036,148,1.834,156,2.397,157,2.226,159,1.451,168,1.451,171,3.527,172,1.451,173,0.537,176,1.197,179,1.451,187,2.289,192,1.451,193,1.451,248,1.355,259,1.696,344,1.149,346,1.641,348,1.451,359,1.562,381,2.529,409,2.603,410,2.089,411,3.899,412,1.476,413,2.506,414,1.951,415,2.226,416,2.431,417,3.598,418,4.5,419,2.431,420,2.431,421,2.431,422,2.431,423,1.451,424,2.431,425,2.431,426,1.562,427,2.86,428,2.431,429,1.562,430,4.1,431,2.431,432,2.431,433,1.864,434,2.708,435,2.089,436,1.451,437,2.86,438,1.451,439,1.864,440,3.166,441,2.431,442,2.431,443,2.431,444,1.696,445,2.431,446,5.087,447,2.431,448,2.431,449,1.562,450,1.696,451,2.431,452,1.864,453,1.696,454,2.431,455,1.864,456,2.431,457,1.696]],["title/modules/CategoriesModule.html",[79,1.629,92,2.38]],["body/modules/CategoriesModule.html",[0,0.245,3,0.204,4,0.178,5,0.178,18,0.018,25,0.309,28,1.066,31,0.204,65,0.014,66,0.014,69,2.311,79,2.823,81,2.402,82,2.402,83,2.741,84,2.741,85,2.402,86,3.829,87,2.741,92,4.578,94,3.483,95,2.741,96,2.741,98,2.952,100,2.952,101,1.915,409,4.477,434,4.251,435,3.947,458,3.947,459,3.947,460,4.592,461,4.592,462,2.741,463,3.947,464,4.592]],["title/injectables/CategoriesService.html",[119,1.202,434,2.21]],["body/injectables/CategoriesService.html",[0,0.145,3,0.121,4,0.106,5,0.106,9,0.203,10,1.2,15,0.569,17,1.967,18,0.019,19,0.891,20,0.542,21,1.406,23,1.702,25,0.269,28,0.633,31,0.121,33,2.004,35,2.407,40,2.038,47,1.785,49,2.066,50,2.172,62,1.658,65,0.01,66,0.01,77,1.2,101,1.138,119,1.321,120,1.344,129,2.807,140,1.754,187,2.616,229,1.138,275,2.546,319,3.008,335,1.628,336,1.027,342,2.429,344,1.028,346,2.141,381,2.269,411,3.498,412,1.611,413,2.657,414,2.129,415,2.429,417,3.22,418,4.143,430,3.468,434,2.429,436,1.628,437,3.121,438,1.628,462,1.628,463,2.345,465,2.345,466,2.728,467,2.728,468,4.069,469,3.121,470,2.728,471,2.728,472,4.069,473,2.728,474,6.052,475,4.069,476,2.728,477,4.069,478,2.728,479,1.628,480,2.728,481,2.093,482,2.728,483,4.069,484,2.728,485,1.904,486,1.904,487,4.866,488,4.866,489,2.728,490,2.093,491,2.728]],["title/classes/CategoryDtoOut.html",[0,0.197,440,2.584]],["body/classes/CategoryDtoOut.html",[0,0.222,2,1.014,3,0.185,4,0.161,5,0.161,9,0.309,15,0.652,18,0.018,19,0.945,20,0.652,25,0.185,31,0.185,38,0.95,40,1.694,54,1.893,65,0.013,66,0.013,72,1.256,148,1.805,173,0.921,203,1.097,344,1.166,385,4.272,386,4.272,389,3.626,440,3.823,492,3.578,493,2.643,494,4.163,495,4.163,496,3.413,497,4.163,498,4.163,499,2.698,500,4.163,501,4.163]],["title/entities/CategoryEntity.html",[462,2.21,502,1.466]],["body/entities/CategoryEntity.html",[0,0.19,3,0.158,4,0.138,5,0.138,9,0.265,15,0.623,18,0.019,19,0.943,20,0.66,21,1.201,25,0.251,31,0.158,38,0.892,40,1.526,54,1.749,65,0.012,66,0.012,72,1.2,148,1.668,203,0.988,229,2.764,232,2.75,261,1.568,291,2.294,292,1.987,336,1.341,344,1.078,389,2.75,392,3.442,393,3.635,462,2.944,499,3.006,502,1.411,503,1.864,504,3.064,505,3.635,506,4.338,507,2.734,508,3.783,509,3.564,510,3.064,511,3.564,512,3.375,513,3.564,514,2.734,515,3.564,516,3.193,517,3.064,518,2.58,519,4.239,520,3.564,521,3.564,522,2.944,523,3.564,524,3.064,525,3.643,526,3.783,527,3.442,528,3.564,529,2.488]],["title/classes/CreateCategoryDto.html",[0,0.197,417,2.21]],["body/classes/CreateCategoryDto.html",[0,0.25,2,1.142,3,0.208,4,0.182,5,0.182,9,0.348,15,0.608,18,0.018,19,1,20,0.608,25,0.208,31,0.208,38,0.994,54,2.004,65,0.014,66,0.014,72,1.173,148,1.91,173,1.037,203,1.185,417,3.529,493,2.602,499,2.912,530,5.846,531,3.596,532,4.688,533,4.688,534,4.688]],["title/classes/CreatePermissionDto.html",[0,0.197,535,2.584]],["body/classes/CreatePermissionDto.html",[0,0.314,2,1.134,3,0.207,4,0.181,5,0.181,9,0.346,15,0.553,18,0.018,19,1.048,20,0.553,25,0.207,31,0.261,38,1.06,65,0.014,66,0.014,72,1.066,148,2,173,1.03,203,1.18,344,0.887,412,1.844,493,2.629,535,4.109,536,3.571,537,4.656,538,4.656,539,5.06,540,3.25]],["title/classes/CreateProductDto.html",[0,0.197,541,2.21]],["body/classes/CreateProductDto.html",[0,0.218,2,0.995,3,0.181,4,0.158,5,0.158,9,0.304,15,0.648,18,0.018,19,0.937,20,0.648,25,0.181,31,0.181,38,0.943,40,2.135,54,1.876,65,0.013,66,0.013,72,1.25,148,1.789,173,0.904,203,1.084,493,2.668,499,2.665,541,3.229,542,6.051,543,3.135,544,4.653,545,4.234,546,4.234,547,4.087,548,4.087,549,4.087,550,4.087,551,4.087,552,4.087]],["title/classes/CreateRoleDto.html",[0,0.197,553,2.21]],["body/classes/CreateRoleDto.html",[0,0.316,2,1.146,3,0.209,4,0.182,5,0.182,9,0.35,15,0.557,18,0.018,19,1.052,20,0.557,21,1.443,25,0.209,31,0.263,38,1.063,65,0.014,66,0.014,72,1.073,148,2.008,173,1.04,203,1.187,344,0.897,493,2.634,553,3.537,554,3.609,555,4.705,556,4.705,557,3.024]],["title/classes/CreateUnitDto.html",[0,0.197,558,2.21]],["body/classes/CreateUnitDto.html",[0,0.245,2,1.122,3,0.205,4,0.179,5,0.179,9,0.342,15,0.604,18,0.018,20,0.604,25,0.205,31,0.205,38,0.939,40,1.809,54,1.987,65,0.014,66,0.014,72,1.163,173,1.019,203,1.172,493,2.623,499,2.881,558,3.491,559,5.809,560,3.534,561,4.928,562,4.928,563,4.608,564,4.608,565,4.608,566,3.534]],["title/injectables/JwtStrategy.html",[119,1.202,278,2.38]],["body/injectables/JwtStrategy.html",[0,0.23,3,0.191,4,0.167,5,0.167,9,0.32,10,1.652,15,0.526,17,1.469,18,0.019,19,0.666,20,0.405,21,1.05,23,1.271,25,0.293,28,1.001,31,0.191,33,3.066,47,1.334,49,1.543,65,0.014,66,0.014,119,1.819,120,2.123,129,2.465,232,2.403,261,2.466,273,3.009,278,3.602,286,2.771,287,3.307,306,4.775,311,3.307,325,3.705,344,0.821,360,2.573,567,3.705,568,5.603,569,5.603,570,4.311,571,5.603,572,4.311,573,4.311,574,4.311,575,4.311,576,3.705,577,4.311,578,4.311,579,4.311,580,4.311,581,4.311,582,4.311,583,4.311,584,3.705,585,4.311]],["title/classes/LoginDto.html",[0,0.197,142,2.38]],["body/classes/LoginDto.html",[0,0.317,2,1.154,3,0.21,4,0.184,5,0.184,9,0.352,15,0.559,18,0.018,20,0.559,25,0.264,31,0.21,38,0.998,65,0.014,66,0.014,72,1.078,142,3.826,173,1.048,203,1.193,360,3.885,493,2.33,586,4.073,587,4.543,588,4.738,589,4.738,590,4.738,591,4.738,592,5.116,593,5.594,594,4.073,595,4.073,596,3.635,597,4.738,598,4.073]],["title/classes/PermissionDto.html",[0,0.197,540,2.584]],["body/classes/PermissionDto.html",[0,0.307,2,1.096,3,0.2,4,0.174,5,0.174,9,0.334,15,0.597,18,0.018,19,1.035,20,0.597,25,0.2,31,0.256,38,1.066,65,0.014,66,0.014,72,1.15,148,1.975,173,0.995,203,1.154,344,1.211,412,1.782,493,2.637,535,3.14,536,3.451,539,4.951,540,4.02,599,4.499,600,4.499,601,4.499]],["title/classes/ProductDtoOut.html",[0,0.197,602,2.584]],["body/classes/ProductDtoOut.html",[0,0.198,2,0.904,3,0.165,4,0.144,5,0.144,9,0.276,15,0.666,18,0.018,19,0.892,20,0.666,25,0.165,31,0.165,38,0.907,40,2.163,54,1.787,65,0.012,66,0.012,72,1.284,148,1.704,173,0.821,203,1.016,344,1.101,385,4.032,386,4.032,389,3.462,493,2.683,496,3.221,499,2.498,544,4.432,545,4.032,546,4.032,602,3.54,603,3.191,604,3.712,605,3.712,606,3.712,607,3.712,608,3.712,609,3.712,610,3.712,611,3.712,612,3.712]],["title/entities/ProductEntity.html",[502,1.466,516,1.937]],["body/entities/ProductEntity.html",[0,0.145,3,0.121,4,0.106,5,0.106,9,0.203,15,0.63,18,0.019,19,1.076,20,0.679,21,0.991,25,0.24,31,0.121,38,0.788,40,1.994,54,1.785,65,0.01,66,0.01,72,1.214,148,1.702,203,0.815,229,2.525,232,2.269,236,3.121,261,1.2,291,1.892,292,1.521,336,1.027,344,1.1,389,2.269,392,2.84,393,3.468,418,3.128,462,3.22,499,2.657,502,1.08,503,1.427,505,3.128,507,2.093,508,3.121,512,2.905,516,2.129,517,2.345,518,1.427,522,2.429,525,3.743,526,3.121,527,2.84,529,2.84,544,3.733,545,4.028,546,4.028,613,2.345,614,3.397,615,2.345,616,5.395,617,3.121,618,3.498,619,4.069,620,2.728,621,4.643,622,2.728,623,2.728,624,2.728,625,2.728,626,2.728,627,4.069,628,4.069,629,4.069,630,4.069,631,2.728,632,3.22,633,2.269,634,4.069,635,2.728,636,2.728,637,3.498,638,2.728,639,3.121,640,3.498,641,2.093,642,2.728,643,2.728]],["title/controllers/ProductImagesController.html",[67,1.325,644,2.584]],["body/controllers/ProductImagesController.html",[0,0.119,3,0.099,4,0.087,5,0.241,9,0.166,10,1.029,11,1.332,15,0.404,17,1.465,18,0.019,19,0.664,20,0.525,21,1.047,23,1.267,25,0.268,28,0.518,30,1.435,31,0.099,32,1.038,35,0.931,38,0.929,47,1.33,49,1.539,50,2.276,60,1.558,62,1.798,65,0.008,66,0.008,67,0.799,69,0.884,72,0.778,76,1.244,77,0.982,127,1.332,129,2.462,135,3.695,137,1.918,140,2.244,148,0.658,155,2.677,157,1.332,158,3,159,1.332,160,3,164,3,165,1.918,166,1.918,167,1.712,168,1.332,169,3,170,1.918,172,1.332,173,0.494,176,1.099,179,1.332,187,1.793,192,1.332,193,1.332,200,3,201,1.918,202,1.712,203,0.447,204,1.918,205,1.918,206,1.712,207,3,208,3,209,3,211,1.918,212,1.918,214,3.695,215,3.695,216,3,217,1.918,218,1.918,219,1.918,220,3,221,1.918,222,1.918,223,3,224,1.918,225,3.695,226,1.918,227,1.918,228,1.918,229,0.931,230,1.918,231,1.558,232,1.244,233,1.918,234,1.918,235,3,236,1.712,237,1.918,248,1.946,251,1.558,275,1.826,344,1.114,346,0.982,348,1.332,449,2.244,453,1.558,457,1.558,518,2.926,614,1.558,633,2.941,644,2.436,645,3.728,646,3.393,647,1.918,648,2.232,649,3,650,3.49,651,3.695,652,2.232,653,3.49,654,2.232,655,2.763,656,2.232,657,2.232,658,2.232,659,2.232,660,2.232,661,2.566,662,1.918,663,2.232,664,2.083,665,1.918,666,1.918,667,1.918,668,4.178,669,2.232,670,2.232,671,2.232,672,2.232,673,2.232,674,2.232,675,2.232,676,2.232,677,2.232,678,2.232,679,2.232,680,2.232,681,2.232,682,2.232,683,3.49,684,3.49,685,2.232,686,1.918,687,2.232,688,2.232,689,2.232,690,2.232,691,2.232,692,2.232,693,2.232,694,2.232,695,2.232,696,2.232,697,1.918,698,1.918]],["title/classes/ProductImagesDtoIn.html",[0,0.197,664,2.21]],["body/classes/ProductImagesDtoIn.html",[0,0.308,2,1.103,3,0.201,4,0.176,5,0.176,9,0.337,15,0.543,18,0.018,20,0.652,25,0.201,31,0.257,38,0.981,40,2.195,65,0.014,66,0.014,72,1.047,173,1.002,203,1.159,344,0.863,493,2.484,496,3.744,633,3.554,655,4.317,664,3.453,699,4.889,700,3.475,701,4.53,702,4.53,703,3.162,704,3.894]],["title/classes/ProductImagesDtoOut.html",[0,0.197,703,2.584]],["body/classes/ProductImagesDtoOut.html",[0,0.299,2,1.053,3,0.192,4,0.168,5,0.168,9,0.321,15,0.586,18,0.018,20,0.659,25,0.192,31,0.249,38,0.999,40,2.262,65,0.014,66,0.014,72,1.129,173,0.956,203,1.125,344,1.188,493,2.232,496,3.68,633,2.411,655,4.242,664,2.581,699,5.062,700,3.317,703,3.919,704,5.359,705,6.235,706,4.325,707,4.325,708,4.325]],["title/entities/ProductImagesEntity.html",[502,1.466,632,2.21]],["body/entities/ProductImagesEntity.html",[0,0.21,3,0.175,4,0.153,5,0.153,9,0.293,15,0.598,18,0.019,19,0.92,20,0.598,25,0.264,31,0.175,38,0.772,40,1.969,65,0.013,66,0.013,72,1.152,203,1.058,261,1.735,291,2.457,292,2.198,336,1.484,344,1.264,502,1.561,503,2.062,512,3.556,516,3.329,518,3.117,525,3.556,615,3.389,617,4.052,618,4.541,621,4.052,632,3.153,633,3.7,639,4.052,640,4.541,655,4.484,709,5.704,710,3.389,711,3.942,712,3.942,713,5.282,714,3.942,715,3.942,716,3.942,717,3.942]],["title/injectables/ProductImagesService.html",[119,1.202,661,2.21]],["body/injectables/ProductImagesService.html",[0,0.134,3,0.112,4,0.097,5,0.18,9,0.187,10,1.128,11,2.283,15,0.486,17,1.764,18,0.019,19,0.906,20,0.486,21,1.261,23,1.365,25,0.26,28,0.583,31,0.112,33,1.884,36,2.67,40,1.815,47,1.432,49,1.369,50,2.096,54,0.777,60,3.613,62,1.898,65,0.009,66,0.009,77,1.106,101,1.048,119,1.242,120,1.238,129,2.55,155,1.927,181,1.927,182,2.16,187,2.323,206,1.927,248,2.886,251,2.67,252,2.16,253,2.67,275,2.913,319,2.886,335,1.5,336,0.946,342,1.5,344,0.729,346,1.683,380,3.288,413,1.884,418,1.615,479,1.5,505,1.615,518,3.069,519,2.16,614,2.67,632,1.5,633,3.662,641,1.927,645,4.272,646,3.887,649,3.288,651,3.288,655,3.58,661,2.283,664,3.089,665,2.16,666,2.16,668,3.98,686,2.16,697,2.16,698,3.98,718,2.16,719,2.513,720,2.513,721,3.825,722,3.825,723,2.513,724,3.825,725,3.288,726,3.825,727,2.513,728,3.825,729,2.513,730,2.16,731,2.513,732,2.513,733,2.513,734,2.513,735,2.513,736,2.513,737,2.513,738,2.16,739,3.825,740,2.513,741,2.934,742,2.513,743,2.513,744,2.513,745,5.569,746,2.513,747,2.513,748,2.513,749,2.513,750,3.825,751,2.513,752,2.513]],["title/controllers/ProductsController.html",[67,1.325,753,2.584]],["body/controllers/ProductsController.html",[0,0.13,3,0.108,4,0.095,5,0.095,9,0.182,10,1.104,15,0.517,17,1.739,18,0.019,19,0.788,20,0.585,21,1.243,23,1.622,25,0.277,27,1.278,28,0.567,31,0.108,32,1.137,35,2.128,38,0.933,41,1.959,47,1.976,49,1.969,50,2.07,54,1.158,62,2.177,65,0.009,66,0.009,67,0.875,69,0.968,72,0.996,76,1.363,77,1.075,127,1.459,129,2.752,146,2.407,147,2.235,148,1.504,156,2.407,157,2.717,159,1.459,168,1.459,171,2.926,172,1.459,173,0.54,176,1.204,179,1.459,187,2.294,192,1.459,193,1.459,248,1.363,259,1.706,344,1.106,346,2.554,348,1.459,359,1.571,381,2.538,412,1.483,413,2.513,414,1.959,415,2.235,423,1.459,426,1.571,427,2.872,429,1.571,433,1.875,436,1.459,438,1.459,439,1.875,444,1.706,449,1.571,450,1.706,452,2.872,453,1.706,455,1.875,457,1.706,479,1.459,506,4.451,518,3.563,541,3.464,602,3.177,667,2.101,741,3.491,753,2.613,754,2.101,755,2.444,756,2.444,757,2.444,758,2.444,759,2.444,760,2.444,761,2.444,762,4.005,763,2.444,764,2.717,765,2.101,766,2.872,767,2.444,768,2.444,769,2.444,770,5.102,771,2.444,772,2.101,773,2.444,774,2.444,775,2.444,776,2.444]],["title/modules/ProductsModule.html",[79,1.629,93,2.38]],["body/modules/ProductsModule.html",[0,0.221,3,0.184,4,0.161,5,0.161,18,0.019,25,0.318,28,0.963,31,0.184,65,0.013,66,0.013,69,2.164,79,2.689,81,2.171,82,2.171,83,2.477,84,2.477,85,2.171,86,3.648,87,2.477,93,4.609,94,3.262,95,2.477,96,2.477,98,2.668,100,2.668,101,1.731,516,2.171,518,2.859,632,3.262,641,3.183,644,4.266,646,3.815,661,4.137,662,3.567,730,3.567,753,4.266,764,4.137,765,3.567,777,3.567,778,3.567,779,4.15,780,4.15,781,3.567,782,4.15,783,4.15]],["title/injectables/ProductsService.html",[119,1.202,764,2.21]],["body/injectables/ProductsService.html",[0,0.123,3,0.102,4,0.089,5,0.089,9,0.171,10,1.055,15,0.532,17,1.825,18,0.019,19,0.97,20,0.503,21,1.304,23,1.579,25,0.252,28,0.535,31,0.102,33,1.763,35,2.234,36,3.062,40,1.942,47,1.657,49,1.917,50,2.226,54,1.53,62,1.686,65,0.009,66,0.009,77,1.014,101,0.961,119,1.162,120,1.135,129,2.72,140,1.482,187,2.467,229,2.914,275,2.587,319,2.758,335,1.376,336,0.867,342,2.136,344,1.281,346,2.176,375,3.076,381,1.995,412,1.417,413,2.436,414,1.872,415,2.136,418,3.643,423,2.136,426,2.301,429,2.301,436,1.376,438,1.376,469,2.745,479,1.376,481,1.768,485,2.498,486,2.498,490,1.768,505,2.82,506,3.365,516,1.206,518,3.198,541,2.952,545,2.498,546,2.498,614,3.452,633,1.995,738,3.076,741,3.365,762,3.179,764,2.136,766,2.745,772,1.981,781,1.981,784,1.981,785,2.305,786,2.305,787,3.579,788,2.305,789,2.305,790,2.305,791,2.305,792,2.305,793,2.305,794,2.305,795,3.579,796,2.305,797,4.387,798,2.305,799,3.579,800,3.579,801,2.305]],["title/classes/ProfileDto.html",[0,0.197,174,2.584]],["body/classes/ProfileDto.html",[0,0.233,2,1.064,3,0.194,4,0.169,5,0.169,9,0.324,15,0.622,18,0.018,19,0.967,20,0.622,21,1.376,25,0.194,31,0.194,38,1.027,40,1.748,65,0.014,66,0.014,72,1.199,130,4.372,173,0.966,174,3.944,203,1.132,344,1.194,350,4.372,493,2.622,496,2.435,802,3.754,803,4.367,804,4.367,805,4.367,806,4.367,807,4.367,808,4.367,809,3.754,810,4.367,811,4.367,812,4.367,813,4.367,814,4.367]],["title/classes/RegisterDto.html",[0,0.197,152,2.38]],["body/classes/RegisterDto.html",[0,0.296,2,1.037,3,0.189,4,0.165,5,0.165,9,0.316,15,0.616,18,0.018,20,0.616,25,0.247,31,0.189,38,1.053,65,0.013,66,0.013,72,1.188,152,3.572,173,0.941,203,1.113,350,4.318,360,3.693,493,2.348,496,3.45,587,4.318,592,5.638,593,5.638,594,3.658,595,3.658,596,3.265,598,3.658,815,3.658,816,4.318,817,4.256,818,4.256,819,4.256,820,4.256,821,4.256,822,4.256,823,4.256,824,5.557,825,4.256]],["title/classes/ResponseFormatter.html",[0,0.197,32,1.722]],["body/classes/ResponseFormatter.html",[0,0.233,1,2.106,2,0.735,3,0.134,4,0.117,5,0.117,6,2.314,7,2.594,8,3.767,9,0.224,10,1.292,11,2.616,12,2.594,13,2.314,14,3.767,15,0.59,17,1.493,18,0.019,19,0.677,20,0.565,21,1.067,22,3.767,23,1.292,25,0.195,26,3.958,27,1.578,28,0.7,29,3.767,30,1.94,31,0.195,32,2.4,33,2.159,34,5.186,35,2.617,36,3.953,37,5.396,38,0.969,39,5.337,40,2.052,41,2.293,42,4.436,43,4.436,44,3.767,45,3.767,46,3.767,47,1.356,48,4.868,49,1.08,50,2.264,51,2.594,52,2.594,53,2.594,54,1.596,55,3.767,56,2.594,57,2.594,58,2.594,59,2.314,60,2.106,61,2.594,62,1.028,63,3.767,64,2.594,65,0.011,66,0.011,203,0.878,522,3.08,826,3.017,827,3.017,828,4.436,829,3.017,830,3.017,831,3.017,832,3.017,833,3.017]],["title/controllers/RoleController.html",[67,1.325,281,2.584]],["body/controllers/RoleController.html",[0,0.164,3,0.136,4,0.119,5,0.119,9,0.228,10,1.309,15,0.49,17,1.513,18,0.019,19,0.686,20,0.626,21,1.082,23,1.538,25,0.28,27,1.607,28,0.713,31,0.136,32,1.429,35,2.634,38,0.762,41,2.728,47,1.613,49,1.867,50,1.962,54,1.613,62,1.777,65,0.011,66,0.011,67,1.1,69,1.217,72,0.944,76,1.713,77,1.352,127,1.834,129,2.689,146,3.352,147,3.112,148,1.862,156,1.975,157,2.65,159,1.834,168,1.834,171,3.672,172,1.834,173,0.679,176,1.514,177,2.641,179,1.834,187,2.175,192,1.834,193,1.834,279,3.112,281,3.099,293,2.641,344,0.846,346,1.954,348,1.834,359,1.975,412,1.758,413,2.813,414,2.323,423,1.834,444,2.145,449,1.975,450,2.145,553,3.886,557,3.352,816,3.987,834,2.641,835,5.21,836,2.641,837,3.073,838,3.073,839,3.073,840,3.073,841,3.073,842,3.073,843,2.641,844,3.073,845,3.073,846,3.073,847,3.073,848,3.073,849,3.073,850,4.44,851,3.073]],["title/classes/RoleDto.html",[0,0.197,557,2.38]],["body/classes/RoleDto.html",[0,0.309,2,1.107,3,0.202,4,0.176,5,0.176,9,0.338,15,0.6,18,0.018,19,1.038,20,0.6,21,1.412,25,0.202,31,0.257,38,1.068,65,0.014,66,0.014,72,1.156,148,1.983,173,1.005,203,1.162,344,1.216,493,2.642,553,2.713,554,3.486,557,3.727,852,4.545,853,4.545,854,4.545]],["title/entities/RoleEntity.html",[299,2.21,502,1.466]],["body/entities/RoleEntity.html",[0,0.222,3,0.185,4,0.162,5,0.162,9,0.31,15,0.612,18,0.019,19,0.947,20,0.612,25,0.272,31,0.185,38,1.014,65,0.013,66,0.013,72,1.179,148,1.808,203,1.1,245,3.276,261,1.838,289,3.886,291,2.552,292,2.328,299,3.276,336,1.572,344,1.168,502,1.654,503,2.185,512,2.493,525,4.037,527,2.915,855,3.59,856,6.13,857,4.176,858,4.718,859,4.176,860,4.176,861,3.59,862,5.488,863,4.176,864,4.718,865,3.59,866,4.176,867,4.176]],["title/injectables/RoleService.html",[119,1.202,279,2.21]],["body/injectables/RoleService.html",[0,0.183,3,0.153,4,0.134,5,0.134,9,0.256,10,1.42,15,0.565,17,1.893,18,0.019,19,0.858,20,0.522,21,1.353,23,1.638,25,0.291,28,0.8,31,0.153,33,2.372,38,0.811,47,1.718,49,1.988,50,2.09,62,1.174,65,0.012,66,0.012,77,1.516,101,1.437,119,1.563,120,1.697,129,2.763,187,2.316,275,1.802,279,2.875,299,2.056,300,2.961,319,3.353,335,2.056,336,1.296,342,2.056,344,0.918,346,1.516,412,1.907,413,2.962,414,2.52,479,2.056,485,2.404,486,2.404,553,3.777,816,3.876,835,3.694,836,4.14,843,2.961,868,2.961,869,3.445,870,3.445,871,4.816,872,3.445,873,3.445,874,4.816,875,3.445,876,4.14,877,3.445,878,3.445,879,2.961,880,3.445,881,3.445,882,3.445,883,3.445,884,4.816,885,3.445]],["title/classes/UnitDtoOut.html",[0,0.197,886,2.584]],["body/classes/UnitDtoOut.html",[0,0.218,2,0.999,3,0.182,4,0.159,5,0.159,9,0.305,15,0.649,18,0.019,20,0.649,25,0.182,31,0.182,38,0.888,40,2,54,1.879,65,0.013,66,0.013,72,1.251,173,0.906,203,1.086,344,1.158,385,4.24,386,4.24,389,3.604,493,2.654,496,3.387,499,2.67,561,4.66,562,4.66,566,3.144,886,3.784,887,3.524,888,4.099,889,4.099,890,4.099,891,4.099,892,4.099,893,4.099]],["title/entities/UnitEntity.html",[502,1.466,894,2.38]],["body/entities/UnitEntity.html",[0,0.178,3,0.149,4,0.13,5,0.13,9,0.249,15,0.611,18,0.018,19,1.004,20,0.684,21,1.15,25,0.243,31,0.149,38,0.868,40,1.838,54,1.937,65,0.011,66,0.011,72,1.177,203,0.946,229,2.478,232,2.633,261,1.474,291,2.196,292,1.868,336,1.261,344,1.042,389,2.633,392,3.296,393,3.036,499,2.926,502,1.326,503,1.752,505,3.516,507,2.57,508,3.623,512,3.265,514,2.57,516,1.752,522,2.819,524,2.879,525,3.738,526,3.623,529,2.338,561,4.196,562,4.196,566,4.196,621,4.196,637,4.06,809,4.06,894,3.036,895,2.879,896,4.723,897,4.723,898,3.35,899,4.723,900,3.35,901,3.35,902,3.35,903,3.35,904,4.723,905,3.35,906,3.35,907,3.35,908,4.723,909,3.35,910,3.296,911,3.35,912,3.35,913,3.35]],["title/controllers/UnitsController.html",[67,1.325,914,2.584]],["body/controllers/UnitsController.html",[0,0.129,3,0.108,4,0.094,5,0.094,9,0.18,10,1.098,15,0.515,17,1.732,18,0.019,19,0.785,20,0.631,21,1.238,23,1.617,25,0.276,27,1.269,28,0.563,31,0.108,32,1.128,35,2.593,38,0.931,41,2.659,47,1.696,49,1.819,50,2.063,54,1.572,62,1.868,65,0.009,66,0.009,67,0.869,69,0.961,72,0.993,76,1.353,77,1.068,127,1.448,129,2.748,146,3.267,147,3.034,148,1.833,156,2.394,157,2.223,159,1.448,168,1.448,171,3.524,172,1.448,173,0.536,176,1.195,179,1.448,187,2.287,192,1.448,193,1.448,248,1.353,259,1.693,344,1.148,346,1.638,348,1.448,359,1.56,381,2.526,412,1.474,413,2.503,414,1.948,415,2.223,423,1.448,426,1.56,427,2.856,429,1.56,433,1.861,436,1.448,438,1.448,439,1.861,444,1.693,449,1.56,450,1.693,452,1.861,453,1.693,455,1.861,457,1.693,558,3.596,725,3.201,886,3.163,910,4.884,914,2.599,915,2.085,916,3.895,917,2.426,918,2.426,919,2.426,920,2.426,921,2.426,922,2.426,923,2.426,924,2.426,925,4.098,926,2.426,927,2.426,928,2.705,929,2.085,930,2.856,931,2.426,932,2.426,933,2.426,934,2.426,935,5.082,936,2.426,937,2.426,938,2.426,939,2.426,940,2.426]],["title/modules/UnitsModule.html",[79,1.629,112,2.38]],["body/modules/UnitsModule.html",[0,0.245,3,0.204,4,0.178,5,0.178,18,0.018,25,0.309,28,1.066,31,0.204,65,0.014,66,0.014,69,2.311,79,2.823,81,2.402,82,2.402,83,2.741,84,2.741,85,2.402,86,3.829,87,2.741,94,3.483,95,2.741,96,2.741,98,2.952,100,2.952,101,1.915,112,4.578,894,2.952,914,4.477,928,4.251,929,3.947,941,3.947,942,3.947,943,4.592,944,4.592,945,3.947,946,4.592]],["title/injectables/UnitsService.html",[119,1.202,928,2.21]],["body/injectables/UnitsService.html",[0,0.145,3,0.121,4,0.106,5,0.106,9,0.203,10,1.2,15,0.569,17,1.967,18,0.019,19,0.891,20,0.542,21,1.406,23,1.702,25,0.269,28,0.633,31,0.121,33,2.004,35,2.407,40,2.038,47,1.785,49,2.066,50,2.172,62,1.658,65,0.01,66,0.01,77,1.2,101,1.138,119,1.321,120,1.344,129,2.807,140,1.754,187,2.616,229,1.138,275,2.546,319,3.008,335,1.628,336,1.027,342,2.429,344,1.278,346,2.141,381,2.269,412,1.611,413,2.657,414,2.129,415,2.429,423,2.429,426,2.616,429,2.616,436,1.628,438,1.628,469,3.121,479,1.628,481,2.093,485,1.904,486,1.904,490,2.093,558,3.22,894,1.754,910,4.498,916,3.498,925,3.468,928,2.429,930,3.121,945,2.345,947,2.345,948,2.728,949,2.728,950,4.069,951,2.728,952,2.728,953,2.728,954,2.728,955,2.728,956,2.728,957,2.728,958,4.069,959,2.728,960,4.866,961,4.866,962,2.728,963,2.728]],["title/classes/UpdateCategoryDto.html",[0,0.197,430,2.38]],["body/classes/UpdateCategoryDto.html",[0,0.286,2,1.307,3,0.238,4,0.208,5,0.208,18,0.018,25,0.285,31,0.238,65,0.016,66,0.016,173,1.186,261,2.827,412,2.125,417,3.203,430,4.129,437,4.116,531,4.116,964,4.612,965,6.424,966,4.116]],["title/classes/UpdateProductDto.html",[0,0.197,762,2.38]],["body/classes/UpdateProductDto.html",[0,0.286,2,1.307,3,0.238,4,0.208,5,0.208,18,0.018,25,0.285,31,0.238,65,0.016,66,0.016,173,1.186,261,2.827,412,2.125,541,3.203,543,4.116,762,4.129,766,4.116,966,4.116,967,4.612,968,6.424]],["title/classes/UpdateUnitDto.html",[0,0.197,925,2.38]],["body/classes/UpdateUnitDto.html",[0,0.286,2,1.307,3,0.238,4,0.208,5,0.208,18,0.018,25,0.285,31,0.238,65,0.016,66,0.016,173,1.186,261,2.827,412,2.125,558,3.203,560,4.116,925,4.129,930,4.116,966,4.116,969,4.612,970,6.424]],["title/entities/UserEntity.html",[289,2.21,502,1.466]],["body/entities/UserEntity.html",[0,0.179,3,0.149,4,0.13,5,0.13,9,0.25,15,0.628,18,0.019,19,0.846,20,0.628,21,1.448,25,0.243,31,0.149,38,1.048,65,0.011,66,0.011,72,1.21,130,3.823,147,2.824,203,0.948,229,2.48,245,2.824,261,1.478,289,2.824,291,2.2,292,1.872,299,3.549,331,2.887,336,1.264,344,1.195,350,3.823,360,3.269,393,2.159,502,1.33,503,1.757,510,2.887,512,2.004,514,2.576,522,2.004,525,4.073,527,2.344,529,2.344,587,3.823,617,3.629,639,3.629,816,4.375,835,4.202,858,4.067,861,2.887,864,4.067,865,4.067,876,2.887,971,2.887,972,3.358,973,3.358,974,3.358,975,3.358,976,3.358,977,3.358,978,3.358,979,4.731,980,4.731,981,3.358,982,3.358,983,3.358,984,3.358,985,3.358]],["title/coverage.html",[986,3.883]],["body/coverage.html",[0,0.389,1,1.791,5,0.1,6,2.981,18,0.019,20,0.241,32,1.193,62,0.874,65,0.009,66,0.009,67,2.199,68,1.791,70,2.205,74,1.531,85,1.342,119,2.054,121,2.205,125,1.791,126,2.205,142,1.649,152,1.649,161,1.531,174,1.791,176,1.264,260,2.205,278,1.649,279,1.531,281,1.791,286,1.649,289,1.531,291,1.193,299,1.531,315,2.205,356,2.205,384,2.205,409,1.791,410,2.205,417,1.531,430,1.649,434,1.531,440,1.791,462,1.531,465,2.205,492,2.205,502,2.342,504,2.205,516,1.342,530,2.205,531,2.981,535,1.791,536,2.981,540,1.791,541,1.531,542,2.205,543,2.981,553,1.531,554,2.981,557,1.649,558,1.531,559,2.205,560,2.981,567,2.205,586,2.205,602,1.791,603,2.205,613,2.205,632,1.531,644,1.791,645,2.981,646,2.712,647,2.205,661,1.531,664,1.531,699,2.981,700,2.981,703,1.791,709,2.205,710,2.205,718,2.205,753,1.791,754,2.205,762,1.649,764,1.531,784,2.205,802,2.205,815,2.205,834,2.205,855,2.205,868,2.205,886,1.791,887,2.205,894,1.649,895,2.205,914,1.791,915,2.205,925,1.649,928,1.531,947,2.205,964,2.205,967,2.205,969,2.205,971,2.205,986,1.968,987,2.566,988,2.566,989,2.566,990,7.643,991,4.69,992,5.914,993,2.205,994,3.886,995,6.802,996,2.205,997,2.205,998,6.143,999,2.205,1000,2.566,1001,5.914,1002,6.143,1003,2.566,1004,4.69,1005,2.566,1006,2.566,1007,2.566]],["title/dependencies.html",[82,2.331,1008,2.654]],["body/dependencies.html",[0,0.314,18,0.019,28,1.081,30,2.993,65,0.014,66,0.014,82,2.436,101,1.942,106,4.002,107,4.002,167,3.571,173,1.03,273,3.25,285,3.571,306,3.571,336,1.752,339,4.002,576,4.002,596,3.571,1009,6.456,1010,4.656,1011,4.656,1012,4.656,1013,4.656,1014,4.656,1015,4.656,1016,4.656,1017,4.656,1018,4.656,1019,4.656,1020,4.656,1021,4.656,1022,4.656,1023,4.656,1024,4.656,1025,4.656,1026,4.656,1027,4.656,1028,4.656,1029,4.656,1030,4.656,1031,4.656,1032,4.656,1033,4.656,1034,4.656]],["title/miscellaneous/functions.html",[1035,2.155,1036,3.83]],["body/miscellaneous/functions.html",[9,0.43,18,0.016,65,0.016,66,0.016,85,3.712,999,4.971,1035,4.037,1036,4.971,1037,5.783]],["title/index.html",[9,0.229,1038,3.087,1039,3.087]],["body/index.html",[4,0.163,18,0.018,59,3.223,65,0.013,66,0.013,108,3.612,148,1.239,231,2.933,319,2.343,879,3.612,910,2.933,986,3.223,1040,4.202,1041,4.202,1042,5.511,1043,4.202,1044,4.202,1045,4.202,1046,4.202,1047,4.202,1048,6.149,1049,4.202,1050,4.202,1051,4.202,1052,6.149,1053,7.087,1054,4.202,1055,4.202,1056,4.202,1057,6.954,1058,4.202,1059,4.202,1060,5.511,1061,4.202,1062,4.202,1063,4.202,1064,5.511,1065,5.511,1066,4.202,1067,4.202,1068,4.202,1069,5.511,1070,5.511,1071,4.202,1072,4.202,1073,4.202,1074,4.202,1075,4.202,1076,4.202,1077,4.202,1078,4.202,1079,4.202,1080,4.202,1081,4.202,1082,4.202,1083,4.202,1084,3.612,1085,4.202,1086,4.202,1087,4.202,1088,4.202,1089,4.202,1090,4.202,1091,3.612]],["title/modules.html",[81,2.648]],["body/modules.html",[18,0.016,65,0.016,66,0.016,80,3.745,81,2.807,91,3.449,92,3.449,93,3.449,112,3.449,231,5.086,1092,7.286,1093,7.286,1094,7.286]],["title/overview.html",[1095,4.352]],["body/overview.html",[2,0.999,18,0.018,65,0.013,66,0.013,69,1.623,74,3.626,79,1.804,80,5.1,81,2.145,82,2.145,83,2.447,84,2.447,85,2.145,86,2.447,87,2.447,88,3.524,89,3.524,90,3.524,91,4.652,92,4.321,93,4.528,94,3.236,95,2.447,96,2.447,112,4.155,120,2.019,161,3.626,276,3.524,277,3.524,278,3.905,279,3.626,434,3.626,458,3.524,459,3.524,503,2.145,661,3.626,764,3.626,777,3.524,778,3.524,928,3.626,941,3.524,942,3.524,1095,3.524,1096,4.099,1097,4.099,1098,4.099,1099,4.099,1100,4.099]],["title/properties.html",[203,0.893,1008,2.654]],["body/properties.html",[18,0.018,65,0.016,66,0.016,148,1.684,203,1.144,1084,4.907,1091,4.907,1101,5.709,1102,5.709,1103,5.709]],["title/miscellaneous/variables.html",[1035,2.155,1104,3.83]],["body/miscellaneous/variables.html",[9,0.329,13,3.394,18,0.019,20,0.592,65,0.014,66,0.014,202,3.394,229,1.846,286,3.663,310,3.394,360,2.641,503,2.981,522,3.402,584,5.418,587,3.088,828,4.898,993,3.803,996,3.803,997,4.898,1035,3.088,1104,3.803,1105,4.425,1106,4.425,1107,4.425,1108,4.425,1109,6.304,1110,4.425,1111,4.425,1112,4.425,1113,4.425,1114,4.425,1115,4.425,1116,4.425,1117,4.425,1118,4.425,1119,4.425,1120,4.425,1121,4.425,1122,4.425,1123,4.425,1124,4.425,1125,5.699,1126,4.425,1127,6.304,1128,4.425,1129,4.425,1130,4.425,1131,4.425,1132,4.425]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/CategoryDtoOut.html":{},"entities/CategoryEntity.html":{},"classes/CreateCategoryDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUnitDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PermissionDto.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"entities/ProductImagesEntity.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/ProfileDto.html":{},"classes/RegisterDto.html":{},"classes/ResponseFormatter.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"entities/RoleEntity.html":{},"injectables/RoleService.html":{},"classes/UnitDtoOut.html":{},"entities/UnitEntity.html":{},"controllers/UnitsController.html":{},"modules/UnitsModule.html":{},"injectables/UnitsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUnitDto.html":{},"entities/UserEntity.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":990,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":1102,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":1021,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":1031,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":1034,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1020,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":995,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1005,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":991,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1001,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1002,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":992,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1004,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":998,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1125,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":1028,"title":{},"body":{"dependencies.html":{}}}],["1/8",{"_index":1003,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":629,"title":{},"body":{"entities/ProductEntity.html":{}}}],["10.0.0",{"_index":1009,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":1017,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":1014,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":1013,"title":{},"body":{"dependencies.html":{}}}],["1024",{"_index":235,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["12",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["16.4.5",{"_index":1023,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":236,"title":{},"body":{"controllers/AuthController.html":{},"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{}}}],["22",{"_index":1100,"title":{},"body":{"overview.html":{}}}],["24",{"_index":1129,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2mb",{"_index":237,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["3.2.2",{"_index":1011,"title":{},"body":{"dependencies.html":{}}}],["31536000",{"_index":1124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3600",{"_index":1131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.0.1",{"_index":1024,"title":{},"body":{"dependencies.html":{}}}],["4.0.2",{"_index":1015,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":1096,"title":{},"body":{"overview.html":{}}}],["5.1.1",{"_index":1018,"title":{},"body":{"dependencies.html":{}}}],["5432",{"_index":1113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":1098,"title":{},"body":{"overview.html":{}}}],["7",{"_index":1097,"title":{},"body":{"overview.html":{}}}],["7.3.1",{"_index":1016,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":1033,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1099,"title":{},"body":{"overview.html":{}}}],["8.11.5",{"_index":1026,"title":{},"body":{"dependencies.html":{}}}],["86400",{"_index":1128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["__dirname",{"_index":1120,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abcdefghij",{"_index":1123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abstract",{"_index":404,"title":{},"body":{"classes/BaseEntity.html":{}}}],["accesstoken",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{}}}],["allexceptionsfilter",{"_index":1,"title":{"classes/AllExceptionsFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{},"coverage.html":{}}}],["already",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{}}}],["amazing",{"_index":1076,"title":{},"body":{"index.html":{}}}],["anda",{"_index":675,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["apibearerauth",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductImagesController.html":{},"controllers/ProductsController.html":{},"controllers/RoleController.html":{},"controllers/UnitsController.html":{}}}],["apibearerauth('accesstoken",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductImagesController.html":{},"controllers/ProductsController.html":{},"controllers/RoleController.html":{},"controllers/UnitsController.html":{}}}],["apibearerauth('accesstoken')@useguards(authguard)@apiconsumes('multipart/form",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["apibody",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["apiconsumes",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["apiconsumes('multipart/form",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["apiproperty",{"_index":493,"title":{},"body":{"classes/CategoryDtoOut.html":{},"classes/CreateCategoryDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUnitDto.html":{},"classes/LoginDto.html":{},"classes/PermissionDto.html":{},"classes/ProductDtoOut.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"classes/ProfileDto.html":{},"classes/RegisterDto.html":{},"classes/RoleDto.html":{},"classes/UnitDtoOut.html":{}}}],["apiproperty()@isnotempty()@isstring()@minlength(6)@maxlength(16",{"_index":588,"title":{},"body":{"classes/LoginDto.html":{}}}],["apiproperty()@isstring",{"_index":590,"title":{},"body":{"classes/LoginDto.html":{}}}],["apiproperty()@isstring()@isnotempty",{"_index":822,"title":{},"body":{"classes/RegisterDto.html":{}}}],["apiproperty()@isstring()@isnotempty()@isemail",{"_index":817,"title":{},"body":{"classes/RegisterDto.html":{}}}],["apiproperty()@isstring()@isnotempty()@minlength(8)@maxlength(16",{"_index":819,"title":{},"body":{"classes/RegisterDto.html":{}}}],["apipropertyoptional",{"_index":496,"title":{},"body":{"classes/CategoryDtoOut.html":{},"classes/ProductDtoOut.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"classes/ProfileDto.html":{},"classes/RegisterDto.html":{},"classes/UnitDtoOut.html":{}}}],["apipropertyoptional({type",{"_index":705,"title":{},"body":{"classes/ProductImagesDtoOut.html":{}}}],["apiresponse",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"controllers/RoleController.html":{},"controllers/UnitsController.html":{}}}],["apiresponse({status",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"controllers/RoleController.html":{},"controllers/UnitsController.html":{}}}],["apitags",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductImagesController.html":{},"controllers/ProductsController.html":{},"controllers/RoleController.html":{},"controllers/UnitsController.html":{}}}],["apitags('auth",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('category",{"_index":442,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["apitags('product",{"_index":667,"title":{},"body":{"controllers/ProductImagesController.html":{},"controllers/ProductsController.html":{}}}],["apitags('roles",{"_index":844,"title":{},"body":{"controllers/RoleController.html":{}}}],["apitags('unit",{"_index":932,"title":{},"body":{"controllers/UnitsController.html":{}}}],["app",{"_index":1055,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":75,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":68,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":1047,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":80,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":74,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentshost",{"_index":14,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{}}}],["array",{"_index":814,"title":{},"body":{"classes/ProfileDto.html":{}}}],["async",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UnitsController.html":{},"injectables/UnitsService.html":{}}}],["auth",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.guard",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RoleController.html":{}}}],["auth/auth.guard",{"_index":439,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"controllers/UnitsController.html":{}}}],["auth/login",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth/register",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{}}}],["authcontroller",{"_index":125,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":176,"title":{"classes/AuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"controllers/CategoriesController.html":{},"controllers/ProductImagesController.html":{},"controllers/ProductsController.html":{},"controllers/RoleController.html":{},"controllers/UnitsController.html":{},"coverage.html":{}}}],["authmodule",{"_index":91,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1084,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":161,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["avatar",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ProfileDto.html":{},"entities/UserEntity.html":{}}}],["avatar(@req",{"_index":239,"title":{},"body":{"controllers/AuthController.html":{}}}],["avatar(req",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["await",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UnitsController.html":{},"injectables/UnitsService.html":{}}}],["backers",{"_index":1077,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{}}}],["badrequestexception('failed",{"_index":698,"title":{},"body":{"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{}}}],["badrequestexception('no",{"_index":682,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["bahwa",{"_index":674,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["base_unit",{"_index":896,"title":{},"body":{"entities/UnitEntity.html":{}}}],["baseentity",{"_index":291,"title":{"classes/BaseEntity.html":{}},"body":{"modules/AuthModule.html":{},"classes/BaseEntity.html":{},"entities/CategoryEntity.html":{},"entities/ProductEntity.html":{},"entities/ProductImagesEntity.html":{},"entities/RoleEntity.html":{},"entities/UnitEntity.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["baseunit",{"_index":566,"title":{},"body":{"classes/CreateUnitDto.html":{},"classes/UnitDtoOut.html":{},"entities/UnitEntity.html":{}}}],["bcrypt",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["beforeinsert",{"_index":398,"title":{},"body":{"classes/BaseEntity.html":{}}}],["binary",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["body",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"controllers/RoleController.html":{},"controllers/UnitsController.html":{}}}],["boolean",{"_index":499,"title":{},"body":{"classes/CategoryDtoOut.html":{},"entities/CategoryEntity.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUnitDto.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{},"classes/UnitDtoOut.html":{},"entities/UnitEntity.html":{}}}],["bootstrap",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductsModule.html":{},"modules/UnitsModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":1094,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1092,"title":{},"body":{"modules.html":{}}}],["building",{"_index":1043,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":263,"title":{},"body":{"classes/AuthGuard.html":{}}}],["canactivate(context",{"_index":265,"title":{},"body":{"classes/AuthGuard.html":{}}}],["catch",{"_index":11,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{},"classes/ResponseFormatter.html":{}}}],["catch(exception",{"_index":12,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{}}}],["categories",{"_index":411,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{}}}],["categories.controller",{"_index":461,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["categories.service",{"_index":435,"title":{},"body":{"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{}}}],["categories_id",{"_index":474,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["categoriescontroller",{"_index":409,"title":{"controllers/CategoriesController.html":{}},"body":{"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"coverage.html":{}}}],["categoriesmodule",{"_index":92,"title":{"modules/CategoriesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules.html":{},"overview.html":{}}}],["categoriesservice",{"_index":434,"title":{"injectables/CategoriesService.html":{}},"body":{"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"coverage.html":{},"overview.html":{}}}],["category",{"_index":418,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"entities/ProductEntity.html":{},"injectables/ProductImagesService.html":{},"injectables/ProductsService.html":{}}}],["category.dto",{"_index":437,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/UpdateCategoryDto.html":{}}}],["category.dto.ts",{"_index":531,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["category.dto.ts:11",{"_index":534,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["category.dto.ts:5",{"_index":533,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["category.dto.ts:8",{"_index":532,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["category_id",{"_index":616,"title":{},"body":{"entities/ProductEntity.html":{}}}],["categorydtoout",{"_index":440,"title":{"classes/CategoryDtoOut.html":{}},"body":{"controllers/CategoriesController.html":{},"classes/CategoryDtoOut.html":{},"coverage.html":{}}}],["categorydtoout})@get",{"_index":421,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["categorydtoout})@get(':id",{"_index":424,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["categoryentity",{"_index":462,"title":{"entities/CategoryEntity.html":{}},"body":{"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"entities/CategoryEntity.html":{},"entities/ProductEntity.html":{},"coverage.html":{}}}],["categoryid",{"_index":544,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{}}}],["categoryname",{"_index":704,"title":{},"body":{"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{}}}],["categoryrepository",{"_index":468,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["cb",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["cb(null",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["checkpassword",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuser",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuser.email",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuser.id",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuser.password",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuser.username",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":0,"title":{"classes/AllExceptionsFilter.html":{},"classes/AuthGuard.html":{},"classes/BaseEntity.html":{},"classes/CategoryDtoOut.html":{},"classes/CreateCategoryDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUnitDto.html":{},"classes/LoginDto.html":{},"classes/PermissionDto.html":{},"classes/ProductDtoOut.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"classes/ProfileDto.html":{},"classes/RegisterDto.html":{},"classes/ResponseFormatter.html":{},"classes/RoleDto.html":{},"classes/UnitDtoOut.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUnitDto.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/CategoryDtoOut.html":{},"entities/CategoryEntity.html":{},"classes/CreateCategoryDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUnitDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PermissionDto.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"entities/ProductImagesEntity.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/ProfileDto.html":{},"classes/RegisterDto.html":{},"classes/ResponseFormatter.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"entities/RoleEntity.html":{},"injectables/RoleService.html":{},"classes/UnitDtoOut.html":{},"entities/UnitEntity.html":{},"controllers/UnitsController.html":{},"modules/UnitsModule.html":{},"injectables/UnitsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUnitDto.html":{},"entities/UserEntity.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/AuthGuard.html":{},"classes/BaseEntity.html":{},"classes/CategoryDtoOut.html":{},"classes/CreateCategoryDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUnitDto.html":{},"classes/LoginDto.html":{},"classes/PermissionDto.html":{},"classes/ProductDtoOut.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"classes/ProfileDto.html":{},"classes/RegisterDto.html":{},"classes/ResponseFormatter.html":{},"classes/RoleDto.html":{},"classes/UnitDtoOut.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUnitDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":276,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":277,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule",{"_index":458,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule_providers",{"_index":459,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_productsmodule",{"_index":777,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productsmodule_providers",{"_index":778,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_unitsmodule",{"_index":941,"title":{},"body":{"modules/UnitsModule.html":{},"overview.html":{}}}],["cluster_unitsmodule_providers",{"_index":942,"title":{},"body":{"modules/UnitsModule.html":{},"overview.html":{}}}],["column",{"_index":525,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ProductEntity.html":{},"entities/ProductImagesEntity.html":{},"entities/RoleEntity.html":{},"entities/UnitEntity.html":{},"entities/UserEntity.html":{}}}],["column({default",{"_index":976,"title":{},"body":{"entities/UserEntity.html":{}}}],["column({name",{"_index":621,"title":{},"body":{"entities/ProductEntity.html":{},"entities/ProductImagesEntity.html":{},"entities/UnitEntity.html":{}}}],["column({nullable",{"_index":510,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/UserEntity.html":{}}}],["column({type",{"_index":521,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["column({unique",{"_index":514,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/UnitEntity.html":{},"entities/UserEntity.html":{}}}],["compare",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{}}}],["compare(data.password",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["config",{"_index":997,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["config/ormconfig",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["console.error",{"_index":750,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["console.error(`error",{"_index":695,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["console.error(`failed",{"_index":254,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["const",{"_index":50,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/ResponseFormatter.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UnitsController.html":{},"injectables/UnitsService.html":{}}}],["constructor",{"_index":33,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductImagesService.html":{},"injectables/ProductsService.html":{},"classes/ResponseFormatter.html":{},"injectables/RoleService.html":{},"injectables/UnitsService.html":{}}}],["constructor(categoryrepository",{"_index":466,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["constructor(data",{"_index":826,"title":{},"body":{"classes/ResponseFormatter.html":{}}}],["constructor(private",{"_index":76,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductImagesController.html":{},"controllers/ProductsController.html":{},"controllers/RoleController.html":{},"controllers/UnitsController.html":{}}}],["constructor(productimagesrepository",{"_index":719,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["constructor(productrepository",{"_index":785,"title":{},"body":{"injectables/ProductsService.html":{}}}],["constructor(rolerepository",{"_index":869,"title":{},"body":{"injectables/RoleService.html":{}}}],["constructor(unitrepository",{"_index":948,"title":{},"body":{"injectables/UnitsService.html":{}}}],["constructor(userrepository",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{}}}],["context",{"_index":268,"title":{},"body":{"classes/AuthGuard.html":{}}}],["controller",{"_index":67,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductImagesController.html":{},"controllers/ProductsController.html":{},"controllers/RoleController.html":{},"controllers/UnitsController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductImagesController.html":{},"controllers/ProductsController.html":{},"controllers/RoleController.html":{},"controllers/UnitsController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('categories",{"_index":443,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["controller('product/images",{"_index":669,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["controller('products",{"_index":768,"title":{},"body":{"controllers/ProductsController.html":{}}}],["controller('roles",{"_index":846,"title":{},"body":{"controllers/RoleController.html":{}}}],["controller('units",{"_index":933,"title":{},"body":{"controllers/UnitsController.html":{}}}],["controller/auth.controller",{"_index":282,"title":{},"body":{"modules/AuthModule.html":{}}}],["controller/permission.controller",{"_index":298,"title":{},"body":{"modules/AuthModule.html":{}}}],["controller/role.controller",{"_index":296,"title":{},"body":{"modules/AuthModule.html":{}}}],["controllers",{"_index":69,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"controllers/ProductImagesController.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"controllers/RoleController.html":{},"controllers/UnitsController.html":{},"modules/UnitsModule.html":{},"overview.html":{}}}],["coverage",{"_index":986,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["coversion_factor",{"_index":899,"title":{},"body":{"entities/UnitEntity.html":{}}}],["coversionfactor",{"_index":561,"title":{},"body":{"classes/CreateUnitDto.html":{},"classes/UnitDtoOut.html":{},"entities/UnitEntity.html":{}}}],["create",{"_index":412,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/CreatePermissionDto.html":{},"classes/PermissionDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UnitsController.html":{},"injectables/UnitsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUnitDto.html":{}}}],["create(@body",{"_index":444,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"controllers/RoleController.html":{},"controllers/UnitsController.html":{}}}],["create(createcategorydto",{"_index":416,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["create(createproductdto",{"_index":755,"title":{},"body":{"controllers/ProductsController.html":{}}}],["create(createroledto",{"_index":836,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["create(createunitdto",{"_index":917,"title":{},"body":{"controllers/UnitsController.html":{}}}],["create(data",{"_index":469,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{},"injectables/UnitsService.html":{}}}],["createcategorydto",{"_index":417,"title":{"classes/CreateCategoryDto.html":{}},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/CreateCategoryDto.html":{},"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["createcategorydto})@post",{"_index":419,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["created",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"controllers/RoleController.html":{},"controllers/UnitsController.html":{}}}],["created_at",{"_index":391,"title":{},"body":{"classes/BaseEntity.html":{}}}],["createdat",{"_index":385,"title":{},"body":{"classes/BaseEntity.html":{},"classes/CategoryDtoOut.html":{},"classes/ProductDtoOut.html":{},"classes/UnitDtoOut.html":{}}}],["createdatecolumn",{"_index":401,"title":{},"body":{"classes/BaseEntity.html":{}}}],["createdatecolumn({name",{"_index":390,"title":{},"body":{"classes/BaseEntity.html":{}}}],["createpermissiondto",{"_index":535,"title":{"classes/CreatePermissionDto.html":{}},"body":{"classes/CreatePermissionDto.html":{},"classes/PermissionDto.html":{},"coverage.html":{}}}],["createproductdto",{"_index":541,"title":{"classes/CreateProductDto.html":{}},"body":{"classes/CreateProductDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["createroledto",{"_index":553,"title":{"classes/CreateRoleDto.html":{}},"body":{"classes/CreateRoleDto.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"injectables/RoleService.html":{},"coverage.html":{}}}],["createroledto})@post",{"_index":837,"title":{},"body":{"controllers/RoleController.html":{}}}],["createunitdto",{"_index":558,"title":{"classes/CreateUnitDto.html":{}},"body":{"classes/CreateUnitDto.html":{},"controllers/UnitsController.html":{},"injectables/UnitsService.html":{},"classes/UpdateUnitDto.html":{},"coverage.html":{}}}],["createunitdto})@post",{"_index":918,"title":{},"body":{"controllers/UnitsController.html":{}}}],["createuser",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{}}}],["ctx",{"_index":51,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{}}}],["ctx.getresponse",{"_index":53,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{}}}],["current",{"_index":244,"title":{},"body":{"controllers/AuthController.html":{}}}],["dari",{"_index":679,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["dasar",{"_index":911,"title":{},"body":{"entities/UnitEntity.html":{}}}],["data",{"_index":35,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ProductImagesController.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/ResponseFormatter.html":{},"controllers/RoleController.html":{},"controllers/UnitsController.html":{},"injectables/UnitsService.html":{}}}],["data')@apibody({schema",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["data.email",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.password",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.username",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["database",{"_index":1116,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":389,"title":{},"body":{"classes/BaseEntity.html":{},"classes/CategoryDtoOut.html":{},"entities/CategoryEntity.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{},"classes/UnitDtoOut.html":{},"entities/UnitEntity.html":{}}}],["decimal",{"_index":627,"title":{},"body":{"entities/ProductEntity.html":{}}}],["declarations",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductsModule.html":{},"modules/UnitsModule.html":{},"overview.html":{}}}],["decorator",{"_index":808,"title":{},"body":{"classes/ProfileDto.html":{}}}],["decorators",{"_index":72,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/BaseEntity.html":{},"controllers/CategoriesController.html":{},"classes/CategoryDtoOut.html":{},"entities/CategoryEntity.html":{},"classes/CreateCategoryDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUnitDto.html":{},"classes/LoginDto.html":{},"classes/PermissionDto.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"entities/ProductImagesEntity.html":{},"controllers/ProductsController.html":{},"classes/ProfileDto.html":{},"classes/RegisterDto.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"entities/RoleEntity.html":{},"classes/UnitDtoOut.html":{},"entities/UnitEntity.html":{},"controllers/UnitsController.html":{},"entities/UserEntity.html":{}}}],["default",{"_index":522,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ProductEntity.html":{},"classes/ResponseFormatter.html":{},"entities/UnitEntity.html":{},"entities/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":305,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":15,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/CategoryDtoOut.html":{},"entities/CategoryEntity.html":{},"classes/CreateCategoryDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUnitDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PermissionDto.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"entities/ProductImagesEntity.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/ProfileDto.html":{},"classes/RegisterDto.html":{},"classes/ResponseFormatter.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"entities/RoleEntity.html":{},"injectables/RoleService.html":{},"classes/UnitDtoOut.html":{},"entities/UnitEntity.html":{},"controllers/UnitsController.html":{},"injectables/UnitsService.html":{},"entities/UserEntity.html":{}}}],["delete",{"_index":248,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"controllers/UnitsController.html":{}}}],["delete(':id",{"_index":427,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"controllers/UnitsController.html":{}}}],["delete(':id/delete",{"_index":653,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["deleteat",{"_index":739,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["deleted",{"_index":457,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductImagesController.html":{},"controllers/ProductsController.html":{},"controllers/UnitsController.html":{}}}],["deleted_at",{"_index":508,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ProductEntity.html":{},"entities/UnitEntity.html":{}}}],["deletedat",{"_index":505,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ProductEntity.html":{},"injectables/ProductImagesService.html":{},"injectables/ProductsService.html":{},"entities/UnitEntity.html":{}}}],["deletedatecolumn",{"_index":526,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ProductEntity.html":{},"entities/UnitEntity.html":{}}}],["deletedatecolumn({name",{"_index":507,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ProductEntity.html":{},"entities/UnitEntity.html":{}}}],["deletedproduct",{"_index":800,"title":{},"body":{"injectables/ProductsService.html":{}}}],["deleteproductimagebyid",{"_index":649,"title":{},"body":{"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{}}}],["deleteproductimagebyid(@param('product_id",{"_index":693,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["deleteproductimagebyid(product_id",{"_index":652,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["deleteproductimagebyid(productimageid",{"_index":722,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["deleting",{"_index":696,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["dependencies",{"_index":82,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductsModule.html":{},"modules/UnitsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":486,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{},"injectables/RoleService.html":{},"injectables/UnitsService.html":{}}}],["description",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"classes/CategoryDtoOut.html":{},"entities/CategoryEntity.html":{},"classes/CreateCategoryDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateRoleDto.html":{},"classes/PermissionDto.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{},"controllers/ProductsController.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"entities/RoleEntity.html":{},"controllers/UnitsController.html":{},"index.html":{},"properties.html":{}}}],["destination",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["development",{"_index":1056,"title":{},"body":{"index.html":{}}}],["digunakan",{"_index":913,"title":{},"body":{"entities/UnitEntity.html":{}}}],["diskstorage",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["documentation",{"_index":987,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":1022,"title":{},"body":{"dependencies.html":{}}}],["dto/category.dto",{"_index":441,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["dto/create",{"_index":436,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UnitsController.html":{},"injectables/UnitsService.html":{}}}],["dto/login.dto",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/product",{"_index":665,"title":{},"body":{"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{}}}],["dto/product.dto",{"_index":767,"title":{},"body":{"controllers/ProductsController.html":{}}}],["dto/profile.dto",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/register.dto",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/role.dto",{"_index":843,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["dto/unit.dto",{"_index":931,"title":{},"body":{"controllers/UnitsController.html":{}}}],["dto/update",{"_index":438,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UnitsController.html":{},"injectables/UnitsService.html":{}}}],["dtoin",{"_index":686,"title":{},"body":{"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{}}}],["dtoin.image",{"_index":735,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["dtoin.product_id",{"_index":734,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["e2e",{"_index":1066,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":1044,"title":{},"body":{"index.html":{}}}],["email",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{},"classes/ProfileDto.html":{},"classes/RegisterDto.html":{},"entities/UserEntity.html":{}}}],["entities",{"_index":503,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ProductEntity.html":{},"entities/ProductImagesEntity.html":{},"entities/RoleEntity.html":{},"entities/UnitEntity.html":{},"entities/UserEntity.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entities/category.entity",{"_index":463,"title":{},"body":{"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{}}}],["entities/permission.entity",{"_index":302,"title":{},"body":{"modules/AuthModule.html":{}}}],["entities/product",{"_index":730,"title":{},"body":{"injectables/ProductImagesService.html":{},"modules/ProductsModule.html":{}}}],["entities/product.entity",{"_index":781,"title":{},"body":{"modules/ProductsModule.html":{},"injectables/ProductsService.html":{}}}],["entities/role.entity",{"_index":300,"title":{},"body":{"modules/AuthModule.html":{},"injectables/RoleService.html":{}}}],["entities/unit.entity",{"_index":945,"title":{},"body":{"modules/UnitsModule.html":{},"injectables/UnitsService.html":{}}}],["entities/user.entity",{"_index":290,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["entity",{"_index":502,"title":{"entities/CategoryEntity.html":{},"entities/ProductEntity.html":{},"entities/ProductImagesEntity.html":{},"entities/RoleEntity.html":{},"entities/UnitEntity.html":{},"entities/UserEntity.html":{}},"body":{"entities/CategoryEntity.html":{},"entities/ProductEntity.html":{},"entities/ProductImagesEntity.html":{},"entities/RoleEntity.html":{},"entities/UnitEntity.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["entity('categories",{"_index":528,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["entity('product_images",{"_index":717,"title":{},"body":{"entities/ProductImagesEntity.html":{}}}],["entity('products",{"_index":643,"title":{},"body":{"entities/ProductEntity.html":{}}}],["entity('roles",{"_index":867,"title":{},"body":{"entities/RoleEntity.html":{}}}],["entity('units",{"_index":906,"title":{},"body":{"entities/UnitEntity.html":{}}}],["entity('users",{"_index":984,"title":{},"body":{"entities/UserEntity.html":{}}}],["entity.{js,ts",{"_index":1121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["err",{"_index":253,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ProductImagesService.html":{}}}],["err.message",{"_index":751,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["error",{"_index":60,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{},"classes/ResponseFormatter.html":{}}}],["error.message",{"_index":697,"title":{},"body":{"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{}}}],["example",{"_index":1052,"title":{},"body":{"index.html":{}}}],["exception",{"_index":22,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{}}}],["exception.getresponse().tostring",{"_index":57,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{}}}],["exception.getstatus",{"_index":56,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{}}}],["exceptionfilter",{"_index":8,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{}}}],["executioncontext",{"_index":266,"title":{},"body":{"classes/AuthGuard.html":{}}}],["exists",{"_index":247,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["existssync",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{}}}],["existssync('public",{"_index":250,"title":{},"body":{"controllers/AuthController.html":{}}}],["expired",{"_index":584,"title":{},"body":{"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["expiresin",{"_index":313,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":31,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/CategoryDtoOut.html":{},"entities/CategoryEntity.html":{},"classes/CreateCategoryDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUnitDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PermissionDto.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"entities/ProductImagesEntity.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/ProfileDto.html":{},"classes/RegisterDto.html":{},"classes/ResponseFormatter.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"entities/RoleEntity.html":{},"injectables/RoleService.html":{},"classes/UnitDtoOut.html":{},"entities/UnitEntity.html":{},"controllers/UnitsController.html":{},"modules/UnitsModule.html":{},"injectables/UnitsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUnitDto.html":{},"entities/UserEntity.html":{}}}],["exports",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductsModule.html":{},"modules/UnitsModule.html":{},"overview.html":{}}}],["express",{"_index":30,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{},"classes/ResponseFormatter.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["extends",{"_index":261,"title":{},"body":{"classes/AuthGuard.html":{},"entities/CategoryEntity.html":{},"injectables/JwtStrategy.html":{},"entities/ProductEntity.html":{},"entities/ProductImagesEntity.html":{},"entities/RoleEntity.html":{},"entities/UnitEntity.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUnitDto.html":{},"entities/UserEntity.html":{}}}],["extension",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["extractjwt",{"_index":574,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":579,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["failed",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductImagesService.html":{}}}],["faktor",{"_index":907,"title":{},"body":{"entities/UnitEntity.html":{}}}],["false",{"_index":232,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/CategoryEntity.html":{},"injectables/JwtStrategy.html":{},"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{},"entities/UnitEntity.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/CategoryDtoOut.html":{},"entities/CategoryEntity.html":{},"classes/CreateCategoryDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUnitDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PermissionDto.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"entities/ProductImagesEntity.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/ProfileDto.html":{},"classes/RegisterDto.html":{},"classes/ResponseFormatter.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"entities/RoleEntity.html":{},"injectables/RoleService.html":{},"classes/UnitDtoOut.html":{},"entities/UnitEntity.html":{},"controllers/UnitsController.html":{},"modules/UnitsModule.html":{},"injectables/UnitsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUnitDto.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["file.filename",{"_index":242,"title":{},"body":{"controllers/AuthController.html":{}}}],["file.mimetype",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["file.originalname",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["filecommonpattern",{"_index":1119,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filefilter",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["fileinterceptor",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["fileinterceptor('avatar",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{}}}],["fileinterceptor('images",{"_index":670,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["filename",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["filepathpattern",{"_index":1118,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filesize",{"_index":234,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["findall",{"_index":413,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UnitsController.html":{},"injectables/UnitsService.html":{}}}],["findall(product_id",{"_index":726,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["findallproductimages",{"_index":650,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["findallproductimages(@param('id",{"_index":690,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["findallproductimages(id",{"_index":656,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["findone",{"_index":414,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UnitsController.html":{},"injectables/UnitsService.html":{}}}],["findone(@param('id",{"_index":450,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"controllers/RoleController.html":{},"controllers/UnitsController.html":{}}}],["findone(categories_id",{"_index":472,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["findone(id",{"_index":423,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/RoleController.html":{},"controllers/UnitsController.html":{},"injectables/UnitsService.html":{}}}],["findone(role_id",{"_index":874,"title":{},"body":{"injectables/RoleService.html":{}}}],["fk_category_id",{"_index":619,"title":{},"body":{"entities/ProductEntity.html":{}}}],["fk_product_id",{"_index":713,"title":{},"body":{"entities/ProductImagesEntity.html":{}}}],["foreignkeyconstraintname",{"_index":618,"title":{},"body":{"entities/ProductEntity.html":{},"entities/ProductImagesEntity.html":{}}}],["format",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["formaterror",{"_index":42,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{}}}],["formaterror(message",{"_index":63,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{}}}],["formattedresponse",{"_index":61,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{}}}],["found",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UnitsController.html":{},"injectables/UnitsService.html":{}}}],["framework",{"_index":1042,"title":{},"body":{"index.html":{}}}],["fs",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ProductImagesService.html":{}}}],["fs/promises",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{}}}],["function",{"_index":1000,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1036,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generatejwt",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatejwt(payload",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["get('/profile",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{}}}],["get(':id",{"_index":449,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductImagesController.html":{},"controllers/ProductsController.html":{},"controllers/RoleController.html":{},"controllers/UnitsController.html":{}}}],["gethello",{"_index":71,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":1038,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuser(userid",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["grow",{"_index":1073,"title":{},"body":{"index.html":{}}}],["gunakan",{"_index":807,"title":{},"body":{"classes/ProfileDto.html":{}}}],["handlerequest",{"_index":264,"title":{},"body":{"classes/AuthGuard.html":{}}}],["handlerequest(err",{"_index":269,"title":{},"body":{"classes/AuthGuard.html":{}}}],["hash",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{}}}],["hash(data.password",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{}}}],["hello",{"_index":123,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":879,"title":{},"body":{"injectables/RoleService.html":{},"index.html":{}}}],["host",{"_index":13,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{},"miscellaneous/variables.html":{}}}],["host.switchtohttp",{"_index":52,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{}}}],["hour",{"_index":1132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hours",{"_index":1130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hours').todate",{"_index":408,"title":{},"body":{"classes/BaseEntity.html":{}}}],["httpexception",{"_index":26,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthService.html":{},"classes/ResponseFormatter.html":{}}}],["httpexception('password",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpexception('user",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://nestjs.com",{"_index":1088,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":27,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"classes/ResponseFormatter.html":{},"controllers/RoleController.html":{},"controllers/UnitsController.html":{}}}],["httpstatus.bad_request",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.found",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.internal_server_error",{"_index":43,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{}}}],["httpstatus.not_found",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.ok",{"_index":41,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"classes/ResponseFormatter.html":{},"controllers/RoleController.html":{},"controllers/UnitsController.html":{}}}],["httpstatus.unauthorized",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{}}}],["id",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/CategoryDtoOut.html":{},"entities/CategoryEntity.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"injectables/JwtStrategy.html":{},"classes/PermissionDto.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"entities/ProductImagesEntity.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/ProfileDto.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"entities/RoleEntity.html":{},"injectables/RoleService.html":{},"classes/UnitDtoOut.html":{},"entities/UnitEntity.html":{},"controllers/UnitsController.html":{},"injectables/UnitsService.html":{},"entities/UserEntity.html":{}}}],["identifier",{"_index":988,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":580,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["image",{"_index":633,"title":{},"body":{"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"entities/ProductImagesEntity.html":{},"injectables/ProductImagesService.html":{},"injectables/ProductsService.html":{}}}],["image.id",{"_index":743,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["image.image",{"_index":745,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["image.product",{"_index":634,"title":{},"body":{"entities/ProductEntity.html":{}}}],["image.product.category.name",{"_index":748,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["image.product.name",{"_index":746,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["image.product.status",{"_index":747,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["image.product_id",{"_index":744,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["image/jpeg",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["image/jpg",{"_index":228,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["image/png",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["imagepath",{"_index":684,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["images",{"_index":668,"title":{},"body":{"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{}}}],["images.controller",{"_index":782,"title":{},"body":{"modules/ProductsModule.html":{}}}],["images.controller.ts",{"_index":647,"title":{},"body":{"controllers/ProductImagesController.html":{},"coverage.html":{}}}],["images.controller.ts:104",{"_index":654,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["images.controller.ts:76",{"_index":660,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["images.controller.ts:98",{"_index":657,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["images.dto",{"_index":666,"title":{},"body":{"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{}}}],["images.dto.ts",{"_index":700,"title":{},"body":{"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"coverage.html":{}}}],["images.dto.ts:11",{"_index":706,"title":{},"body":{"classes/ProductImagesDtoOut.html":{}}}],["images.dto.ts:16",{"_index":702,"title":{},"body":{"classes/ProductImagesDtoIn.html":{}}}],["images.dto.ts:19",{"_index":701,"title":{},"body":{"classes/ProductImagesDtoIn.html":{}}}],["images.dto.ts:5",{"_index":707,"title":{},"body":{"classes/ProductImagesDtoOut.html":{}}}],["images.dto.ts:8",{"_index":708,"title":{},"body":{"classes/ProductImagesDtoOut.html":{}}}],["images.entity",{"_index":641,"title":{},"body":{"entities/ProductEntity.html":{},"injectables/ProductImagesService.html":{},"modules/ProductsModule.html":{}}}],["images.entity.ts",{"_index":710,"title":{},"body":{"entities/ProductImagesEntity.html":{},"coverage.html":{}}}],["images.entity.ts:14",{"_index":711,"title":{},"body":{"entities/ProductImagesEntity.html":{}}}],["images.entity.ts:17",{"_index":715,"title":{},"body":{"entities/ProductImagesEntity.html":{}}}],["images.entity.ts:20",{"_index":712,"title":{},"body":{"entities/ProductImagesEntity.html":{}}}],["images.entity.ts:28",{"_index":714,"title":{},"body":{"entities/ProductImagesEntity.html":{}}}],["images.service",{"_index":662,"title":{},"body":{"controllers/ProductImagesController.html":{},"modules/ProductsModule.html":{}}}],["images.service.ts",{"_index":718,"title":{},"body":{"injectables/ProductImagesService.html":{},"coverage.html":{}}}],["images.service.ts:13",{"_index":720,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["images.service.ts:19",{"_index":729,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["images.service.ts:32",{"_index":727,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["images.service.ts:67",{"_index":723,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["images/product",{"_index":646,"title":{},"body":{"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["implements",{"_index":7,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{}}}],["import",{"_index":25,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/CategoryDtoOut.html":{},"entities/CategoryEntity.html":{},"classes/CreateCategoryDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUnitDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PermissionDto.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"entities/ProductImagesEntity.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/ProfileDto.html":{},"classes/RegisterDto.html":{},"classes/ResponseFormatter.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"entities/RoleEntity.html":{},"injectables/RoleService.html":{},"classes/UnitDtoOut.html":{},"entities/UnitEntity.html":{},"controllers/UnitsController.html":{},"modules/UnitsModule.html":{},"injectables/UnitsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUnitDto.html":{},"entities/UserEntity.html":{}}}],["imports",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductsModule.html":{},"modules/UnitsModule.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/CategoryDtoOut.html":{},"entities/CategoryEntity.html":{},"classes/CreateCategoryDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUnitDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PermissionDto.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"entities/ProductImagesEntity.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/ProfileDto.html":{},"classes/RegisterDto.html":{},"classes/ResponseFormatter.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"entities/RoleEntity.html":{},"injectables/RoleService.html":{},"classes/UnitDtoOut.html":{},"entities/UnitEntity.html":{},"controllers/UnitsController.html":{},"injectables/UnitsService.html":{},"entities/UserEntity.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/CategoryDtoOut.html":{},"entities/CategoryEntity.html":{},"classes/CreateCategoryDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUnitDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PermissionDto.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"entities/ProductImagesEntity.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/ProfileDto.html":{},"classes/RegisterDto.html":{},"classes/ResponseFormatter.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"entities/RoleEntity.html":{},"injectables/RoleService.html":{},"classes/UnitDtoOut.html":{},"entities/UnitEntity.html":{},"controllers/UnitsController.html":{},"modules/UnitsModule.html":{},"injectables/UnitsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUnitDto.html":{},"entities/UserEntity.html":{}}}],["inject(request",{"_index":481,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{},"injectables/UnitsService.html":{}}}],["injectable",{"_index":119,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductImagesService.html":{},"injectables/ProductsService.html":{},"injectables/RoleService.html":{},"injectables/UnitsService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductImagesService.html":{},"injectables/ProductsService.html":{},"injectables/RoleService.html":{},"injectables/UnitsService.html":{},"coverage.html":{}}}],["injectables",{"_index":120,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductImagesService.html":{},"injectables/ProductsService.html":{},"injectables/RoleService.html":{},"injectables/UnitsService.html":{},"overview.html":{}}}],["injectrepository",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/ProductImagesService.html":{},"injectables/ProductsService.html":{},"injectables/RoleService.html":{},"injectables/UnitsService.html":{}}}],["injectrepository(categoryentity",{"_index":480,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["injectrepository(productentity",{"_index":793,"title":{},"body":{"injectables/ProductsService.html":{}}}],["injectrepository(productimagesentity",{"_index":731,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["injectrepository(roleentity",{"_index":880,"title":{},"body":{"injectables/RoleService.html":{}}}],["injectrepository(unitentity",{"_index":956,"title":{},"body":{"injectables/UnitsService.html":{}}}],["injectrepository(userentity",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{}}}],["installation",{"_index":1051,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1054,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":55,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{}}}],["int",{"_index":637,"title":{},"body":{"entities/ProductEntity.html":{},"entities/UnitEntity.html":{}}}],["internal",{"_index":58,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{}}}],["inversejoincolumn",{"_index":980,"title":{},"body":{"entities/UserEntity.html":{}}}],["isemail",{"_index":824,"title":{},"body":{"classes/RegisterDto.html":{}}}],["isnotempty",{"_index":592,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isstring",{"_index":593,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["join",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["joincolumn",{"_index":639,"title":{},"body":{"entities/ProductEntity.html":{},"entities/ProductImagesEntity.html":{},"entities/UserEntity.html":{}}}],["jointable",{"_index":865,"title":{},"body":{"entities/RoleEntity.html":{},"entities/UserEntity.html":{}}}],["jpeg",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["jpg",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["jwt",{"_index":306,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":288,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwt_config",{"_index":286,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwt_config.expired",{"_index":314,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["jwt_config.secret",{"_index":311,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":578,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":284,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":309,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":278,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":1085,"title":{},"body":{"index.html":{}}}],["konversi",{"_index":908,"title":{},"body":{"entities/UnitEntity.html":{}}}],["legend",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductsModule.html":{},"modules/UnitsModule.html":{},"overview.html":{}}}],["license",{"_index":1091,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1070,"title":{},"body":{"index.html":{}}}],["limits",{"_index":233,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["login",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(data",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":142,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["manytomany",{"_index":864,"title":{},"body":{"entities/RoleEntity.html":{},"entities/UserEntity.html":{}}}],["manytomany(undefined",{"_index":861,"title":{},"body":{"entities/RoleEntity.html":{},"entities/UserEntity.html":{}}}],["manytoone",{"_index":640,"title":{},"body":{"entities/ProductEntity.html":{},"entities/ProductImagesEntity.html":{}}}],["manytoone(undefined)@joincolumn({name",{"_index":615,"title":{},"body":{"entities/ProductEntity.html":{},"entities/ProductImagesEntity.html":{}}}],["match",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{}}}],["matching",{"_index":66,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/CategoryDtoOut.html":{},"entities/CategoryEntity.html":{},"classes/CreateCategoryDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUnitDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PermissionDto.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"entities/ProductImagesEntity.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/ProfileDto.html":{},"classes/RegisterDto.html":{},"classes/ResponseFormatter.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"entities/RoleEntity.html":{},"injectables/RoleService.html":{},"classes/UnitDtoOut.html":{},"entities/UnitEntity.html":{},"controllers/UnitsController.html":{},"modules/UnitsModule.html":{},"injectables/UnitsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUnitDto.html":{},"entities/UserEntity.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.random().tostring(36).substring(7",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["maxlength",{"_index":594,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["maxlength(16",{"_index":598,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["menangkap",{"_index":677,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["mendokumentasikan",{"_index":810,"title":{},"body":{"classes/ProfileDto.html":{}}}],["message",{"_index":37,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthService.html":{},"classes/ResponseFormatter.html":{}}}],["metadata",{"_index":1030,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":10,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/ResponseFormatter.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UnitsController.html":{},"injectables/UnitsService.html":{}}}],["minlength",{"_index":595,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["minlength(6",{"_index":597,"title":{},"body":{"classes/LoginDto.html":{}}}],["minlength(8",{"_index":825,"title":{},"body":{"classes/RegisterDto.html":{}}}],["miscellaneous",{"_index":1035,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1069,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1060,"title":{},"body":{"index.html":{}}}],["module",{"_index":79,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductsModule.html":{},"modules/UnitsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductsModule.html":{},"modules/UnitsModule.html":{},"overview.html":{}}}],["modules",{"_index":81,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductsModule.html":{},"modules/UnitsModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/auth/auth.module",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/categories/categories.module",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/products/products.module",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/units/units.module",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["moment",{"_index":403,"title":{},"body":{"classes/BaseEntity.html":{}}}],["moment().add(7",{"_index":407,"title":{},"body":{"classes/BaseEntity.html":{}}}],["more",{"_index":1081,"title":{},"body":{"index.html":{}}}],["move",{"_index":877,"title":{},"body":{"injectables/RoleService.html":{}}}],["multer",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["myśliwiec",{"_index":1086,"title":{},"body":{"index.html":{}}}],["name",{"_index":19,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/CategoryDtoOut.html":{},"entities/CategoryEntity.html":{},"classes/CreateCategoryDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateRoleDto.html":{},"injectables/JwtStrategy.html":{},"classes/PermissionDto.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{},"entities/ProductImagesEntity.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/ProfileDto.html":{},"classes/ResponseFormatter.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"entities/RoleEntity.html":{},"injectables/RoleService.html":{},"entities/UnitEntity.html":{},"controllers/UnitsController.html":{},"injectables/UnitsService.html":{},"entities/UserEntity.html":{}}}],["namefolder",{"_index":240,"title":{},"body":{"controllers/AuthController.html":{}}}],["nest",{"_index":1048,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1090,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":28,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/ResponseFormatter.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UnitsController.html":{},"modules/UnitsModule.html":{},"injectables/UnitsService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":1010,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core",{"_index":1012,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":285,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":273,"title":{},"body":{"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{},"dependencies.html":{}}}],["nestjs/serve",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"classes/CategoryDtoOut.html":{},"classes/CreateCategoryDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUnitDto.html":{},"classes/LoginDto.html":{},"classes/PermissionDto.html":{},"classes/ProductDtoOut.html":{},"controllers/ProductImagesController.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"controllers/ProductsController.html":{},"classes/ProfileDto.html":{},"classes/RegisterDto.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"classes/UnitDtoOut.html":{},"controllers/UnitsController.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUnitDto.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"injectables/ProductImagesService.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"injectables/RoleService.html":{},"modules/UnitsModule.html":{},"injectables/UnitsService.html":{},"dependencies.html":{}}}],["new",{"_index":62,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/ResponseFormatter.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UnitsController.html":{},"injectables/UnitsService.html":{},"coverage.html":{}}}],["newproductimage",{"_index":732,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["newrole",{"_index":884,"title":{},"body":{"injectables/RoleService.html":{}}}],["node.js",{"_index":1041,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":479,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RoleService.html":{},"injectables/UnitsService.html":{}}}],["notfoundexception('category",{"_index":488,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["notfoundexception('product",{"_index":741,"title":{},"body":{"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["notfoundexception('products",{"_index":772,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["notfoundexception('role",{"_index":883,"title":{},"body":{"injectables/RoleService.html":{}}}],["notfoundexception('unit",{"_index":961,"title":{},"body":{"injectables/UnitsService.html":{}}}],["npm",{"_index":1053,"title":{},"body":{"index.html":{}}}],["null",{"_index":36,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/ProductImagesService.html":{},"injectables/ProductsService.html":{},"classes/ResponseFormatter.html":{}}}],["nullable",{"_index":393,"title":{},"body":{"classes/BaseEntity.html":{},"entities/CategoryEntity.html":{},"entities/ProductEntity.html":{},"entities/UnitEntity.html":{},"entities/UserEntity.html":{}}}],["number",{"_index":40,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/CategoriesService.html":{},"classes/CategoryDtoOut.html":{},"entities/CategoryEntity.html":{},"classes/CreateProductDto.html":{},"classes/CreateUnitDto.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"entities/ProductImagesEntity.html":{},"injectables/ProductImagesService.html":{},"injectables/ProductsService.html":{},"classes/ProfileDto.html":{},"classes/ResponseFormatter.html":{},"classes/UnitDtoOut.html":{},"entities/UnitEntity.html":{},"injectables/UnitsService.html":{}}}],["number(process.env.db_port",{"_index":1112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{},"miscellaneous/variables.html":{}}}],["object.assign(category",{"_index":489,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["object.assign(product",{"_index":798,"title":{},"body":{"injectables/ProductsService.html":{}}}],["object.assign(unit",{"_index":962,"title":{},"body":{"injectables/UnitsService.html":{}}}],["old",{"_index":255,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["onetomany",{"_index":527,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ProductEntity.html":{},"entities/RoleEntity.html":{},"entities/UserEntity.html":{}}}],["onetomany(undefined",{"_index":517,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ProductEntity.html":{}}}],["open",{"_index":1071,"title":{},"body":{"index.html":{}}}],["optional",{"_index":21,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"entities/CategoryEntity.html":{},"classes/CreateRoleDto.html":{},"injectables/JwtStrategy.html":{},"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/ProfileDto.html":{},"classes/ResponseFormatter.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"injectables/RoleService.html":{},"entities/UnitEntity.html":{},"controllers/UnitsController.html":{},"injectables/UnitsService.html":{},"entities/UserEntity.html":{}}}],["order",{"_index":485,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{},"injectables/RoleService.html":{},"injectables/UnitsService.html":{}}}],["originalname",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["originalname.lastindexof",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["originalname.substring",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["ormconfig",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["out",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductsModule.html":{},"modules/UnitsModule.html":{},"overview.html":{}}}],["overview",{"_index":1095,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1008,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"controllers/ProductImagesController.html":{},"controllers/ProductsController.html":{},"controllers/RoleController.html":{},"controllers/UnitsController.html":{}}}],["param('id",{"_index":453,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductImagesController.html":{},"controllers/ProductsController.html":{},"controllers/UnitsController.html":{}}}],["parameter",{"_index":680,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["parameters",{"_index":17,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/ResponseFormatter.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UnitsController.html":{},"injectables/UnitsService.html":{}}}],["partialtype",{"_index":966,"title":{},"body":{"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUnitDto.html":{}}}],["partialtype(createcategorydto",{"_index":965,"title":{},"body":{"classes/UpdateCategoryDto.html":{}}}],["partialtype(createproductdto",{"_index":968,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["partialtype(createunitdto",{"_index":970,"title":{},"body":{"classes/UpdateUnitDto.html":{}}}],["passport",{"_index":576,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportauthguard",{"_index":272,"title":{},"body":{"classes/AuthGuard.html":{}}}],["passportauthguard('jwt",{"_index":262,"title":{},"body":{"classes/AuthGuard.html":{}}}],["passportmodule",{"_index":283,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":304,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":573,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":568,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":587,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"entities/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["patch",{"_index":433,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"controllers/UnitsController.html":{}}}],["patch(':id",{"_index":452,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"controllers/UnitsController.html":{}}}],["path",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.exp",{"_index":585,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":582,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.username",{"_index":583,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["perhatikan",{"_index":673,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["perlu",{"_index":676,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["permission.dto.ts",{"_index":539,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/PermissionDto.html":{}}}],["permissioncontroller",{"_index":297,"title":{},"body":{"modules/AuthModule.html":{}}}],["permissiondto",{"_index":540,"title":{"classes/PermissionDto.html":{}},"body":{"classes/CreatePermissionDto.html":{},"classes/PermissionDto.html":{},"coverage.html":{}}}],["permissionentity",{"_index":301,"title":{},"body":{"modules/AuthModule.html":{}}}],["permissions",{"_index":845,"title":{},"body":{"controllers/RoleController.html":{}}}],["permissionservice",{"_index":294,"title":{},"body":{"modules/AuthModule.html":{}}}],["pg",{"_index":1025,"title":{},"body":{"dependencies.html":{}}}],["pgsql",{"_index":1027,"title":{},"body":{"dependencies.html":{}}}],["please",{"_index":1079,"title":{},"body":{"index.html":{}}}],["png",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["port",{"_index":1111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductImagesController.html":{},"controllers/ProductsController.html":{},"controllers/RoleController.html":{},"controllers/UnitsController.html":{}}}],["post('/avatar",{"_index":238,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/login",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/register",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(':id/upload",{"_index":672,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["postgres",{"_index":1109,"title":{},"body":{"miscellaneous/variables.html":{}}}],["precision",{"_index":628,"title":{},"body":{"entities/ProductEntity.html":{}}}],["prefix",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductImagesController.html":{},"controllers/ProductsController.html":{},"controllers/RoleController.html":{},"controllers/UnitsController.html":{}}}],["price",{"_index":545,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{},"injectables/ProductsService.html":{}}}],["primarygeneratedcolumn",{"_index":512,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ProductEntity.html":{},"entities/ProductImagesEntity.html":{},"entities/RoleEntity.html":{},"entities/UnitEntity.html":{},"entities/UserEntity.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":858,"title":{},"body":{"entities/RoleEntity.html":{},"entities/UserEntity.html":{}}}],["private",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/ProductImagesService.html":{},"injectables/ProductsService.html":{},"injectables/RoleService.html":{},"injectables/UnitsService.html":{}}}],["process.env.db_connection",{"_index":1108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_database",{"_index":1117,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_host",{"_index":1110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_password",{"_index":1115,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_username",{"_index":1114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["product",{"_index":518,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{},"entities/ProductImagesEntity.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{}}}],["product.category",{"_index":519,"title":{},"body":{"entities/CategoryEntity.html":{},"injectables/ProductImagesService.html":{}}}],["product.dto",{"_index":766,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts",{"_index":543,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["product.dto.ts:11",{"_index":550,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:14",{"_index":552,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:17",{"_index":551,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:20",{"_index":547,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:5",{"_index":549,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:8",{"_index":548,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.entity",{"_index":716,"title":{},"body":{"entities/ProductImagesEntity.html":{}}}],["product/images",{"_index":648,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["product_id",{"_index":655,"title":{},"body":{"controllers/ProductImagesController.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"entities/ProductImagesEntity.html":{},"injectables/ProductImagesService.html":{}}}],["productdtoout",{"_index":602,"title":{"classes/ProductDtoOut.html":{}},"body":{"classes/ProductDtoOut.html":{},"controllers/ProductsController.html":{},"coverage.html":{}}}],["productdtoout})@get",{"_index":757,"title":{},"body":{"controllers/ProductsController.html":{}}}],["productdtoout})@get(':id",{"_index":759,"title":{},"body":{"controllers/ProductsController.html":{}}}],["productentity",{"_index":516,"title":{"entities/ProductEntity.html":{}},"body":{"entities/CategoryEntity.html":{},"entities/ProductEntity.html":{},"entities/ProductImagesEntity.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"entities/UnitEntity.html":{},"coverage.html":{}}}],["productimage",{"_index":687,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["productimageid",{"_index":724,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["productimages",{"_index":614,"title":{},"body":{"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{},"injectables/ProductsService.html":{}}}],["productimages.map((image",{"_index":742,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["productimages[0]?.product?.deletedat",{"_index":740,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["productimagescontroller",{"_index":644,"title":{"controllers/ProductImagesController.html":{}},"body":{"controllers/ProductImagesController.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["productimagesdtoin",{"_index":664,"title":{"classes/ProductImagesDtoIn.html":{}},"body":{"controllers/ProductImagesController.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"injectables/ProductImagesService.html":{},"coverage.html":{}}}],["productimagesdtoout",{"_index":703,"title":{"classes/ProductImagesDtoOut.html":{}},"body":{"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"coverage.html":{}}}],["productimagesentity",{"_index":632,"title":{"entities/ProductImagesEntity.html":{}},"body":{"entities/ProductEntity.html":{},"entities/ProductImagesEntity.html":{},"injectables/ProductImagesService.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["productimagesrepository",{"_index":721,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["productimagesservice",{"_index":661,"title":{"injectables/ProductImagesService.html":{}},"body":{"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{},"modules/ProductsModule.html":{},"coverage.html":{},"overview.html":{}}}],["production",{"_index":1062,"title":{},"body":{"index.html":{}}}],["productrepository",{"_index":787,"title":{},"body":{"injectables/ProductsService.html":{}}}],["products",{"_index":506,"title":{},"body":{"entities/CategoryEntity.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["products.controller",{"_index":780,"title":{},"body":{"modules/ProductsModule.html":{}}}],["products.service",{"_index":765,"title":{},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{}}}],["productscontroller",{"_index":753,"title":{"controllers/ProductsController.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["productsmodule",{"_index":93,"title":{"modules/ProductsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules.html":{},"overview.html":{}}}],["productsservice",{"_index":764,"title":{"injectables/ProductsService.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["produk",{"_index":678,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["profile",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["profile(@req",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(req",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(user_id",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{}}}],["profiledto",{"_index":174,"title":{"classes/ProfileDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/ProfileDto.html":{},"coverage.html":{}}}],["profiledto})@apibearerauth('accesstoken')@useguards(authguard)@get('/profile",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{}}}],["progressive",{"_index":1040,"title":{},"body":{"index.html":{}}}],["project",{"_index":1072,"title":{},"body":{"index.html":{}}}],["promise",{"_index":725,"title":{},"body":{"injectables/ProductImagesService.html":{},"controllers/UnitsController.html":{}}}],["properties",{"_index":203,"title":{"properties.html":{}},"body":{"controllers/AuthController.html":{},"classes/BaseEntity.html":{},"classes/CategoryDtoOut.html":{},"entities/CategoryEntity.html":{},"classes/CreateCategoryDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUnitDto.html":{},"classes/LoginDto.html":{},"classes/PermissionDto.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"entities/ProductImagesEntity.html":{},"classes/ProfileDto.html":{},"classes/RegisterDto.html":{},"classes/ResponseFormatter.html":{},"classes/RoleDto.html":{},"entities/RoleEntity.html":{},"classes/UnitDtoOut.html":{},"entities/UnitEntity.html":{},"entities/UserEntity.html":{},"properties.html":{}}}],["property",{"_index":307,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductsModule.html":{},"modules/UnitsModule.html":{},"overview.html":{}}}],["public",{"_index":34,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"classes/ResponseFormatter.html":{}}}],["public/uploads/image",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{}}}],["public/uploads/product",{"_index":671,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["randomname",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["read",{"_index":1080,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":77,"title":{},"body":{"controllers/AppController.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UnitsController.html":{},"injectables/UnitsService.html":{}}}],["referencedcolumnname",{"_index":617,"title":{},"body":{"entities/ProductEntity.html":{},"entities/ProductImagesEntity.html":{},"entities/UserEntity.html":{}}}],["reflect",{"_index":1029,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["register(@body",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(data",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["registerdto",{"_index":152,"title":{"classes/RegisterDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RegisterDto.html":{},"coverage.html":{}}}],["relations",{"_index":738,"title":{},"body":{"injectables/ProductImagesService.html":{},"injectables/ProductsService.html":{}}}],["remove",{"_index":415,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UnitsController.html":{},"injectables/UnitsService.html":{}}}],["remove(@param('id",{"_index":455,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"controllers/UnitsController.html":{}}}],["remove(categories_id",{"_index":475,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["remove(id",{"_index":426,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UnitsController.html":{},"injectables/UnitsService.html":{}}}],["repository",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/ProductImagesService.html":{},"injectables/ProductsService.html":{},"injectables/RoleService.html":{},"injectables/UnitsService.html":{},"index.html":{}}}],["req",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CategoriesService.html":{},"controllers/ProductImagesController.html":{},"injectables/ProductsService.html":{},"injectables/UnitsService.html":{}}}],["req.user.id",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{}}}],["reset",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductsModule.html":{},"modules/UnitsModule.html":{},"overview.html":{}}}],["response",{"_index":29,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{}}}],["response.status(status).json(formattedresponse",{"_index":64,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{}}}],["responseformatter",{"_index":32,"title":{"classes/ResponseFormatter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductImagesController.html":{},"controllers/ProductsController.html":{},"classes/ResponseFormatter.html":{},"controllers/RoleController.html":{},"controllers/UnitsController.html":{},"coverage.html":{}}}],["responseformatter(categories",{"_index":448,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["responseformatter(category",{"_index":446,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["responseformatter(product",{"_index":770,"title":{},"body":{"controllers/ProductsController.html":{}}}],["responseformatter(productimage",{"_index":689,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["responseformatter(productimages",{"_index":692,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["responseformatter(products",{"_index":773,"title":{},"body":{"controllers/ProductsController.html":{}}}],["responseformatter(profile",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{}}}],["responseformatter(role",{"_index":850,"title":{},"body":{"controllers/RoleController.html":{}}}],["responseformatter(roles",{"_index":848,"title":{},"body":{"controllers/RoleController.html":{}}}],["responseformatter(unit",{"_index":935,"title":{},"body":{"controllers/UnitsController.html":{}}}],["responseformatter(units",{"_index":937,"title":{},"body":{"controllers/UnitsController.html":{}}}],["responseformatter(uploadavatar",{"_index":258,"title":{},"body":{"controllers/AuthController.html":{}}}],["results",{"_index":65,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/CategoryDtoOut.html":{},"entities/CategoryEntity.html":{},"classes/CreateCategoryDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUnitDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PermissionDto.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"entities/ProductImagesEntity.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/ProfileDto.html":{},"classes/RegisterDto.html":{},"classes/ResponseFormatter.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"entities/RoleEntity.html":{},"injectables/RoleService.html":{},"classes/UnitDtoOut.html":{},"entities/UnitEntity.html":{},"controllers/UnitsController.html":{},"modules/UnitsModule.html":{},"injectables/UnitsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUnitDto.html":{},"entities/UserEntity.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":47,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/ResponseFormatter.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UnitsController.html":{},"injectables/UnitsService.html":{}}}],["returns",{"_index":23,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/ResponseFormatter.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UnitsController.html":{},"injectables/UnitsService.html":{}}}],["role",{"_index":816,"title":{},"body":{"classes/RegisterDto.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"entities/UserEntity.html":{}}}],["role.entity",{"_index":983,"title":{},"body":{"entities/UserEntity.html":{}}}],["role.users",{"_index":985,"title":{},"body":{"entities/UserEntity.html":{}}}],["role.users)@jointable({name",{"_index":978,"title":{},"body":{"entities/UserEntity.html":{}}}],["role_id",{"_index":876,"title":{},"body":{"injectables/RoleService.html":{},"entities/UserEntity.html":{}}}],["rolecontroller",{"_index":281,"title":{"controllers/RoleController.html":{}},"body":{"modules/AuthModule.html":{},"controllers/RoleController.html":{},"coverage.html":{}}}],["roledto",{"_index":557,"title":{"classes/RoleDto.html":{}},"body":{"classes/CreateRoleDto.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"coverage.html":{}}}],["roledto})@get",{"_index":839,"title":{},"body":{"controllers/RoleController.html":{}}}],["roledto})@get(':id",{"_index":841,"title":{},"body":{"controllers/RoleController.html":{}}}],["roleentity",{"_index":299,"title":{"entities/RoleEntity.html":{}},"body":{"modules/AuthModule.html":{},"entities/RoleEntity.html":{},"injectables/RoleService.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["rolerepository",{"_index":871,"title":{},"body":{"injectables/RoleService.html":{}}}],["roles",{"_index":835,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{},"entities/UserEntity.html":{}}}],["roleservice",{"_index":279,"title":{"injectables/RoleService.html":{}},"body":{"modules/AuthModule.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"coverage.html":{},"overview.html":{}}}],["rootpath",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":1057,"title":{},"body":{"index.html":{}}}],["rute",{"_index":681,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["rxjs",{"_index":1032,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":1045,"title":{},"body":{"index.html":{}}}],["scale",{"_index":630,"title":{},"body":{"entities/ProductEntity.html":{}}}],["schema",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["sebagai",{"_index":813,"title":{},"body":{"classes/ProfileDto.html":{}}}],["seconds",{"_index":1127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secret",{"_index":310,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":581,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["select",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductsService.html":{}}}],["server",{"_index":59,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{},"index.html":{}}}],["serveroot",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["service/auth.service",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["service/permission.service",{"_index":295,"title":{},"body":{"modules/AuthModule.html":{}}}],["service/role.service",{"_index":293,"title":{},"body":{"modules/AuthModule.html":{},"controllers/RoleController.html":{}}}],["session",{"_index":308,"title":{},"body":{"modules/AuthModule.html":{}}}],["setiap",{"_index":909,"title":{},"body":{"entities/UnitEntity.html":{}}}],["side",{"_index":1046,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":312,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/CategoryDtoOut.html":{},"entities/CategoryEntity.html":{},"classes/CreateCategoryDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUnitDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PermissionDto.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"entities/ProductImagesEntity.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/ProfileDto.html":{},"classes/RegisterDto.html":{},"classes/ResponseFormatter.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"entities/RoleEntity.html":{},"injectables/RoleService.html":{},"classes/UnitDtoOut.html":{},"entities/UnitEntity.html":{},"controllers/UnitsController.html":{},"modules/UnitsModule.html":{},"injectables/UnitsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUnitDto.html":{},"entities/UserEntity.html":{},"index.html":{}}}],["sponsors",{"_index":1075,"title":{},"body":{"index.html":{}}}],["src/.../config_jwt.ts",{"_index":1106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1037,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../ormconfig.ts",{"_index":1105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":70,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":73,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":121,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":122,"title":{},"body":{"injectables/AppService.html":{}}}],["src/config/common/baseentity",{"_index":292,"title":{},"body":{"modules/AuthModule.html":{},"entities/CategoryEntity.html":{},"entities/ProductEntity.html":{},"entities/ProductImagesEntity.html":{},"entities/RoleEntity.html":{},"entities/UnitEntity.html":{},"entities/UserEntity.html":{}}}],["src/config/common/baseentity.ts",{"_index":384,"title":{},"body":{"classes/BaseEntity.html":{},"coverage.html":{}}}],["src/config/common/baseentity.ts:12",{"_index":399,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/config/common/baseentity.ts:17",{"_index":400,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/config/common/baseentity.ts:6",{"_index":394,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/config/common/baseentity.ts:9",{"_index":397,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/config/config_jwt",{"_index":287,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["src/config/config_jwt.ts",{"_index":993,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/ormconfig.ts",{"_index":996,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/response_formatter",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductImagesController.html":{},"controllers/ProductsController.html":{},"controllers/RoleController.html":{},"controllers/UnitsController.html":{}}}],["src/config/response_formatter.ts",{"_index":6,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{},"coverage.html":{}}}],["src/config/response_formatter.ts:10",{"_index":827,"title":{},"body":{"classes/ResponseFormatter.html":{}}}],["src/config/response_formatter.ts:12",{"_index":829,"title":{},"body":{"classes/ResponseFormatter.html":{}}}],["src/config/response_formatter.ts:13",{"_index":830,"title":{},"body":{"classes/ResponseFormatter.html":{}}}],["src/config/response_formatter.ts:14",{"_index":831,"title":{},"body":{"classes/ResponseFormatter.html":{}}}],["src/config/response_formatter.ts:17",{"_index":832,"title":{},"body":{"classes/ResponseFormatter.html":{}}}],["src/config/response_formatter.ts:27",{"_index":833,"title":{},"body":{"classes/ResponseFormatter.html":{}}}],["src/config/response_formatter.ts:38",{"_index":16,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["src/main.ts",{"_index":999,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/auth/auth.guard",{"_index":663,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["src/modules/auth/auth.guard.ts",{"_index":260,"title":{},"body":{"classes/AuthGuard.html":{},"coverage.html":{}}}],["src/modules/auth/auth.guard.ts:10",{"_index":270,"title":{},"body":{"classes/AuthGuard.html":{}}}],["src/modules/auth/auth.guard.ts:6",{"_index":267,"title":{},"body":{"classes/AuthGuard.html":{}}}],["src/modules/auth/auth.module.ts",{"_index":280,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/auth/controller/auth.controller.ts",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/modules/auth/controller/auth.controller.ts:114",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/controller/auth.controller.ts:38",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/controller/auth.controller.ts:44",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/controller/auth.controller.ts:56",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/controller/role.controller.ts",{"_index":834,"title":{},"body":{"controllers/RoleController.html":{},"coverage.html":{}}}],["src/modules/auth/controller/role.controller.ts:29",{"_index":840,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/modules/auth/controller/role.controller.ts:41",{"_index":838,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/modules/auth/controller/role.controller.ts:53",{"_index":842,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/modules/auth/dto/login.dto.ts",{"_index":586,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/modules/auth/dto/login.dto.ts:14",{"_index":589,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/modules/auth/dto/login.dto.ts:7",{"_index":591,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/modules/auth/dto/permission.dto.ts",{"_index":536,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/PermissionDto.html":{},"coverage.html":{}}}],["src/modules/auth/dto/permission.dto.ts:12",{"_index":599,"title":{},"body":{"classes/PermissionDto.html":{}}}],["src/modules/auth/dto/permission.dto.ts:18",{"_index":538,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["src/modules/auth/dto/permission.dto.ts:21",{"_index":537,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["src/modules/auth/dto/permission.dto.ts:6",{"_index":600,"title":{},"body":{"classes/PermissionDto.html":{}}}],["src/modules/auth/dto/permission.dto.ts:9",{"_index":601,"title":{},"body":{"classes/PermissionDto.html":{}}}],["src/modules/auth/dto/profile.dto.ts",{"_index":802,"title":{},"body":{"classes/ProfileDto.html":{},"coverage.html":{}}}],["src/modules/auth/dto/profile.dto.ts:12",{"_index":804,"title":{},"body":{"classes/ProfileDto.html":{}}}],["src/modules/auth/dto/profile.dto.ts:15",{"_index":803,"title":{},"body":{"classes/ProfileDto.html":{}}}],["src/modules/auth/dto/profile.dto.ts:6",{"_index":805,"title":{},"body":{"classes/ProfileDto.html":{}}}],["src/modules/auth/dto/profile.dto.ts:9",{"_index":806,"title":{},"body":{"classes/ProfileDto.html":{}}}],["src/modules/auth/dto/register.dto.ts",{"_index":815,"title":{},"body":{"classes/RegisterDto.html":{},"coverage.html":{}}}],["src/modules/auth/dto/register.dto.ts:14",{"_index":823,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/modules/auth/dto/register.dto.ts:20",{"_index":818,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/modules/auth/dto/register.dto.ts:27",{"_index":820,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/modules/auth/dto/register.dto.ts:30",{"_index":821,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/modules/auth/dto/role.dto.ts",{"_index":554,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/RoleDto.html":{},"coverage.html":{}}}],["src/modules/auth/dto/role.dto.ts:11",{"_index":852,"title":{},"body":{"classes/RoleDto.html":{}}}],["src/modules/auth/dto/role.dto.ts:16",{"_index":556,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["src/modules/auth/dto/role.dto.ts:19",{"_index":555,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["src/modules/auth/dto/role.dto.ts:5",{"_index":853,"title":{},"body":{"classes/RoleDto.html":{}}}],["src/modules/auth/dto/role.dto.ts:8",{"_index":854,"title":{},"body":{"classes/RoleDto.html":{}}}],["src/modules/auth/entities/role.entity.ts",{"_index":855,"title":{},"body":{"entities/RoleEntity.html":{},"coverage.html":{}}}],["src/modules/auth/entities/role.entity.ts:15",{"_index":859,"title":{},"body":{"entities/RoleEntity.html":{}}}],["src/modules/auth/entities/role.entity.ts:18",{"_index":860,"title":{},"body":{"entities/RoleEntity.html":{}}}],["src/modules/auth/entities/role.entity.ts:21",{"_index":857,"title":{},"body":{"entities/RoleEntity.html":{}}}],["src/modules/auth/entities/role.entity.ts:25",{"_index":863,"title":{},"body":{"entities/RoleEntity.html":{}}}],["src/modules/auth/entities/user.entity.ts",{"_index":971,"title":{},"body":{"entities/UserEntity.html":{},"coverage.html":{}}}],["src/modules/auth/entities/user.entity.ts:15",{"_index":974,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/modules/auth/entities/user.entity.ts:18",{"_index":982,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/modules/auth/entities/user.entity.ts:21",{"_index":973,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/modules/auth/entities/user.entity.ts:24",{"_index":975,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/modules/auth/entities/user.entity.ts:27",{"_index":972,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/modules/auth/entities/user.entity.ts:30",{"_index":977,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/modules/auth/entities/user.entity.ts:38",{"_index":981,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/modules/auth/jwt.strategy.ts",{"_index":567,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/modules/auth/jwt.strategy.ts:16",{"_index":572,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/auth/jwt.strategy.ts:7",{"_index":570,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/auth/service/auth.service.ts",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/modules/auth/service/auth.service.ts:115",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/service/auth.service.ts:13",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/service/auth.service.ts:155",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/service/auth.service.ts:21",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/service/auth.service.ts:40",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/service/auth.service.ts:65",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/service/auth.service.ts:95",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/service/role.service.ts",{"_index":868,"title":{},"body":{"injectables/RoleService.html":{},"coverage.html":{}}}],["src/modules/auth/service/role.service.ts:14",{"_index":873,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/modules/auth/service/role.service.ts:24",{"_index":875,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/modules/auth/service/role.service.ts:36",{"_index":872,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/modules/auth/service/role.service.ts:8",{"_index":870,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/modules/categories/categories.controller.ts",{"_index":410,"title":{},"body":{"controllers/CategoriesController.html":{},"coverage.html":{}}}],["src/modules/categories/categories.controller.ts:33",{"_index":420,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/modules/categories/categories.controller.ts:45",{"_index":422,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/modules/categories/categories.controller.ts:57",{"_index":425,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/modules/categories/categories.controller.ts:69",{"_index":432,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/modules/categories/categories.controller.ts:82",{"_index":428,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/modules/categories/categories.module.ts",{"_index":460,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["src/modules/categories/categories.service.ts",{"_index":465,"title":{},"body":{"injectables/CategoriesService.html":{},"coverage.html":{}}}],["src/modules/categories/categories.service.ts:17",{"_index":470,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/modules/categories/categories.service.ts:23",{"_index":471,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/modules/categories/categories.service.ts:33",{"_index":473,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/modules/categories/categories.service.ts:47",{"_index":478,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/modules/categories/categories.service.ts:63",{"_index":476,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/modules/categories/categories.service.ts:9",{"_index":467,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/modules/categories/dto/category.dto.ts",{"_index":492,"title":{},"body":{"classes/CategoryDtoOut.html":{},"coverage.html":{}}}],["src/modules/categories/dto/category.dto.ts:11",{"_index":500,"title":{},"body":{"classes/CategoryDtoOut.html":{}}}],["src/modules/categories/dto/category.dto.ts:14",{"_index":495,"title":{},"body":{"classes/CategoryDtoOut.html":{}}}],["src/modules/categories/dto/category.dto.ts:17",{"_index":494,"title":{},"body":{"classes/CategoryDtoOut.html":{}}}],["src/modules/categories/dto/category.dto.ts:20",{"_index":501,"title":{},"body":{"classes/CategoryDtoOut.html":{}}}],["src/modules/categories/dto/category.dto.ts:5",{"_index":497,"title":{},"body":{"classes/CategoryDtoOut.html":{}}}],["src/modules/categories/dto/category.dto.ts:8",{"_index":498,"title":{},"body":{"classes/CategoryDtoOut.html":{}}}],["src/modules/categories/dto/create",{"_index":530,"title":{},"body":{"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["src/modules/categories/dto/update",{"_index":964,"title":{},"body":{"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["src/modules/categories/entities/category.entity",{"_index":642,"title":{},"body":{"entities/ProductEntity.html":{}}}],["src/modules/categories/entities/category.entity.ts",{"_index":504,"title":{},"body":{"entities/CategoryEntity.html":{},"coverage.html":{}}}],["src/modules/categories/entities/category.entity.ts:14",{"_index":513,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["src/modules/categories/entities/category.entity.ts:17",{"_index":515,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["src/modules/categories/entities/category.entity.ts:20",{"_index":523,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["src/modules/categories/entities/category.entity.ts:23",{"_index":511,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["src/modules/categories/entities/category.entity.ts:26",{"_index":509,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["src/modules/categories/entities/category.entity.ts:29",{"_index":520,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["src/modules/products/dto/create",{"_index":542,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["src/modules/products/dto/product",{"_index":699,"title":{},"body":{"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"coverage.html":{}}}],["src/modules/products/dto/product.dto.ts",{"_index":603,"title":{},"body":{"classes/ProductDtoOut.html":{},"coverage.html":{}}}],["src/modules/products/dto/product.dto.ts:11",{"_index":606,"title":{},"body":{"classes/ProductDtoOut.html":{}}}],["src/modules/products/dto/product.dto.ts:14",{"_index":609,"title":{},"body":{"classes/ProductDtoOut.html":{}}}],["src/modules/products/dto/product.dto.ts:17",{"_index":611,"title":{},"body":{"classes/ProductDtoOut.html":{}}}],["src/modules/products/dto/product.dto.ts:20",{"_index":610,"title":{},"body":{"classes/ProductDtoOut.html":{}}}],["src/modules/products/dto/product.dto.ts:23",{"_index":604,"title":{},"body":{"classes/ProductDtoOut.html":{}}}],["src/modules/products/dto/product.dto.ts:26",{"_index":605,"title":{},"body":{"classes/ProductDtoOut.html":{}}}],["src/modules/products/dto/product.dto.ts:29",{"_index":612,"title":{},"body":{"classes/ProductDtoOut.html":{}}}],["src/modules/products/dto/product.dto.ts:5",{"_index":607,"title":{},"body":{"classes/ProductDtoOut.html":{}}}],["src/modules/products/dto/product.dto.ts:8",{"_index":608,"title":{},"body":{"classes/ProductDtoOut.html":{}}}],["src/modules/products/dto/update",{"_index":967,"title":{},"body":{"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["src/modules/products/entities/product",{"_index":709,"title":{},"body":{"entities/ProductImagesEntity.html":{},"coverage.html":{}}}],["src/modules/products/entities/product.entity",{"_index":524,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/UnitEntity.html":{}}}],["src/modules/products/entities/product.entity.ts",{"_index":613,"title":{},"body":{"entities/ProductEntity.html":{},"coverage.html":{}}}],["src/modules/products/entities/product.entity.ts:17",{"_index":625,"title":{},"body":{"entities/ProductEntity.html":{}}}],["src/modules/products/entities/product.entity.ts:20",{"_index":626,"title":{},"body":{"entities/ProductEntity.html":{}}}],["src/modules/products/entities/product.entity.ts:23",{"_index":624,"title":{},"body":{"entities/ProductEntity.html":{}}}],["src/modules/products/entities/product.entity.ts:26",{"_index":631,"title":{},"body":{"entities/ProductEntity.html":{}}}],["src/modules/products/entities/product.entity.ts:29",{"_index":638,"title":{},"body":{"entities/ProductEntity.html":{}}}],["src/modules/products/entities/product.entity.ts:32",{"_index":636,"title":{},"body":{"entities/ProductEntity.html":{}}}],["src/modules/products/entities/product.entity.ts:35",{"_index":622,"title":{},"body":{"entities/ProductEntity.html":{}}}],["src/modules/products/entities/product.entity.ts:38",{"_index":623,"title":{},"body":{"entities/ProductEntity.html":{}}}],["src/modules/products/entities/product.entity.ts:46",{"_index":620,"title":{},"body":{"entities/ProductEntity.html":{}}}],["src/modules/products/entities/product.entity.ts:49",{"_index":635,"title":{},"body":{"entities/ProductEntity.html":{}}}],["src/modules/products/product",{"_index":645,"title":{},"body":{"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{},"coverage.html":{}}}],["src/modules/products/products.controller.ts",{"_index":754,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{}}}],["src/modules/products/products.controller.ts:29",{"_index":756,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/modules/products/products.controller.ts:42",{"_index":758,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/modules/products/products.controller.ts:59",{"_index":760,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/modules/products/products.controller.ts:70",{"_index":763,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/modules/products/products.controller.ts:84",{"_index":761,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/modules/products/products.module.ts",{"_index":779,"title":{},"body":{"modules/ProductsModule.html":{}}}],["src/modules/products/products.service.ts",{"_index":784,"title":{},"body":{"injectables/ProductsService.html":{},"coverage.html":{}}}],["src/modules/products/products.service.ts:110",{"_index":791,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/products.service.ts:16",{"_index":788,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/products.service.ts:22",{"_index":789,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/products.service.ts:56",{"_index":790,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/products.service.ts:9",{"_index":786,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/products.service.ts:91",{"_index":792,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/units/dto/create",{"_index":559,"title":{},"body":{"classes/CreateUnitDto.html":{},"coverage.html":{}}}],["src/modules/units/dto/unit.dto.ts",{"_index":887,"title":{},"body":{"classes/UnitDtoOut.html":{},"coverage.html":{}}}],["src/modules/units/dto/unit.dto.ts:11",{"_index":888,"title":{},"body":{"classes/UnitDtoOut.html":{}}}],["src/modules/units/dto/unit.dto.ts:17",{"_index":891,"title":{},"body":{"classes/UnitDtoOut.html":{}}}],["src/modules/units/dto/unit.dto.ts:20",{"_index":889,"title":{},"body":{"classes/UnitDtoOut.html":{}}}],["src/modules/units/dto/unit.dto.ts:23",{"_index":893,"title":{},"body":{"classes/UnitDtoOut.html":{}}}],["src/modules/units/dto/unit.dto.ts:5",{"_index":890,"title":{},"body":{"classes/UnitDtoOut.html":{}}}],["src/modules/units/dto/unit.dto.ts:8",{"_index":892,"title":{},"body":{"classes/UnitDtoOut.html":{}}}],["src/modules/units/dto/update",{"_index":969,"title":{},"body":{"classes/UpdateUnitDto.html":{},"coverage.html":{}}}],["src/modules/units/entities/unit.entity.ts",{"_index":895,"title":{},"body":{"entities/UnitEntity.html":{},"coverage.html":{}}}],["src/modules/units/entities/unit.entity.ts:13",{"_index":902,"title":{},"body":{"entities/UnitEntity.html":{}}}],["src/modules/units/entities/unit.entity.ts:16",{"_index":905,"title":{},"body":{"entities/UnitEntity.html":{}}}],["src/modules/units/entities/unit.entity.ts:19",{"_index":900,"title":{},"body":{"entities/UnitEntity.html":{}}}],["src/modules/units/entities/unit.entity.ts:22",{"_index":898,"title":{},"body":{"entities/UnitEntity.html":{}}}],["src/modules/units/entities/unit.entity.ts:25",{"_index":903,"title":{},"body":{"entities/UnitEntity.html":{}}}],["src/modules/units/entities/unit.entity.ts:28",{"_index":901,"title":{},"body":{"entities/UnitEntity.html":{}}}],["src/modules/units/units.controller.ts",{"_index":915,"title":{},"body":{"controllers/UnitsController.html":{},"coverage.html":{}}}],["src/modules/units/units.controller.ts:34",{"_index":919,"title":{},"body":{"controllers/UnitsController.html":{}}}],["src/modules/units/units.controller.ts:47",{"_index":921,"title":{},"body":{"controllers/UnitsController.html":{}}}],["src/modules/units/units.controller.ts:60",{"_index":923,"title":{},"body":{"controllers/UnitsController.html":{}}}],["src/modules/units/units.controller.ts:73",{"_index":927,"title":{},"body":{"controllers/UnitsController.html":{}}}],["src/modules/units/units.controller.ts:86",{"_index":924,"title":{},"body":{"controllers/UnitsController.html":{}}}],["src/modules/units/units.module.ts",{"_index":943,"title":{},"body":{"modules/UnitsModule.html":{}}}],["src/modules/units/units.service.ts",{"_index":947,"title":{},"body":{"injectables/UnitsService.html":{},"coverage.html":{}}}],["src/modules/units/units.service.ts:17",{"_index":951,"title":{},"body":{"injectables/UnitsService.html":{}}}],["src/modules/units/units.service.ts:23",{"_index":952,"title":{},"body":{"injectables/UnitsService.html":{}}}],["src/modules/units/units.service.ts:33",{"_index":953,"title":{},"body":{"injectables/UnitsService.html":{}}}],["src/modules/units/units.service.ts:47",{"_index":955,"title":{},"body":{"injectables/UnitsService.html":{}}}],["src/modules/units/units.service.ts:63",{"_index":954,"title":{},"body":{"injectables/UnitsService.html":{}}}],["src/modules/units/units.service.ts:9",{"_index":949,"title":{},"body":{"injectables/UnitsService.html":{}}}],["start",{"_index":1058,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1061,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1063,"title":{},"body":{"index.html":{}}}],["started",{"_index":1039,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1050,"title":{},"body":{"index.html":{}}}],["statement",{"_index":878,"title":{},"body":{"injectables/RoleService.html":{}}}],["statements",{"_index":989,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["status",{"_index":54,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"classes/CategoryDtoOut.html":{},"entities/CategoryEntity.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUnitDto.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/ResponseFormatter.html":{},"controllers/RoleController.html":{},"classes/UnitDtoOut.html":{},"entities/UnitEntity.html":{},"controllers/UnitsController.html":{}}}],["statuscode",{"_index":39,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthService.html":{},"classes/ResponseFormatter.html":{}}}],["stay",{"_index":1082,"title":{},"body":{"index.html":{}}}],["stock",{"_index":546,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{},"injectables/ProductsService.html":{}}}],["storage",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["strategy",{"_index":575,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":38,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"classes/CategoryDtoOut.html":{},"entities/CategoryEntity.html":{},"classes/CreateCategoryDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUnitDto.html":{},"classes/LoginDto.html":{},"classes/PermissionDto.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"entities/ProductImagesEntity.html":{},"controllers/ProductsController.html":{},"classes/ProfileDto.html":{},"classes/RegisterDto.html":{},"classes/ResponseFormatter.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"entities/RoleEntity.html":{},"injectables/RoleService.html":{},"classes/UnitDtoOut.html":{},"entities/UnitEntity.html":{},"controllers/UnitsController.html":{},"entities/UserEntity.html":{}}}],["sub",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["success",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{}}}],["super",{"_index":577,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["super.canactivate(context",{"_index":274,"title":{},"body":{"classes/AuthGuard.html":{}}}],["support",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{},"index.html":{},"modules.html":{}}}],["supported",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["svg",{"_index":1093,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":1122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":1007,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1006,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":812,"title":{},"body":{"classes/ProfileDto.html":{}}}],["test",{"_index":1065,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":1068,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1067,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1064,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":1074,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":78,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.getuser(userid",{"_index":246,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login(data",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.profile(userid",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(data",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.uploadavatar",{"_index":257,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.categoriesservice.create(createcategorydto",{"_index":445,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.categoriesservice.findall",{"_index":447,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.categoriesservice.findone(+id",{"_index":451,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.categoriesservice.remove(+id",{"_index":456,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.categoriesservice.update",{"_index":454,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.categoryrepository.create(data",{"_index":482,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.categoryrepository.find",{"_index":484,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.categoryrepository.findone",{"_index":487,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.categoryrepository.save(category",{"_index":483,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.categoryrepository.softremove(category",{"_index":491,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.createdat",{"_index":405,"title":{},"body":{"classes/BaseEntity.html":{}}}],["this.data",{"_index":44,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{}}}],["this.generatejwt",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign(payload",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.message",{"_index":45,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{}}}],["this.productimagesrepository.create",{"_index":733,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["this.productimagesrepository.find",{"_index":737,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["this.productimagesrepository.findone",{"_index":749,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["this.productimagesrepository.remove(image",{"_index":752,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["this.productimagesrepository.save(newproductimage",{"_index":736,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["this.productimagesservice.deleteproductimagebyid(+product_id",{"_index":694,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["this.productimagesservice.findall(+id",{"_index":691,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["this.productimagesservice.uploadproductimage(dtoin",{"_index":688,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["this.productrepository.create(data",{"_index":794,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productrepository.find",{"_index":796,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productrepository.findone",{"_index":797,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productrepository.save(product",{"_index":795,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productrepository.softremove(product",{"_index":801,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productsservice.create(createproductdto",{"_index":769,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.findall",{"_index":771,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.findone(+id",{"_index":774,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.remove(+id",{"_index":776,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.update(+id",{"_index":775,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.rolerepository.find",{"_index":881,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.rolerepository.findone",{"_index":882,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.rolerepository.save(createroledto",{"_index":885,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.roleservice.create(createroledto",{"_index":849,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.roleservice.findall",{"_index":847,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.roleservice.findone(id",{"_index":851,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.statuscode",{"_index":46,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{}}}],["this.unitrepository.create(data",{"_index":957,"title":{},"body":{"injectables/UnitsService.html":{}}}],["this.unitrepository.find",{"_index":959,"title":{},"body":{"injectables/UnitsService.html":{}}}],["this.unitrepository.findone",{"_index":960,"title":{},"body":{"injectables/UnitsService.html":{}}}],["this.unitrepository.save(unit",{"_index":958,"title":{},"body":{"injectables/UnitsService.html":{}}}],["this.unitrepository.softremove(unit",{"_index":963,"title":{},"body":{"injectables/UnitsService.html":{}}}],["this.unitsservice.create(createunitdto",{"_index":934,"title":{},"body":{"controllers/UnitsController.html":{}}}],["this.unitsservice.findall",{"_index":936,"title":{},"body":{"controllers/UnitsController.html":{}}}],["this.unitsservice.findone(+id",{"_index":938,"title":{},"body":{"controllers/UnitsController.html":{}}}],["this.unitsservice.remove(+id",{"_index":940,"title":{},"body":{"controllers/UnitsController.html":{}}}],["this.unitsservice.update",{"_index":939,"title":{},"body":{"controllers/UnitsController.html":{}}}],["this.updatedat",{"_index":406,"title":{},"body":{"classes/BaseEntity.html":{}}}],["this.userrepository.findone",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userrepository.save",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userrepository.update",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":275,"title":{},"body":{"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{},"injectables/ProductsService.html":{},"injectables/RoleService.html":{},"injectables/UnitsService.html":{}}}],["timestamptz",{"_index":392,"title":{},"body":{"classes/BaseEntity.html":{},"entities/CategoryEntity.html":{},"entities/ProductEntity.html":{},"entities/UnitEntity.html":{}}}],["tipe",{"_index":811,"title":{},"body":{"classes/ProfileDto.html":{}}}],["tojson",{"_index":48,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{}}}],["touch",{"_index":1083,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":1019,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"injectables/CategoriesService.html":{},"entities/CategoryEntity.html":{},"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{},"injectables/ProductsService.html":{},"entities/UnitEntity.html":{},"injectables/UnitsService.html":{},"entities/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":251,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{}}}],["twitter",{"_index":1089,"title":{},"body":{"index.html":{}}}],["type",{"_index":20,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/CategoryDtoOut.html":{},"entities/CategoryEntity.html":{},"classes/CreateCategoryDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUnitDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PermissionDto.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"entities/ProductImagesEntity.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/ProfileDto.html":{},"classes/RegisterDto.html":{},"classes/ResponseFormatter.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"entities/RoleEntity.html":{},"injectables/RoleService.html":{},"classes/UnitDtoOut.html":{},"entities/UnitEntity.html":{},"controllers/UnitsController.html":{},"injectables/UnitsService.html":{},"entities/UserEntity.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"injectables/CategoriesService.html":{},"entities/CategoryEntity.html":{},"entities/ProductEntity.html":{},"entities/ProductImagesEntity.html":{},"injectables/ProductImagesService.html":{},"injectables/ProductsService.html":{},"entities/RoleEntity.html":{},"injectables/RoleService.html":{},"entities/UnitEntity.html":{},"injectables/UnitsService.html":{},"entities/UserEntity.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductsModule.html":{},"modules/UnitsModule.html":{}}}],["typeormmodule.forfeature",{"_index":303,"title":{},"body":{"modules/AuthModule.html":{}}}],["typeormmodule.forfeature([categoryentity",{"_index":464,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["typeormmodule.forfeature([productentity",{"_index":783,"title":{},"body":{"modules/ProductsModule.html":{}}}],["typeormmodule.forfeature([unitentity",{"_index":946,"title":{},"body":{"modules/UnitsModule.html":{}}}],["typeormmodule.forroot(ormconfig",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":1107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typescript",{"_index":1049,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":271,"title":{},"body":{"classes/AuthGuard.html":{}}}],["undefined",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"controllers/RoleController.html":{},"controllers/UnitsController.html":{},"entities/UserEntity.html":{}}}],["undefined})@useinterceptors(undefined)@post('/avatar",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["undefined})@useinterceptors(undefined)@post(':id/upload",{"_index":659,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["unique",{"_index":529,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ProductEntity.html":{},"entities/UnitEntity.html":{},"entities/UserEntity.html":{}}}],["unit",{"_index":910,"title":{},"body":{"entities/UnitEntity.html":{},"controllers/UnitsController.html":{},"injectables/UnitsService.html":{},"index.html":{}}}],["unit.dto",{"_index":930,"title":{},"body":{"controllers/UnitsController.html":{},"injectables/UnitsService.html":{},"classes/UpdateUnitDto.html":{}}}],["unit.dto.ts",{"_index":560,"title":{},"body":{"classes/CreateUnitDto.html":{},"classes/UpdateUnitDto.html":{},"coverage.html":{}}}],["unit.dto.ts:14",{"_index":564,"title":{},"body":{"classes/CreateUnitDto.html":{}}}],["unit.dto.ts:5",{"_index":565,"title":{},"body":{"classes/CreateUnitDto.html":{}}}],["unit.dto.ts:8",{"_index":563,"title":{},"body":{"classes/CreateUnitDto.html":{}}}],["unit_name",{"_index":904,"title":{},"body":{"entities/UnitEntity.html":{}}}],["unitdtoout",{"_index":886,"title":{"classes/UnitDtoOut.html":{}},"body":{"classes/UnitDtoOut.html":{},"controllers/UnitsController.html":{},"coverage.html":{}}}],["unitdtoout})@get",{"_index":920,"title":{},"body":{"controllers/UnitsController.html":{}}}],["unitdtoout})@get(':id",{"_index":922,"title":{},"body":{"controllers/UnitsController.html":{}}}],["unitentity",{"_index":894,"title":{"entities/UnitEntity.html":{}},"body":{"entities/UnitEntity.html":{},"modules/UnitsModule.html":{},"injectables/UnitsService.html":{},"coverage.html":{}}}],["unitname",{"_index":562,"title":{},"body":{"classes/CreateUnitDto.html":{},"classes/UnitDtoOut.html":{},"entities/UnitEntity.html":{}}}],["unitrepository",{"_index":950,"title":{},"body":{"injectables/UnitsService.html":{}}}],["units",{"_index":916,"title":{},"body":{"controllers/UnitsController.html":{},"injectables/UnitsService.html":{}}}],["units.controller",{"_index":944,"title":{},"body":{"modules/UnitsModule.html":{}}}],["units.service",{"_index":929,"title":{},"body":{"controllers/UnitsController.html":{},"modules/UnitsModule.html":{}}}],["unitscontroller",{"_index":914,"title":{"controllers/UnitsController.html":{}},"body":{"controllers/UnitsController.html":{},"modules/UnitsModule.html":{},"coverage.html":{}}}],["unitsmodule",{"_index":112,"title":{"modules/UnitsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UnitsModule.html":{},"modules.html":{},"overview.html":{}}}],["unitsservice",{"_index":928,"title":{"injectables/UnitsService.html":{}},"body":{"controllers/UnitsController.html":{},"modules/UnitsModule.html":{},"injectables/UnitsService.html":{},"coverage.html":{},"overview.html":{}}}],["unknown",{"_index":49,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/ResponseFormatter.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UnitsController.html":{},"injectables/UnitsService.html":{}}}],["unlicensed",{"_index":1103,"title":{},"body":{"properties.html":{}}}],["unlink",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ProductImagesService.html":{}}}],["unlink('public",{"_index":252,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ProductImagesService.html":{}}}],["unlink(user.avatar",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{}}}],["untuk",{"_index":809,"title":{},"body":{"classes/ProfileDto.html":{},"entities/UnitEntity.html":{}}}],["update",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UnitsController.html":{},"injectables/UnitsService.html":{}}}],["update(categories_id",{"_index":477,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["update(id",{"_index":429,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UnitsController.html":{},"injectables/UnitsService.html":{}}}],["updateavatar",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateavatar.affected",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatecategorydto",{"_index":430,"title":{"classes/UpdateCategoryDto.html":{}},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["updatecategorydto})@patch(':id",{"_index":431,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["updated",{"_index":259,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"controllers/UnitsController.html":{}}}],["updated_at",{"_index":396,"title":{},"body":{"classes/BaseEntity.html":{}}}],["updatedat",{"_index":386,"title":{},"body":{"classes/BaseEntity.html":{},"classes/CategoryDtoOut.html":{},"classes/ProductDtoOut.html":{},"classes/UnitDtoOut.html":{}}}],["updatedatecolumn",{"_index":402,"title":{},"body":{"classes/BaseEntity.html":{}}}],["updatedatecolumn({name",{"_index":395,"title":{},"body":{"classes/BaseEntity.html":{}}}],["updatedates",{"_index":387,"title":{},"body":{"classes/BaseEntity.html":{}}}],["updatedproduct",{"_index":799,"title":{},"body":{"injectables/ProductsService.html":{}}}],["updateproductdto",{"_index":762,"title":{"classes/UpdateProductDto.html":{}},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["updateunitdto",{"_index":925,"title":{"classes/UpdateUnitDto.html":{}},"body":{"controllers/UnitsController.html":{},"injectables/UnitsService.html":{},"classes/UpdateUnitDto.html":{},"coverage.html":{}}}],["updateunitdto})@patch(':id",{"_index":926,"title":{},"body":{"controllers/UnitsController.html":{}}}],["updateupdatedat",{"_index":388,"title":{},"body":{"classes/BaseEntity.html":{}}}],["upload",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{}}}],["uploadavatar",{"_index":256,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["uploadavatar(user_id",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{}}}],["uploaded",{"_index":683,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["uploadedfile",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["uploadproductimage",{"_index":651,"title":{},"body":{"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{}}}],["uploadproductimage(dtoin",{"_index":728,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["uploadproductimage(file",{"_index":658,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["uploads/image",{"_index":241,"title":{},"body":{"controllers/AuthController.html":{}}}],["uploads/product/${file.filename",{"_index":685,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["useguards",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductImagesController.html":{},"controllers/ProductsController.html":{},"controllers/RoleController.html":{},"controllers/UnitsController.html":{}}}],["useguards(authguard",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductImagesController.html":{},"controllers/ProductsController.html":{},"controllers/RoleController.html":{},"controllers/UnitsController.html":{}}}],["useinterceptors",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["user",{"_index":245,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/RoleEntity.html":{},"entities/UserEntity.html":{}}}],["user's",{"_index":243,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.avatar",{"_index":249,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user.entity",{"_index":866,"title":{},"body":{"entities/RoleEntity.html":{}}}],["user.roles",{"_index":862,"title":{},"body":{"entities/RoleEntity.html":{}}}],["user_id",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"entities/UserEntity.html":{}}}],["user_role",{"_index":979,"title":{},"body":{"entities/UserEntity.html":{}}}],["userentity",{"_index":289,"title":{"entities/UserEntity.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/RoleEntity.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["userid",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["username",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"entities/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["userrepository",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{}}}],["users",{"_index":856,"title":{},"body":{"entities/RoleEntity.html":{}}}],["validate",{"_index":569,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":571,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validator",{"_index":596,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"dependencies.html":{}}}],["value",{"_index":828,"title":{},"body":{"classes/ResponseFormatter.html":{},"miscellaneous/variables.html":{}}}],["varchar",{"_index":897,"title":{},"body":{"entities/UnitEntity.html":{}}}],["variable",{"_index":994,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1104,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1101,"title":{},"body":{"properties.html":{}}}],["void",{"_index":24,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseEntity.html":{}}}],["watch",{"_index":1059,"title":{},"body":{"index.html":{}}}],["website",{"_index":1087,"title":{},"body":{"index.html":{}}}],["withdeleted",{"_index":490,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{},"injectables/UnitsService.html":{}}}],["world",{"_index":124,"title":{},"body":{"injectables/AppService.html":{}}}],["yang",{"_index":912,"title":{},"body":{"entities/UnitEntity.html":{}}}],["year",{"_index":1126,"title":{},"body":{"miscellaneous/variables.html":{}}}],["you'd",{"_index":1078,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductsModule.html":{},"modules/UnitsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AllExceptionsFilter.html":{"url":"classes/AllExceptionsFilter.html","title":"class - AllExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/response_formatter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/config/response_formatter.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException,\n  HttpStatus,\n} from '@nestjs/common';\nimport { Response } from 'express';\n\nexport class ResponseFormatter {\n  constructor(\n    public data: any = null,\n    public message: string,\n    public statusCode: number = HttpStatus.OK,\n  ) {}\n\n  formatError(\n    message: string,\n    statusCode: number = HttpStatus.INTERNAL_SERVER_ERROR,\n  ) {\n    this.data = null;\n    this.message = message;\n    this.statusCode = statusCode;\n    return this;\n  }\n\n  toJSON() {\n    return {\n      message: this.message,\n      statusCode: this.statusCode,\n      data: this.data,\n    };\n  }\n}\n\n@Catch()\nexport class AllExceptionsFilter implements ExceptionFilter {\n  catch(exception: unknown, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n\n    const status =\n      exception instanceof HttpException\n        ? exception.getStatus()\n        : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    const message =\n      exception instanceof HttpException\n        ? exception.getResponse().toString()\n        : 'Internal server error';\n\n    const formattedResponse = new ResponseFormatter(\n      null,\n      message,\n      status,\n    ).formatError(message, status);\n\n    response.status(status).json(formattedResponse);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nAppModule -->\n\nCategoriesModule->AppModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CategoriesModule\n                        \n                        \n                            ProductsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AuthModule } from './modules/auth/auth.module';\nimport ormconfig from './config/ormconfig';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\nimport { CategoriesModule } from './modules/categories/categories.module';\nimport { ProductsModule } from './modules/products/products.module';\n// import { UnitsModule } from './modules/units/units.module';\n@Module({\n  imports: [\n    TypeOrmModule.forRoot(ormconfig),\n    AuthModule,\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'public'),\n      serveRoot: '/',\n    }),\n    CategoriesModule,\n    ProductsModule,\n    // UnitsModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/controller/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                avatar\n                            \n                            \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                profile\n                            \n                            \n                                    \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        avatar\n                        \n                    \n                \n            \n            \n                \n                        \n                    avatar(req, file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('accessToken')@UseGuards(AuthGuard)@ApiConsumes('multipart/form-data')@ApiBody({schema: undefined})@UseInterceptors(undefined)@Post('/avatar')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/auth/controller/auth.controller.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(data: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/login')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/auth/controller/auth.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        profile\n                        \n                    \n                \n            \n            \n                \n                        \n                    profile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: undefined, description: 'Profile data', type: ProfileDto})@ApiBearerAuth('accessToken')@UseGuards(AuthGuard)@Get('/profile')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/auth/controller/auth.controller.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(data: RegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/register')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/auth/controller/auth.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Get,\n  HttpStatus,\n  Post,\n  Req,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { AuthService } from '../service/auth.service';\nimport { RegisterDto } from '../dto/register.dto';\nimport { diskStorage } from 'multer';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport {\n  ApiBearerAuth,\n  ApiBody,\n  ApiConsumes,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { ProfileDto } from '../dto/profile.dto';\nimport { AuthGuard } from '../auth.guard';\nimport { LoginDto } from '../dto/login.dto';\n\nimport { ResponseFormatter } from 'src/config/response_formatter';\nimport { existsSync, unlink } from 'fs';\n\n@ApiTags('Auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  // /auth/register\n  @Post('/register')\n  async register(@Body() data: RegisterDto) {\n    return await this.authService.register(data);\n  }\n\n  // /auth/login\n  @Post('/login')\n  async login(@Body() data: LoginDto) {\n    return await this.authService.login(data);\n  }\n\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Profile data',\n    type: ProfileDto,\n  })\n  @ApiBearerAuth('accessToken')\n  @UseGuards(AuthGuard)\n  @Get('/profile')\n  async profile(@Req() req) {\n    const userId = req.user.id;\n    const profile = await this.authService.profile(userId);\n\n    return new ResponseFormatter(profile, 'Profile data');\n  }\n\n  @ApiBearerAuth('accessToken')\n  @UseGuards(AuthGuard)\n  @ApiConsumes('multipart/form-data')\n  @ApiBody({\n    schema: {\n      type: 'object',\n      properties: {\n        avatar: {\n          type: 'string',\n          format: 'binary',\n          description: 'Upload avatar JPEG, JPG, PNG',\n        },\n      },\n    },\n  })\n  @UseInterceptors(\n    FileInterceptor('avatar', {\n      storage: diskStorage({\n        destination: 'public/uploads/image',\n        filename: (req, file, cb) => {\n          const randomName = Math.random().toString(36).substring(7);\n          const originalName = file.originalname;\n          const extension = originalName.substring(\n            originalName.lastIndexOf('.'),\n          );\n          const fileName = randomName + extension;\n          cb(null, fileName);\n        },\n      }),\n      fileFilter: (req, file, cb) => {\n        if (\n          file.mimetype === 'image/jpeg' ||\n          file.mimetype === 'image/png' ||\n          file.mimetype === 'image/jpg'\n        ) {\n          cb(null, true);\n        } else {\n          cb(\n            new BadRequestException(\n              'File type not supported, File Only Support JPG, JPEG, PNG',\n            ),\n            false,\n          );\n        }\n      },\n      limits: {\n        fileSize: 1024 * 1024 * 2, // 2MB\n      },\n    }),\n  )\n  @Post('/avatar')\n  async avatar(@Req() req, @UploadedFile() file: Express.Multer.File) {\n    const userId = req.user.id;\n    const nameFolder = '/uploads/image/' + file.filename;\n\n    // Get the user's current avatar\n    const user = await this.authService.getUser(userId);\n\n    // If the user has an avatar and the file exists, delete it\n    if (user.avatar && existsSync('public' + user.avatar)) {\n      try {\n        await unlink('public' + user.avatar, (err) => {\n          if (err) {\n            console.error(`Failed to delete old avatar: ${err}`);\n          }\n        });\n      } catch (err) {\n        console.error(`Failed to delete old avatar: ${err}`);\n      }\n    }\n\n    const uploadAvatar = await this.authService.uploadAvatar(\n      userId,\n      nameFolder,\n    );\n\n    return new ResponseFormatter(uploadAvatar, 'Avatar updated');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthGuard.html":{"url":"classes/AuthGuard.html","title":"class - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PassportAuthGuard('jwt')\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.guard.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.guard.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExecutionContext, UnauthorizedException } from '@nestjs/common';\n\nimport { AuthGuard as PassportAuthGuard } from '@nestjs/passport';\n\nexport class AuthGuard extends PassportAuthGuard('jwt') {\n  canActivate(context: ExecutionContext) {\n    return super.canActivate(context);\n  }\n\n  handleRequest(err, user) {\n    if (err || !user) {\n      throw err || new UnauthorizedException();\n    }\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nRoleService\n\nRoleService\n\nAuthModule -->\n\nRoleService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            RoleService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                        \n                            RoleController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthController } from './controller/auth.controller';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { jwt_config } from 'src/config/config_jwt';\nimport { JwtStrategy } from './jwt.strategy';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserEntity } from './entities/user.entity';\nimport { BaseEntity } from 'src/config/common/BaseEntity';\nimport { AuthService } from './service/auth.service';\nimport { RoleService } from './service/role.service';\n// import { PermissionService } from './service/permission.service';\nimport { RoleController } from './controller/role.controller';\n// import { PermissionController } from './controller/permission.controller';\nimport { RoleEntity } from './entities/role.entity';\n// import { PermissionEntity } from './entities/permission.entity';\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      UserEntity,\n      BaseEntity,\n      RoleEntity,\n      // PermissionEntity,\n    ]),\n    PassportModule.register({\n      defaultStrategy: 'jwt',\n      property: 'user',\n      session: false,\n    }),\n    JwtModule.register({\n      secret: jwt_config.secret,\n      signOptions: {\n        expiresIn: jwt_config.expired,\n      },\n    }),\n  ],\n  providers: [AuthService, JwtStrategy, RoleService],\n  controllers: [AuthController, RoleController],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/service/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateJWT\n                            \n                            \n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                profile\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                uploadAvatar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/service/auth.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateJWT\n                        \n                    \n                \n            \n            \n                \ngenerateJWT(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/service/auth.service.ts:155\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUser(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/service/auth.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(data: LoginDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/service/auth.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        profile\n                        \n                    \n                \n            \n            \n                \n                        \n                    profile(user_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/service/auth.service.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(data: RegisterDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/service/auth.service.ts:40\n                        \n                    \n\n\n            \n                \n                        Register\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadAvatar\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadAvatar(user_id: string, avatar)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/service/auth.service.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                avatar\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { RegisterDto } from '../dto/register.dto';\nimport { compare, hash } from 'bcrypt';\nimport { JwtService } from '@nestjs/jwt';\nimport { LoginDto } from '../dto/login.dto';\nimport { jwt_config } from 'src/config/config_jwt';\nimport { unlink } from 'fs/promises';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n\n    private jwtService: JwtService,\n  ) {}\n\n  async getUser(userId: string) {\n    const user = await this.userRepository.findOne({\n      where: {\n        id: userId,\n      },\n    });\n\n    if (!user) {\n      throw new HttpException('User not found', HttpStatus.NOT_FOUND);\n    }\n\n    return user;\n  }\n\n  /**\n   * Register\n   * @param data\n   * @returns\n   */\n  async register(data: RegisterDto) {\n    const checkUser = await this.userRepository.findOne({\n      where: {\n        email: data.email,\n      },\n    });\n\n    if (checkUser) {\n      throw new HttpException('User already exists', HttpStatus.FOUND);\n    }\n\n    data.password = await hash(data.password, 12);\n    const createUser = await this.userRepository.save({\n      ...data,\n    });\n\n    if (createUser) {\n      return {\n        statusCode: HttpStatus.OK,\n        message: 'User has been created',\n        data: createUser,\n      };\n    }\n  }\n\n  async login(data: LoginDto) {\n    const checkUser = await this.userRepository.findOne({\n      where: {\n        username: data.username,\n      },\n    });\n\n    if (!checkUser) {\n      throw new HttpException('User not found', HttpStatus.NOT_FOUND);\n    }\n\n    const checkPassword = await compare(data.password, checkUser.password);\n\n    if (checkPassword) {\n      const accessToken = this.generateJWT({\n        sub: checkUser.id,\n        email: checkUser.email,\n        username: checkUser.username,\n      });\n      return {\n        statusCode: HttpStatus.OK,\n        message: 'Login success',\n        data: checkUser,\n        accessToken: accessToken,\n      };\n    } else {\n      throw new HttpException('Password not match', HttpStatus.UNAUTHORIZED);\n    }\n  }\n\n  async profile(user_id: string) {\n    const user = await this.userRepository.findOne({\n      where: {\n        id: user_id,\n      },\n      select: {\n        id: true,\n        username: true,\n        email: true,\n        avatar: true,\n      },\n    });\n\n    if (!user) {\n      throw new HttpException('User not found', HttpStatus.NOT_FOUND);\n    }\n\n    return user;\n  }\n\n  async uploadAvatar(user_id: string, avatar) {\n    const user = await this.userRepository.findOne({\n      where: {\n        id: user_id,\n      },\n    });\n\n    if (user) {\n      if (user.avatar) {\n        try {\n          await unlink(user.avatar);\n        } catch (err) {\n          console.error(`Failed to delete old avatar: ${err}`);\n        }\n      }\n\n      const updateAvatar = await this.userRepository.update(\n        {\n          id: user_id,\n        },\n        {\n          avatar: avatar,\n        },\n      );\n\n      if (!updateAvatar.affected) {\n        throw new HttpException(\n          'Failed to update avatar',\n          HttpStatus.BAD_REQUEST,\n        );\n      }\n\n      return {\n        avatar: avatar,\n      };\n    } else {\n      throw new HttpException('User not found', HttpStatus.NOT_FOUND);\n    }\n  }\n\n  generateJWT(payload: any) {\n    return this.jwtService.sign(payload, {\n      secret: jwt_config.secret,\n      expiresIn: jwt_config.expired,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/common/BaseEntity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                updateDates\n                            \n                            \n                                    \n                                updateUpdatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: 'created_at', type: 'timestamptz', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/common/BaseEntity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({name: 'updated_at', type: 'timestamptz', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/common/BaseEntity.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateDates\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateDates()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @BeforeInsert()\n                \n            \n\n                    \n                        \n                            Defined in src/config/common/BaseEntity.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateUpdatedAt\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUpdatedAt()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @BeforeInsert()\n                \n            \n\n                    \n                        \n                            Defined in src/config/common/BaseEntity.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CreateDateColumn, UpdateDateColumn, BeforeInsert } from 'typeorm';\nimport * as moment from 'moment';\n\nexport abstract class BaseEntity {\n  @CreateDateColumn({ name: 'created_at', type: 'timestamptz', nullable: true })\n  createdAt: Date;\n\n  @UpdateDateColumn({ name: 'updated_at', type: 'timestamptz', nullable: true })\n  updatedAt: Date;\n\n  @BeforeInsert()\n  updateDates() {\n    this.createdAt = this.updatedAt = moment().add(7, 'hours').toDate();\n  }\n\n  @BeforeInsert()\n  updateUpdatedAt() {\n    this.updatedAt = moment().add(7, 'hours').toDate();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CategoriesController.html":{"url":"controllers/CategoriesController.html","title":"controller - CategoriesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CategoriesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/categories/categories.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                categories\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCategoryDto: CreateCategoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: undefined, description: 'Category data', type: CreateCategoryDto})@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/categories/categories.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCategoryDto\n                                            \n                                                            CreateCategoryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: undefined, description: 'Category data', type: CategoryDtoOut})@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/categories/categories.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: undefined, description: 'Category data', type: CategoryDtoOut})@Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/categories/categories.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/categories/categories.controller.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateCategoryDto: UpdateCategoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: undefined, description: 'Category data', type: UpdateCategoryDto})@Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/categories/categories.controller.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCategoryDto\n                                            \n                                                            UpdateCategoryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n  HttpStatus,\n} from '@nestjs/common';\nimport { CategoriesService } from './categories.service';\nimport { CreateCategoryDto } from './dto/create-category.dto';\nimport { UpdateCategoryDto } from './dto/update-category.dto';\nimport { ApiBearerAuth, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '../auth/auth.guard';\nimport { ResponseFormatter } from 'src/config/response_formatter';\nimport { CategoryDtoOut } from './dto/category.dto';\n\n@ApiTags('Category')\n@ApiBearerAuth('accessToken')\n@Controller('categories')\n@UseGuards(AuthGuard)\nexport class CategoriesController {\n  constructor(private readonly categoriesService: CategoriesService) {}\n\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Category data',\n    type: CreateCategoryDto,\n  })\n  @Post()\n  async create(@Body() createCategoryDto: CreateCategoryDto) {\n    const category = await this.categoriesService.create(createCategoryDto);\n\n    return new ResponseFormatter(category, 'Category created');\n  }\n\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Category data',\n    type: CategoryDtoOut,\n  })\n  @Get()\n  async findAll() {\n    const categories = await this.categoriesService.findAll();\n\n    return new ResponseFormatter(categories, 'Categories found');\n  }\n\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Category data',\n    type: CategoryDtoOut,\n  })\n  @Get(':id')\n  async findOne(@Param('id') id: string) {\n    const category = await this.categoriesService.findOne(+id);\n\n    return new ResponseFormatter(category, 'Category found');\n  }\n\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Category data',\n    type: UpdateCategoryDto,\n  })\n  @Patch(':id')\n  async update(\n    @Param('id') id: string,\n    @Body() updateCategoryDto: UpdateCategoryDto,\n  ) {\n    const category = await this.categoriesService.update(\n      +id,\n      updateCategoryDto,\n    );\n\n    return new ResponseFormatter(category, 'Category updated');\n  }\n\n  @Delete(':id')\n  async remove(@Param('id') id: string) {\n    const category = await this.categoriesService.remove(+id);\n\n    return new ResponseFormatter(category, 'Category deleted');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CategoriesModule.html":{"url":"modules/CategoriesModule.html","title":"module - CategoriesModule","body":"\n                   \n\n\n\n\n    Modules\n    CategoriesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CategoriesModule\n\n\n\ncluster_CategoriesModule_providers\n\n\n\n\nCategoriesService\n\nCategoriesService\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nCategoriesModule -->\n\nCategoriesService->CategoriesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/categories/categories.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CategoriesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CategoriesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { CategoriesService } from './categories.service';\nimport { CategoriesController } from './categories.controller';\nimport { CategoryEntity } from './entities/category.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([CategoryEntity])],\n  controllers: [CategoriesController],\n  providers: [CategoriesService],\n})\nexport class CategoriesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoriesService.html":{"url":"injectables/CategoriesService.html","title":"injectable - CategoriesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoriesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/categories/categories.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/categories/categories.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        categoryRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: CreateCategoryDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/categories/categories.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            CreateCategoryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/categories/categories.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(categories_id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/categories/categories.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                categories_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(categories_id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/categories/categories.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                categories_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(categories_id: number, data: UpdateCategoryDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/categories/categories.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                categories_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            UpdateCategoryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { CreateCategoryDto } from './dto/create-category.dto';\nimport { UpdateCategoryDto } from './dto/update-category.dto';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CategoryEntity } from './entities/category.entity';\n\n@Injectable()\nexport class CategoriesService {\n  constructor(\n    @InjectRepository(CategoryEntity)\n    private readonly categoryRepository: Repository,\n\n    // @Inject(REQUEST) private req: any,\n  ) {}\n\n  async create(data: CreateCategoryDto) {\n    const category = this.categoryRepository.create(data);\n\n    return await this.categoryRepository.save(category);\n  }\n\n  async findAll() {\n    const categories = await this.categoryRepository.find({\n      order: {\n        id: 'DESC',\n      },\n    });\n\n    return categories;\n  }\n\n  async findOne(categories_id: number) {\n    const category = await this.categoryRepository.findOne({\n      where: {\n        id: categories_id,\n      },\n    });\n\n    if (!category) {\n      throw new NotFoundException('Category not found');\n    }\n\n    return category;\n  }\n\n  async update(categories_id: number, data: UpdateCategoryDto) {\n    const category = await this.categoryRepository.findOne({\n      where: {\n        id: categories_id,\n      },\n    });\n\n    if (!category) {\n      throw new NotFoundException('Category not found');\n    }\n\n    Object.assign(category, data);\n\n    return await this.categoryRepository.save(category);\n  }\n\n  async remove(categories_id: number) {\n    const category = await this.categoryRepository.findOne({\n      withDeleted: true,\n      where: {\n        id: categories_id,\n      },\n    });\n\n    if (!category) {\n      throw new NotFoundException('Category not found');\n    }\n\n    return await this.categoryRepository.softRemove(category);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CategoryDtoOut.html":{"url":"classes/CategoryDtoOut.html","title":"class - CategoryDtoOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CategoryDtoOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/categories/dto/category.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/categories/dto/category.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/categories/dto/category.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/categories/dto/category.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/categories/dto/category.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/categories/dto/category.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/categories/dto/category.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class CategoryDtoOut {\n  @ApiPropertyOptional()\n  id: number;\n\n  @ApiProperty()\n  name: string;\n\n  @ApiProperty()\n  status: boolean;\n\n  @ApiProperty()\n  description: string;\n\n  @ApiProperty()\n  createdAt: Date;\n\n  @ApiProperty()\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CategoryEntity.html":{"url":"entities/CategoryEntity.html","title":"entity - CategoryEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CategoryEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/categories/entities/category.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                products\n                            \n                            \n                                    \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({name: 'deleted_at', type: 'timestamptz', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/categories/entities/category.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/categories/entities/category.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/categories/entities/category.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/categories/entities/category.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, product => product.category)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/categories/entities/category.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'boolean', default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/categories/entities/category.entity.ts:20\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { BaseEntity } from 'src/config/common/BaseEntity';\nimport { ProductEntity } from 'src/modules/products/entities/product.entity';\nimport {\n  Column,\n  DeleteDateColumn,\n  Entity,\n  OneToMany,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\n\n@Entity('categories')\nexport class CategoryEntity extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ unique: true })\n  name: string;\n\n  @Column({ type: 'boolean', default: false })\n  status: boolean;\n\n  @Column({ nullable: true })\n  description: string;\n\n  @DeleteDateColumn({ name: 'deleted_at', type: 'timestamptz', nullable: true })\n  deletedAt?: Date;\n\n  @OneToMany(() => ProductEntity, (product) => product.category)\n  products: ProductEntity[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCategoryDto.html":{"url":"classes/CreateCategoryDto.html","title":"class - CreateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/categories/dto/create-category.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/categories/dto/create-category.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/categories/dto/create-category.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/categories/dto/create-category.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateCategoryDto {\n  @ApiProperty()\n  name: string;\n\n  @ApiProperty()\n  description: string;\n\n  @ApiProperty()\n  status: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePermissionDto.html":{"url":"classes/CreatePermissionDto.html","title":"class - CreatePermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/permission.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/permission.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/permission.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\n// permission.dto.ts\nexport class PermissionDto {\n  @ApiProperty()\n  id: string;\n\n  @ApiProperty()\n  name: string;\n\n  @ApiProperty()\n  description: string;\n}\n\n// create-permission.dto.ts\nexport class CreatePermissionDto {\n  @ApiProperty()\n  name: string;\n\n  @ApiProperty()\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDto.html":{"url":"classes/CreateProductDto.html","title":"class - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/dto/create-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                categoryId\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                price\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                stock\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        categoryId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/create-product.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/create-product.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/create-product.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/create-product.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/create-product.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        stock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/create-product.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateProductDto {\n  @ApiProperty()\n  name: string;\n\n  @ApiProperty()\n  description: string;\n\n  @ApiProperty()\n  price: number;\n\n  @ApiProperty()\n  stock: number;\n\n  @ApiProperty()\n  status: boolean;\n\n  @ApiProperty()\n  categoryId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleDto.html":{"url":"classes/CreateRoleDto.html","title":"class - CreateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/role.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/role.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class RoleDto {\n  @ApiProperty()\n  id: string;\n\n  @ApiProperty()\n  name: string;\n\n  @ApiProperty()\n  description?: string;\n}\n\nexport class CreateRoleDto {\n  @ApiProperty()\n  name: string;\n\n  @ApiProperty()\n  description?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUnitDto.html":{"url":"classes/CreateUnitDto.html","title":"class - CreateUnitDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUnitDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/units/dto/create-unit.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                coversionFactor\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                unitName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        coversionFactor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/units/dto/create-unit.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/units/dto/create-unit.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        unitName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/units/dto/create-unit.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class CreateUnitDto {\n    @ApiProperty()\n    unitName: string;\n\n    @ApiProperty()\n    coversionFactor: number;\n\n    // @ApiProperty()\n    // baseUnit: string;\n\n    @ApiProperty()\n    status: boolean;\n    }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy, 'jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/jwt.strategy.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/jwt.strategy.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { jwt_config } from 'src/config/config_jwt';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: jwt_config.secret,\n    });\n  }\n\n  async validate(payload: any) {\n    return {\n      id: payload.sub,\n      username: payload.username,\n      expired: payload.exp,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()@MinLength(6)@MaxLength(16)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/login.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/login.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString, MaxLength, MinLength } from 'class-validator';\n\nexport class LoginDto {\n  @ApiProperty()\n  @IsString()\n  username: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(6)\n  @MaxLength(16)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PermissionDto.html":{"url":"classes/PermissionDto.html","title":"class - PermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/permission.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/permission.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/permission.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/permission.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\n// permission.dto.ts\nexport class PermissionDto {\n  @ApiProperty()\n  id: string;\n\n  @ApiProperty()\n  name: string;\n\n  @ApiProperty()\n  description: string;\n}\n\n// create-permission.dto.ts\nexport class CreatePermissionDto {\n  @ApiProperty()\n  name: string;\n\n  @ApiProperty()\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductDtoOut.html":{"url":"classes/ProductDtoOut.html","title":"class - ProductDtoOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductDtoOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/dto/product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                categoryId\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                price\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                stock\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        categoryId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/product.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/product.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/product.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/product.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/product.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/product.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/product.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        stock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/product.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/product.dto.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class ProductDtoOut {\n  @ApiPropertyOptional()\n  id: number;\n\n  @ApiProperty()\n  name: string;\n\n  @ApiProperty()\n  description: string;\n\n  @ApiProperty()\n  price: number;\n\n  @ApiProperty()\n  stock: number;\n\n  @ApiProperty()\n  status: boolean;\n\n  @ApiProperty()\n  categoryId: number;\n\n  @ApiProperty()\n  createdAt: Date;\n\n  @ApiProperty()\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ProductEntity.html":{"url":"entities/ProductEntity.html","title":"entity - ProductEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ProductEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/entities/product.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                category\n                            \n                            \n                                    \n                                categoryId\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                price\n                            \n                            \n                                    \n                                productImages\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                stock\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CategoryEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)@JoinColumn({name: 'category_id', referencedColumnName: 'id', foreignKeyConstraintName: 'fk_category_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/entities/product.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        categoryId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'category_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/entities/product.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({name: 'deleted_at', type: 'timestamptz', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/entities/product.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'description', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/entities/product.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/entities/product.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'name', unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/entities/product.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'price', type: 'decimal', precision: 10, scale: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/entities/product.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        productImages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductImagesEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, image => image.product)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/entities/product.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'status', type: 'boolean', default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/entities/product.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        stock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'stock', type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/entities/product.entity.ts:29\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  OneToMany,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\nimport { ProductImagesEntity } from './product-images.entity';\nimport { CategoryEntity } from 'src/modules/categories/entities/category.entity';\nimport { BaseEntity } from 'src/config/common/BaseEntity';\n\n@Entity('products')\nexport class ProductEntity extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ name: 'name', unique: true })\n  name: string;\n\n  @Column({ name: 'description', nullable: true })\n  description: string;\n\n  @Column({ name: 'price', type: 'decimal', precision: 10, scale: 2 })\n  price: number;\n\n  @Column({ name: 'stock', type: 'int' })\n  stock: number;\n\n  @Column({ name: 'status', type: 'boolean', default: false })\n  status: boolean;\n\n  @Column({ name: 'category_id' })\n  categoryId: number;\n\n  @DeleteDateColumn({ name: 'deleted_at', type: 'timestamptz', nullable: true })\n  deletedAt?: Date;\n\n  @ManyToOne(() => CategoryEntity)\n  @JoinColumn({\n    name: 'category_id',\n    referencedColumnName: 'id',\n    foreignKeyConstraintName: 'fk_category_id',\n  })\n  category: CategoryEntity;\n\n  @OneToMany(() => ProductImagesEntity, (image) => image.product)\n  productImages: ProductImagesEntity[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductImagesController.html":{"url":"controllers/ProductImagesController.html","title":"controller - ProductImagesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductImagesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/product-images/product-images.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                product/images\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                deleteProductImageById\n                            \n                            \n                                    \n                                    Async\n                                findAllProductImages\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                uploadProductImage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        deleteProductImageById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteProductImageById(product_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id/delete')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/products/product-images/product-images.controller.ts:104\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                product_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAllProductImages\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllProductImages(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/products/product-images/product-images.controller.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        uploadProductImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadProductImage(file: Express.Multer.File, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiConsumes('multipart/form-data')@ApiBody({schema: undefined})@UseInterceptors(undefined)@Post(':id/upload')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/products/product-images/product-images.controller.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { ProductImagesService } from './product-images.service';\nimport { ApiBearerAuth, ApiBody, ApiConsumes, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from 'src/modules/auth/auth.guard';\nimport { ResponseFormatter } from 'src/config/response_formatter';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { diskStorage } from 'multer';\nimport { ProductImagesDtoIn } from '../dto/product-images.dto';\n\n@ApiTags('Product Images')\n@ApiBearerAuth('accessToken')\n@UseGuards(AuthGuard)\n@Controller('product/images')\nexport class ProductImagesController {\n  constructor(private readonly productImagesService: ProductImagesService) {}\n\n  @ApiConsumes('multipart/form-data')\n  @ApiBody({\n    schema: {\n      type: 'object',\n      properties: {\n        images: {\n          type: 'string',\n          format: 'binary',\n          description: 'Upload images JPEG, JPG, PNG',\n        },\n      },\n    },\n  })\n  @UseInterceptors(\n    FileInterceptor('images', {\n      storage: diskStorage({\n        destination: 'public/uploads/product',\n        filename: (req, file, cb) => {\n          const randomName = Math.random().toString(36).substring(7);\n          const originalName = file.originalname;\n          const extension = originalName.substring(\n            originalName.lastIndexOf('.'),\n          );\n          const fileName = randomName + extension;\n          cb(null, fileName);\n        },\n      }),\n      fileFilter: (req, file, cb) => {\n        if (\n          file.mimetype === 'image/jpeg' ||\n          file.mimetype === 'image/png' ||\n          file.mimetype === 'image/jpg'\n        ) {\n          cb(null, true);\n        } else {\n          cb(\n            new BadRequestException(\n              'File type not supported, File Only Support JPG, JPEG, PNG',\n            ),\n            false,\n          );\n        }\n      },\n      limits: {\n        fileSize: 1024 * 1024 * 2, // 2MB\n      },\n    }),\n  )\n  @Post(':id/upload') // Perhatikan bahwa Anda perlu menangkap id produk dari parameter rute\n  async uploadProductImage(\n    @UploadedFile() file: Express.Multer.File,\n    @Param('id') id: string,\n  ) {\n    if (!file) {\n      throw new BadRequestException('No file uploaded.');\n    }\n\n    const imagePath = `/uploads/product/${file.filename}`;\n\n    const dtoIn: ProductImagesDtoIn = {\n      product_id: +id,\n      image: imagePath,\n    };\n\n    const productImage =\n      await this.productImagesService.uploadProductImage(dtoIn);\n\n    return new ResponseFormatter(productImage, 'Product Image uploaded');\n  }\n\n  @Get(':id')\n  async findAllProductImages(@Param('id') id: string) {\n    const productImages = await this.productImagesService.findAll(+id);\n    return new ResponseFormatter(productImages, 'Product images found');\n  }\n\n  @Delete(':id/delete')\n  async deleteProductImageById(@Param('product_id') product_id: string) {\n    try {\n      await this.productImagesService.deleteProductImageById(+product_id);\n      return 'Product image deleted';\n    } catch (error) {\n      console.error(`Error deleting product image: ${error.message}`);\n      throw new BadRequestException('Failed to delete product image.');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductImagesDtoIn.html":{"url":"classes/ProductImagesDtoIn.html","title":"class - ProductImagesDtoIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductImagesDtoIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/dto/product-images.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                image\n                            \n                            \n                                    \n                                product_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/product-images.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        product_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/product-images.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class ProductImagesDtoOut {\n  @ApiPropertyOptional({ type: 'number' })\n  id: number;\n\n  @ApiPropertyOptional({ type: 'number' })\n  product_id: number;\n\n  @ApiPropertyOptional({ type: 'string' })\n  categoryName: string;\n}\n\nexport class ProductImagesDtoIn {\n  @ApiProperty()\n  product_id: number;\n\n  @ApiProperty()\n  image: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductImagesDtoOut.html":{"url":"classes/ProductImagesDtoOut.html","title":"class - ProductImagesDtoOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductImagesDtoOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/dto/product-images.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                categoryName\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                product_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        categoryName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/product-images.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: 'number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/product-images.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        product_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: 'number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/product-images.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class ProductImagesDtoOut {\n  @ApiPropertyOptional({ type: 'number' })\n  id: number;\n\n  @ApiPropertyOptional({ type: 'number' })\n  product_id: number;\n\n  @ApiPropertyOptional({ type: 'string' })\n  categoryName: string;\n}\n\nexport class ProductImagesDtoIn {\n  @ApiProperty()\n  product_id: number;\n\n  @ApiProperty()\n  image: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ProductImagesEntity.html":{"url":"entities/ProductImagesEntity.html","title":"entity - ProductImagesEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ProductImagesEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/entities/product-images.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                image\n                            \n                            \n                                    \n                                    \n                                product\n                            \n                            \n                                    \n                                product_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/entities/product-images.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'image'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/entities/product-images.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)@JoinColumn({name: 'product_id', referencedColumnName: 'id', foreignKeyConstraintName: 'fk_product_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/entities/product-images.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        product_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'product_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/entities/product-images.entity.ts:17\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\nimport { ProductEntity } from './product.entity';\nimport { BaseEntity } from 'src/config/common/BaseEntity';\n\n@Entity('product_images')\nexport class ProductImagesEntity extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ name: 'product_id' })\n  product_id: number;\n\n  @Column({ name: 'image' })\n  image: string;\n\n  @ManyToOne(() => ProductEntity)\n  @JoinColumn({\n    name: 'product_id',\n    referencedColumnName: 'id',\n    foreignKeyConstraintName: 'fk_product_id',\n  })\n  product: ProductEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductImagesService.html":{"url":"injectables/ProductImagesService.html","title":"injectable - ProductImagesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductImagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/product-images/product-images.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteProductImageById\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                uploadProductImage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productImagesRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/products/product-images/product-images.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productImagesRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteProductImageById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteProductImageById(productImageId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/product-images/product-images.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productImageId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(product_id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/product-images/product-images.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                product_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadProductImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadProductImage(dtoIn: ProductImagesDtoIn)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/product-images/product-images.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dtoIn\n                                            \n                                                            ProductImagesDtoIn\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { ProductImagesEntity } from '../entities/product-images.entity';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ProductImagesDtoIn } from '../dto/product-images.dto';\nimport { unlink } from 'fs';\n\n@Injectable()\nexport class ProductImagesService {\n  constructor(\n    @InjectRepository(ProductImagesEntity)\n    private readonly productImagesRepository: Repository,\n  ) {}\n\n  async uploadProductImage(dtoIn: ProductImagesDtoIn) {\n    try {\n      const newProductImage = this.productImagesRepository.create({\n        product_id: dtoIn.product_id,\n        image: dtoIn.image,\n      });\n\n      return await this.productImagesRepository.save(newProductImage);\n    } catch (error) {\n      throw new BadRequestException('Failed to upload product image.');\n    }\n  }\n\n  async findAll(product_id: number) {\n    const productImages = await this.productImagesRepository.find({\n      where: {\n        product_id: product_id,\n        product: {\n          deletedAt: null,\n        },\n      },\n      relations: ['product', 'product.category'],\n    });\n\n    const deleteAt = productImages[0]?.product?.deletedAt;\n\n    if (!productImages || deleteAt !== null) {\n      throw new NotFoundException('Product images not found.');\n    }\n\n    const images = productImages.map((image) => {\n      return {\n        id: image.id,\n        product_id: image.product_id,\n        image: image.image,\n        product: {\n          name: image.product.name,\n          status: image.product.status,\n          category: {\n            name: image.product.category.name,\n          },\n        },\n      };\n    });\n\n    return images;\n  }\n\n  async deleteProductImageById(productImageId: number): Promise {\n    const image = await this.productImagesRepository.findOne({\n      where: {\n        id: productImageId,\n      },\n    });\n\n    if (!image) {\n      throw new NotFoundException('Product image not found.');\n    }\n\n    try {\n      if (image.image) {\n        await unlink('public' + image.image, (err) => {\n          if (err) {\n            console.error(\n              `Failed to delete image file ${image.image}. Error: ${err.message}`,\n            );\n            throw new BadRequestException('Failed to delete product image.');\n          }\n        });\n      }\n    } catch (error) {\n      console.error(\n        `Failed to delete image file ${image.image}. Error: ${error.message}`,\n      );\n      throw new BadRequestException('Failed to delete product image.');\n    }\n\n    await this.productImagesRepository.remove(image);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductsController.html":{"url":"controllers/ProductsController.html","title":"controller - ProductsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/products.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                products\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createProductDto: CreateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/products/products.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductDto\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: undefined, description: 'Products data', type: ProductDtoOut})@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/products/products.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: undefined, description: 'Product data', type: ProductDtoOut})@Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/products/products.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/products/products.controller.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateProductDto: UpdateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/products/products.controller.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateProductDto\n                                            \n                                                            UpdateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n  HttpStatus,\n  NotFoundException,\n} from '@nestjs/common';\nimport { ProductsService } from './products.service';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { UpdateProductDto } from './dto/update-product.dto';\nimport { ApiBearerAuth, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '../auth/auth.guard';\nimport { ResponseFormatter } from 'src/config/response_formatter';\nimport { ProductDtoOut } from './dto/product.dto';\n\n@ApiTags('Product')\n@ApiBearerAuth('accessToken')\n@UseGuards(AuthGuard)\n@Controller('products')\nexport class ProductsController {\n  constructor(private readonly productsService: ProductsService) {}\n\n  @Post()\n  async create(@Body() createProductDto: CreateProductDto) {\n    const product = await this.productsService.create(createProductDto);\n\n    return new ResponseFormatter(product, 'Product created');\n  }\n\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Products data',\n    type: ProductDtoOut,\n  })\n\n  @Get()\n  async findAll() {\n    const products = await this.productsService.findAll();\n\n    if (!products) {\n      return new NotFoundException('Products not found');\n    }\n\n    return new ResponseFormatter(products, 'Products found');\n  }\n\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Product data',\n    type: ProductDtoOut,\n  })\n  \n  @Get(':id')\n  async findOne(@Param('id') id: string) {\n    const product = await this.productsService.findOne(+id);\n\n    if (!product) {\n      return new NotFoundException('Product not found');\n    }\n\n    return new ResponseFormatter(product, 'Product found');\n  }\n\n  @Patch(':id')\n  async update(\n    @Param('id') id: string,\n    @Body() updateProductDto: UpdateProductDto,\n  ) {\n    const product = await this.productsService.update(+id, updateProductDto);\n\n    if (!product) {\n      return new NotFoundException('Product not found');\n    }\n\n    return new ResponseFormatter(product, 'Product updated');\n  }\n\n  @Delete(':id')\n  async remove(@Param('id') id: string) {\n    const product = await this.productsService.remove(+id);\n\n    if (!product) {\n      return new NotFoundException('Product not found');\n    }\n\n    return new ResponseFormatter(product, 'Product deleted');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductsModule.html":{"url":"modules/ProductsModule.html","title":"module - ProductsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_providers\n\n\n\n\nProductImagesService\n\nProductImagesService\n\n\n\nProductsModule\n\nProductsModule\n\nProductsModule -->\n\nProductImagesService->ProductsModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/products/products.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductImagesService\n                        \n                        \n                            ProductsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductsController\n                        \n                        \n                            ProductImagesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductsService } from './products.service';\nimport { ProductsController } from './products.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ProductEntity } from './entities/product.entity';\nimport { ProductImagesEntity } from './entities/product-images.entity';\nimport { ProductImagesService } from './product-images/product-images.service';\nimport { ProductImagesController } from './product-images/product-images.controller';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([ProductEntity, ProductImagesEntity])],\n  controllers: [ProductsController, ProductImagesController],\n  providers: [ProductsService, ProductImagesService],\n})\nexport class ProductsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductsService.html":{"url":"injectables/ProductsService.html","title":"injectable - ProductsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/products.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/products/products.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: CreateProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/products.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/products.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/products.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/products.service.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, data: UpdateProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/products.service.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            UpdateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { UpdateProductDto } from './dto/update-product.dto';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ProductEntity } from './entities/product.entity';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class ProductsService {\n  constructor(\n    @InjectRepository(ProductEntity)\n    private readonly productRepository: Repository,\n    // @Inject(REQUEST) private req: any,\n  ) {}\n\n  async create(data: CreateProductDto) {\n    const product = this.productRepository.create(data);\n\n    return await this.productRepository.save(product);\n  }\n\n  async findAll() {\n    const products = await this.productRepository.find({\n      where: {\n        deletedAt: null,\n        category: {\n          status: true,\n        },\n      },\n      order: {\n        id: 'DESC',\n      },\n      relations: ['category', 'productImages'],\n      select: {\n        id: true,\n        name: true,\n        price: true,\n        stock: true,\n        category: {\n          name: true,\n          status: true,\n        },\n        productImages: {\n          image: true,\n        },\n      },\n    });\n\n    if (!products) {\n      throw new NotFoundException('Products not found');\n    }\n\n    return products;\n  }\n\n  async findOne(id: number) {\n    const product = await this.productRepository.findOne({\n      where: {\n        id: id,\n        deletedAt: null,\n        category: {\n          status: true,\n        },\n      },\n      order: {\n        id: 'DESC',\n      },\n      relations: ['category', 'productImages'],\n      select: {\n        id: true,\n        name: true,\n        price: true,\n        stock: true,\n        category: {\n          name: true,\n          status: true,\n        },\n        productImages: {\n          image: true,\n        },\n      },\n    });\n\n    if (!product) {\n      throw new NotFoundException('Product not found');\n    }\n\n    return product;\n  }\n\n  async update(id: number, data: UpdateProductDto) {\n    const product = await this.productRepository.findOne({\n      where: {\n        id: id,\n        deletedAt: null,\n      },\n    });\n\n    if (!product) {\n      throw new NotFoundException('Product not found');\n    }\n\n    Object.assign(product, data);\n\n    const updatedProduct = await this.productRepository.save(product);\n\n    return updatedProduct;\n  }\n\n  async remove(id: number) {\n    const product = await this.productRepository.findOne({\n      withDeleted: true,\n      where: {\n        id: id,\n      },\n    });\n\n    if (!product) {\n      throw new NotFoundException('Product not found');\n    }\n\n    const deletedProduct = await this.productRepository.softRemove(product);\n\n    return deletedProduct;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProfileDto.html":{"url":"classes/ProfileDto.html","title":"class - ProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/profile.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                avatar\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/profile.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/profile.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/profile.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/profile.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\n// Gunakan decorator ApiPropertyOptional untuk mendokumentasikan tipe Task sebagai array\nexport class ProfileDto {\n  @ApiProperty()\n  id: number;\n\n  @ApiProperty()\n  name: string;\n\n  @ApiProperty()\n  email: string;\n\n  @ApiProperty()\n  avatar?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/register.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/register.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()@MinLength(8)@MaxLength(16)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/register.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/register.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/register.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport {\n  IsEmail,\n  IsNotEmpty,\n  IsString,\n  MaxLength,\n  MinLength,\n} from 'class-validator';\n\nexport class RegisterDto {\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  username: string;\n\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(8)\n  @MaxLength(16)\n  password: string;\n\n  @ApiPropertyOptional()\n  role: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResponseFormatter.html":{"url":"classes/ResponseFormatter.html","title":"class - ResponseFormatter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResponseFormatter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/response_formatter.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                message\n                            \n                            \n                                    Public\n                                statusCode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatError\n                            \n                            \n                                toJSON\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any, message: string, statusCode: number)\n                    \n                \n                        \n                            \n                                Defined in src/config/response_formatter.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusCode\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/config/response_formatter.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/config/response_formatter.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : HttpStatus.OK\n                    \n                \n                    \n                        \n                                Defined in src/config/response_formatter.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        formatError\n                        \n                    \n                \n            \n            \n                \nformatError(message: string, statusCode: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/config/response_formatter.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                statusCode\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    HttpStatus.INTERNAL_SERVER_ERROR\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     this\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toJSON\n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n                    \n                        \n                            Defined in src/config/response_formatter.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { message: string; statusCode: number; data: any; }\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException,\n  HttpStatus,\n} from '@nestjs/common';\nimport { Response } from 'express';\n\nexport class ResponseFormatter {\n  constructor(\n    public data: any = null,\n    public message: string,\n    public statusCode: number = HttpStatus.OK,\n  ) {}\n\n  formatError(\n    message: string,\n    statusCode: number = HttpStatus.INTERNAL_SERVER_ERROR,\n  ) {\n    this.data = null;\n    this.message = message;\n    this.statusCode = statusCode;\n    return this;\n  }\n\n  toJSON() {\n    return {\n      message: this.message,\n      statusCode: this.statusCode,\n      data: this.data,\n    };\n  }\n}\n\n@Catch()\nexport class AllExceptionsFilter implements ExceptionFilter {\n  catch(exception: unknown, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n\n    const status =\n      exception instanceof HttpException\n        ? exception.getStatus()\n        : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    const message =\n      exception instanceof HttpException\n        ? exception.getResponse().toString()\n        : 'Internal server error';\n\n    const formattedResponse = new ResponseFormatter(\n      null,\n      message,\n      status,\n    ).formatError(message, status);\n\n    response.status(status).json(formattedResponse);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RoleController.html":{"url":"controllers/RoleController.html","title":"controller - RoleController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RoleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/controller/role.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                roles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createRoleDto: CreateRoleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: undefined, description: 'Roles data', type: CreateRoleDto})@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/auth/controller/role.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: undefined, description: 'Roles data', type: RoleDto})@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/auth/controller/role.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: undefined, description: 'Roles data', type: RoleDto})@Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/auth/controller/role.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Param,\n  UseGuards,\n  HttpStatus,\n} from '@nestjs/common';\nimport { RoleService } from '../service/role.service';\nimport { CreateRoleDto, RoleDto } from '../dto/role.dto';\nimport { ApiBearerAuth, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '../auth.guard';\nimport { ResponseFormatter } from 'src/config/response_formatter';\n\n@ApiTags('Roles and Permissions')\n@ApiBearerAuth('accessToken')\n@UseGuards(AuthGuard)\n@Controller('roles')\nexport class RoleController {\n  constructor(private readonly roleService: RoleService) {}\n\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Roles data',\n    type: RoleDto,\n  })\n  @Get()\n  async findAll() {\n    const roles = await this.roleService.findAll();\n\n    return new ResponseFormatter(roles, 'Roles found');\n  }\n\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Roles data',\n    type: CreateRoleDto,\n  })\n  @Post()\n  async create(@Body() createRoleDto: CreateRoleDto) {\n    const role = await this.roleService.create(createRoleDto);\n\n    return new ResponseFormatter(role, 'Role created');\n  }\n\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Roles data',\n    type: RoleDto,\n  })\n  @Get(':id')\n  async findOne(@Param('id') id: string) {\n    const role = await this.roleService.findOne(id);\n\n    return new ResponseFormatter(role, 'Role found');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoleDto.html":{"url":"classes/RoleDto.html","title":"class - RoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/role.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/role.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/role.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class RoleDto {\n  @ApiProperty()\n  id: string;\n\n  @ApiProperty()\n  name: string;\n\n  @ApiProperty()\n  description?: string;\n}\n\nexport class CreateRoleDto {\n  @ApiProperty()\n  name: string;\n\n  @ApiProperty()\n  description?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/RoleEntity.html":{"url":"entities/RoleEntity.html","title":"entity - RoleEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  RoleEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/entities/role.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/entities/role.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/entities/role.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/entities/role.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, user => user.roles)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/entities/role.entity.ts:25\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { BaseEntity } from 'src/config/common/BaseEntity';\nimport {\n  Column,\n  Entity,\n  PrimaryGeneratedColumn,\n  ManyToMany,\n  JoinTable,\n  OneToMany,\n} from 'typeorm';\nimport { UserEntity } from './user.entity';\n\n@Entity('roles')\nexport class RoleEntity extends BaseEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  name: string;\n\n  @Column()\n  description: string;\n\n\n  @ManyToMany(() => UserEntity, (user) => user.roles)\n  users: UserEntity[];\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleService.html":{"url":"injectables/RoleService.html","title":"injectable - RoleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/service/role.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/service/role.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createRoleDto: CreateRoleDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/service/role.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/service/role.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(role_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/service/role.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                role_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm'; // Move the import statement here\nimport { RoleEntity } from '../entities/role.entity';\nimport { CreateRoleDto } from '../dto/role.dto';\n\n@Injectable()\nexport class RoleService {\n  constructor(\n    @InjectRepository(RoleEntity)\n    private readonly roleRepository: Repository,\n  ) {}\n\n  async findAll() {\n    const roles = await this.roleRepository.find({\n      order: {\n        id: 'DESC',\n      },\n    });\n\n    return roles;\n  }\n\n  async findOne(role_id: string) {\n    const role = await this.roleRepository.findOne({\n      where: { id: role_id },\n    });\n\n    if (!role) {\n      throw new NotFoundException('Role not found');\n    }\n\n    return role;\n  }\n\n  async create(createRoleDto: CreateRoleDto) {\n    const newRole = await this.roleRepository.save(createRoleDto);\n\n    return newRole;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnitDtoOut.html":{"url":"classes/UnitDtoOut.html","title":"class - UnitDtoOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnitDtoOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/units/dto/unit.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                coversionFactor\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                unitName\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        coversionFactor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/units/dto/unit.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/units/dto/unit.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/units/dto/unit.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/units/dto/unit.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        unitName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/units/dto/unit.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/units/dto/unit.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\n\nexport class UnitDtoOut {\n    @ApiPropertyOptional()\n    id: number;\n  \n    @ApiProperty()\n    unitName: string;\n  \n    @ApiProperty()\n    coversionFactor: number;\n\n    // @ApiProperty()\n    // baseUnit: string;\n  \n    @ApiProperty()\n    status: boolean;\n  \n    @ApiProperty()\n    createdAt: Date;\n  \n    @ApiProperty()\n    updatedAt: Date;\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UnitEntity.html":{"url":"entities/UnitEntity.html","title":"entity - UnitEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UnitEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/units/entities/unit.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                baseUnit\n                            \n                            \n                                    \n                                coversionFactor\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                unitName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        baseUnit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'base_unit', type: 'varchar'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/units/entities/unit.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        coversionFactor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'coversion_factor', type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/units/entities/unit.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({name: 'deleted_at', type: 'timestamptz', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/units/entities/unit.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/units/entities/unit.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'status', type: 'boolean', default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/units/entities/unit.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        unitName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true, name: 'unit_name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/units/entities/unit.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { BaseEntity } from \"src/config/common/BaseEntity\";\n//import { ProductEntity } from \"src/modules/products/entities/product.entity\";\nimport { \n    Column, \n    DeleteDateColumn, \n    Entity, \n    PrimaryGeneratedColumn, \n} from \"typeorm\";\n\n@Entity('units')\nexport class UnitEntity extends BaseEntity {\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @Column({ unique: true, name: 'unit_name' })\n    unitName: string;\n\n    @Column({ name: 'coversion_factor', type: 'int' })\n    coversionFactor: number; // Faktor konversi untuk setiap unit\n\n    @Column({ name: 'base_unit', type: 'varchar' })\n    baseUnit: string; // Unit dasar yang digunakan untuk konversi\n\n    @Column({ name: 'status', type: 'boolean', default: false })\n    status: boolean;\n\n    @DeleteDateColumn({ name: 'deleted_at', type: 'timestamptz', nullable: true })\n    deletedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UnitsController.html":{"url":"controllers/UnitsController.html","title":"controller - UnitsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UnitsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/units/units.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                units\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUnitDto: CreateUnitDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: undefined, description: 'Unit data', type: CreateUnitDto})@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/units/units.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUnitDto\n                                            \n                                                            CreateUnitDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: undefined, description: 'Unit data', type: UnitDtoOut})@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/units/units.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: undefined, description: 'Unit data', type: UnitDtoOut})@Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/units/units.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/units/units.controller.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateUnitDto: UpdateUnitDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: undefined, description: 'Unit data', type: UpdateUnitDto})@Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/units/units.controller.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUnitDto\n                                            \n                                                            UpdateUnitDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { \n  Controller, \n  Get, \n  Post, \n  Body, \n  Patch, \n  Param, \n  Delete, \n  HttpStatus,\n  UseGuards\n} from '@nestjs/common';\nimport { UnitsService } from './units.service';\nimport { CreateUnitDto } from './dto/create-unit.dto';\nimport { UpdateUnitDto } from './dto/update-unit.dto';\nimport { ApiBearerAuth, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { ResponseFormatter } from 'src/config/response_formatter';\nimport { AuthGuard } from '../auth/auth.guard';\nimport { UnitDtoOut } from './dto/unit.dto';\n\n@ApiTags('Unit')\n@ApiBearerAuth('accessToken')\n@Controller('units')\n@UseGuards(AuthGuard)\nexport class UnitsController {\n  constructor(private readonly unitsService: UnitsService) {}\n\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Unit data',\n    type: CreateUnitDto,\n  })\n\n  @Post()\n  async create(@Body() createUnitDto: CreateUnitDto) {\n    const unit = await this.unitsService.create(createUnitDto);\n\n    return new ResponseFormatter(unit, 'Unit created');\n  }\n\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Unit data',\n    type: UnitDtoOut,\n  })\n\n  @Get()\n  async findAll(): Promise {\n    const units = await this.unitsService.findAll();\n\n    return new ResponseFormatter(units, 'Units found');\n  }\n\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Unit data',\n    type: UnitDtoOut,\n  })\n\n  @Get(':id')\n  async findOne(@Param('id') id: string) {\n    const unit = await this.unitsService.findOne(+id);\n\n    return new ResponseFormatter(unit, 'Unit found');\n  }\n\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Unit data',\n    type: UpdateUnitDto,\n  })\n\n  @Patch(':id')\n  async update(\n    @Param('id') id: string, \n    @Body() updateUnitDto: UpdateUnitDto,\n  ) {\n    const unit = await this.unitsService.update(\n      +id, \n      updateUnitDto\n    );\n\n    return new ResponseFormatter(unit, 'Unit updated');\n  }\n\n  @Delete(':id')\n  async remove(@Param('id') id: string) {\n    const unit = await this.unitsService.remove(+id);\n\n    return new ResponseFormatter(unit, 'Unit deleted');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UnitsModule.html":{"url":"modules/UnitsModule.html","title":"module - UnitsModule","body":"\n                   \n\n\n\n\n    Modules\n    UnitsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UnitsModule\n\n\n\ncluster_UnitsModule_providers\n\n\n\n\nUnitsService\n\nUnitsService\n\n\n\nUnitsModule\n\nUnitsModule\n\nUnitsModule -->\n\nUnitsService->UnitsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/units/units.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UnitsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UnitsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UnitsService } from './units.service';\nimport { UnitsController } from './units.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UnitEntity } from './entities/unit.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([UnitEntity])],\n  controllers: [UnitsController],\n  providers: [UnitsService],\n})\nexport class UnitsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UnitsService.html":{"url":"injectables/UnitsService.html","title":"injectable - UnitsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UnitsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/units/units.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(unitRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/units/units.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        unitRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: CreateUnitDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/units/units.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            CreateUnitDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/units/units.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/units/units.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/units/units.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, data: UpdateUnitDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/units/units.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            UpdateUnitDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { CreateUnitDto } from './dto/create-unit.dto';\nimport { UpdateUnitDto } from './dto/update-unit.dto';\nimport { UnitEntity } from './entities/unit.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class UnitsService {\n  constructor(\n    @InjectRepository(UnitEntity)\n    private readonly unitRepository: Repository,\n\n    // @Inject(REQUEST) private req: any,\n  ) {}\n\n  async create(data: CreateUnitDto) {\n    const unit = this.unitRepository.create(data);\n\n    return await this.unitRepository.save(unit);\n  }\n\n  async findAll() {\n    const units = await this.unitRepository.find({\n      order: {\n        id: 'DESC',\n      },\n    });\n\n    return units;\n  }\n\n  async findOne(id: number) {\n    const unit = await this.unitRepository.findOne({\n      where: {\n        id: id,\n      },\n    });\n\n    if (!unit) {\n      throw new NotFoundException('Unit not found');\n    }\n\n    return unit;\n  }\n\n  async update(id: number, data: UpdateUnitDto) {\n    const unit = await this.unitRepository.findOne({\n      where: {\n        id: id,\n      },\n    });\n\n    if (!unit) {\n      throw new NotFoundException('Unit not found');\n    }\n\n    Object.assign(unit, data);\n\n    return await this.unitRepository.save(unit);\n  }\n\n  async remove(id: number) {\n    const unit = await this.unitRepository.findOne({\n      withDeleted: true,\n      where: {\n        id: id\n      },\n    });\n\n    if (!unit) {\n      throw new NotFoundException('Unit not found');\n    }\n\n    return await this.unitRepository.softRemove(unit);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCategoryDto.html":{"url":"classes/UpdateCategoryDto.html","title":"class - UpdateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/categories/dto/update-category.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateCategoryDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateCategoryDto } from './create-category.dto';\n\nexport class UpdateCategoryDto extends PartialType(CreateCategoryDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProductDto.html":{"url":"classes/UpdateProductDto.html","title":"class - UpdateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/dto/update-product.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateProductDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateProductDto } from './create-product.dto';\n\nexport class UpdateProductDto extends PartialType(CreateProductDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUnitDto.html":{"url":"classes/UpdateUnitDto.html","title":"class - UpdateUnitDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUnitDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/units/dto/update-unit.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateUnitDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUnitDto } from './create-unit.dto';\n\nexport class UpdateUnitDto extends PartialType(CreateUnitDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UserEntity.html":{"url":"entities/UserEntity.html","title":"entity - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                avatar\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                    Optional\n                                role\n                            \n                            \n                                    \n                                    \n                                roles\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/entities/user.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/entities/user.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/entities/user.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/entities/user.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: 'USER'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/entities/user.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, role => role.users)@JoinTable({name: 'user_role', joinColumn: undefined, inverseJoinColumn: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/entities/user.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/entities/user.entity.ts:18\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { BaseEntity } from 'src/config/common/BaseEntity';\nimport {\n  Column,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  OneToMany,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\nimport { RoleEntity } from './role.entity';\n\n@Entity('users')\nexport class UserEntity extends BaseEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  username: string;\n\n  @Column({ unique: true })\n  email: string;\n\n  @Column()\n  password: string;\n\n  @Column({ nullable: true })\n  avatar?: string;\n\n  @Column({ default: \"USER\" })\n  role?: string;\n\n  @ManyToMany(() => RoleEntity, (role) => role.users)\n  @JoinTable({\n    name: 'user_role',\n    joinColumn: { name: 'user_id', referencedColumnName: 'id' },\n    inverseJoinColumn: { name: 'role_id', referencedColumnName: 'id' },\n  })\n  roles: RoleEntity[];\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/config/common/BaseEntity.ts\n            \n            class\n            BaseEntity\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/config/config_jwt.ts\n            \n            variable\n            jwt_config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/ormconfig.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/response_formatter.ts\n            \n            class\n            AllExceptionsFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/config/response_formatter.ts\n            \n            class\n            ResponseFormatter\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.guard.ts\n            \n            class\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/controller/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/auth/controller/role.controller.ts\n            \n            controller\n            RoleController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/permission.dto.ts\n            \n            class\n            CreatePermissionDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/permission.dto.ts\n            \n            class\n            PermissionDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/profile.dto.ts\n            \n            class\n            ProfileDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/register.dto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/role.dto.ts\n            \n            class\n            CreateRoleDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/role.dto.ts\n            \n            class\n            RoleDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/auth/entities/role.entity.ts\n            \n            entity\n            RoleEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/entities/user.entity.ts\n            \n            entity\n            UserEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/service/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/modules/auth/service/role.service.ts\n            \n            injectable\n            RoleService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/categories/categories.controller.ts\n            \n            controller\n            CategoriesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/categories/categories.service.ts\n            \n            injectable\n            CategoriesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/categories/dto/category.dto.ts\n            \n            class\n            CategoryDtoOut\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/categories/dto/create-category.dto.ts\n            \n            class\n            CreateCategoryDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/categories/dto/update-category.dto.ts\n            \n            class\n            UpdateCategoryDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/categories/entities/category.entity.ts\n            \n            entity\n            CategoryEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/products/dto/create-product.dto.ts\n            \n            class\n            CreateProductDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/products/dto/product-images.dto.ts\n            \n            class\n            ProductImagesDtoIn\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/products/dto/product-images.dto.ts\n            \n            class\n            ProductImagesDtoOut\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/products/dto/product.dto.ts\n            \n            class\n            ProductDtoOut\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/products/dto/update-product.dto.ts\n            \n            class\n            UpdateProductDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/products/entities/product-images.entity.ts\n            \n            entity\n            ProductImagesEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/products/entities/product.entity.ts\n            \n            entity\n            ProductEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/products/product-images/product-images.controller.ts\n            \n            controller\n            ProductImagesController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/products/product-images/product-images.service.ts\n            \n            injectable\n            ProductImagesService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/products/products.controller.ts\n            \n            controller\n            ProductsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/products/products.service.ts\n            \n            injectable\n            ProductsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/units/dto/create-unit.dto.ts\n            \n            class\n            CreateUnitDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/units/dto/unit.dto.ts\n            \n            class\n            UnitDtoOut\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/units/dto/update-unit.dto.ts\n            \n            class\n            UpdateUnitDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/units/entities/unit.entity.ts\n            \n            entity\n            UnitEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/units/units.controller.ts\n            \n            controller\n            UnitsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/units/units.service.ts\n            \n            injectable\n            UnitsService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.2.2\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/serve-static : ^4.0.2\n        \n            @nestjs/swagger : ^7.3.1\n        \n            @nestjs/typeorm : ^10.0.2\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            dotenv : ^16.4.5\n        \n            passport-jwt : ^4.0.1\n        \n            pg : ^8.11.5\n        \n            pgsql : ^1.0.0\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.20\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ npm installRunning the app\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CategoriesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UnitsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CategoriesModule\n\n\n\ncluster_CategoriesModule_providers\n\n\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_providers\n\n\n\ncluster_UnitsModule\n\n\n\ncluster_UnitsModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nAppModule -->\n\nCategoriesModule->AppModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nRoleService\n\nRoleService\n\nAuthModule -->\n\nRoleService->AuthModule\n\n\n\n\n\nCategoriesService\n\nCategoriesService\n\nCategoriesModule -->\n\nCategoriesService->CategoriesModule\n\n\n\n\n\nProductImagesService\n\nProductImagesService\n\nProductsModule -->\n\nProductImagesService->ProductsModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\nUnitsService\n\nUnitsService\n\n\n\nUnitsModule\n\nUnitsModule\n\nUnitsModule -->\n\nUnitsService->UnitsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    22 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            config   (src/.../ormconfig.ts)\n                        \n                        \n                            jwt_config   (src/.../config_jwt.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/ormconfig.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TypeOrmModuleOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  type: process.env.DB_CONNECTION === 'postgres' ? 'postgres' : 'postgres',\n  host: process.env.DB_HOST,\n  port: Number(process.env.DB_PORT) || 5432,\n  username: process.env.DB_USERNAME,\n  password: process.env.DB_PASSWORD,\n  database: process.env.DB_DATABASE,\n  // entities: [filePathPattern, fileCommonPattern],\n  entities: [__dirname + '/../**/*.entity.{js,ts}'],\n  synchronize: true,\n}\n                    \n                \n\n\n        \n    \n\n    src/config/config_jwt.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwt_config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  secret: 'abcdefghij',\n  expired: 31536000, // 1 year in seconds\n  // expired: 86400, // 24 hours in seconds\n  // expired: 3600, // 1 hour in seconds\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
